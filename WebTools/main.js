var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
System.register("helpers/attributes", [], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var Attribute, Attributes, AttributesHelper;
    return {
        setters:[],
        execute: function() {
            (function (Attribute) {
                Attribute[Attribute["Agility"] = 0] = "Agility";
                Attribute[Attribute["Awareness"] = 1] = "Awareness";
                Attribute[Attribute["Brawn"] = 2] = "Brawn";
                Attribute[Attribute["Coordination"] = 3] = "Coordination";
                Attribute[Attribute["Intelligence"] = 4] = "Intelligence";
                Attribute[Attribute["Personality"] = 5] = "Personality";
                Attribute[Attribute["Willpower"] = 6] = "Willpower";
            })(Attribute || (Attribute = {}));
            exports_1("Attribute", Attribute);
            Attributes = (function () {
                function Attributes() {
                }
                Attributes.prototype.getAttributeName = function (attr) {
                    return Attribute[attr];
                };
                Attributes.prototype.getAttributeByName = function (attr) {
                    if (attr === "Agility")
                        return Attribute.Agility;
                    else if (attr === "Awareness")
                        return Attribute.Awareness;
                    else if (attr === "Brawn")
                        return Attribute.Brawn;
                    else if (attr === "Coordination")
                        return Attribute.Coordination;
                    else if (attr === "Intelligence")
                        return Attribute.Intelligence;
                    else if (attr === "Personality")
                        return Attribute.Personality;
                    else if (attr === "Willpower")
                        return Attribute.Willpower;
                };
                return Attributes;
            }());
            exports_1("Attributes", Attributes);
            exports_1("AttributesHelper", AttributesHelper = new Attributes());
        }
    }
});
System.register("helpers/skills", ["helpers/attributes"], function(exports_2, context_2) {
    "use strict";
    var __moduleName = context_2 && context_2.id;
    var attributes_1;
    var Skill, SkillModel, Skills, SkillsHelper;
    return {
        setters:[
            function (attributes_1_1) {
                attributes_1 = attributes_1_1;
            }],
        execute: function() {
            (function (Skill) {
                Skill[Skill["Acrobatics"] = 0] = "Acrobatics";
                Skill[Skill["Analysis"] = 1] = "Analysis";
                Skill[Skill["Animal_Handling"] = 2] = "Animal_Handling";
                Skill[Skill["Athletics"] = 3] = "Athletics";
                Skill[Skill["Ballistics"] = 4] = "Ballistics";
                Skill[Skill["Close_Combat"] = 5] = "Close_Combat";
                Skill[Skill["Command"] = 6] = "Command";
                Skill[Skill["Discipline"] = 7] = "Discipline";
                Skill[Skill["Education"] = 8] = "Education";
                Skill[Skill["Extraplanetary"] = 9] = "Extraplanetary";
                Skill[Skill["Hacking"] = 10] = "Hacking";
                Skill[Skill["Lifestyle"] = 11] = "Lifestyle";
                Skill[Skill["Medicine"] = 12] = "Medicine";
                Skill[Skill["Observation"] = 13] = "Observation";
                Skill[Skill["Persuade"] = 14] = "Persuade";
                Skill[Skill["Pilot"] = 15] = "Pilot";
                Skill[Skill["Psychology"] = 16] = "Psychology";
                Skill[Skill["Resistance"] = 17] = "Resistance";
                Skill[Skill["Science"] = 18] = "Science";
                Skill[Skill["Spacecraft"] = 19] = "Spacecraft";
                Skill[Skill["Stealth"] = 20] = "Stealth";
                Skill[Skill["Survival"] = 21] = "Survival";
                Skill[Skill["Tech"] = 22] = "Tech";
                Skill[Skill["Thievery"] = 23] = "Thievery";
            })(Skill || (Skill = {}));
            exports_2("Skill", Skill);
            SkillModel = (function () {
                function SkillModel(name, attr) {
                    this.name = name;
                    this.attribute = attr;
                }
                return SkillModel;
            }());
            Skills = (function () {
                function Skills() {
                    this._skills = (_a = {},
                        _a[Skill.Acrobatics] = new SkillModel("Acrobatics", attributes_1.Attribute.Agility),
                        _a[Skill.Analysis] = new SkillModel("Analysis", attributes_1.Attribute.Awareness),
                        _a[Skill.Animal_Handling] = new SkillModel("Animal Handling", attributes_1.Attribute.Personality),
                        _a[Skill.Athletics] = new SkillModel("Athletics", attributes_1.Attribute.Brawn),
                        _a[Skill.Ballistics] = new SkillModel("Ballistics", attributes_1.Attribute.Coordination),
                        _a[Skill.Close_Combat] = new SkillModel("Close Combat", attributes_1.Attribute.Agility),
                        _a[Skill.Command] = new SkillModel("Command", attributes_1.Attribute.Personality),
                        _a[Skill.Discipline] = new SkillModel("Discipline", attributes_1.Attribute.Willpower),
                        _a[Skill.Education] = new SkillModel("Education", attributes_1.Attribute.Intelligence),
                        _a[Skill.Extraplanetary] = new SkillModel("Extraplanetary", attributes_1.Attribute.Awareness),
                        _a[Skill.Hacking] = new SkillModel("Hacking", attributes_1.Attribute.Intelligence),
                        _a[Skill.Lifestyle] = new SkillModel("Lifestyle", attributes_1.Attribute.Personality),
                        _a[Skill.Medicine] = new SkillModel("Medicine", attributes_1.Attribute.Intelligence),
                        _a[Skill.Observation] = new SkillModel("Observation", attributes_1.Attribute.Awareness),
                        _a[Skill.Persuade] = new SkillModel("Persuade", attributes_1.Attribute.Personality),
                        _a[Skill.Pilot] = new SkillModel("Pilot", attributes_1.Attribute.Coordination),
                        _a[Skill.Psychology] = new SkillModel("Psychology", attributes_1.Attribute.Intelligence),
                        _a[Skill.Resistance] = new SkillModel("Resistance", attributes_1.Attribute.Brawn),
                        _a[Skill.Science] = new SkillModel("Science", attributes_1.Attribute.Intelligence),
                        _a[Skill.Spacecraft] = new SkillModel("Spacecraft", attributes_1.Attribute.Coordination),
                        _a[Skill.Stealth] = new SkillModel("Stealth", attributes_1.Attribute.Agility),
                        _a[Skill.Survival] = new SkillModel("Survival", attributes_1.Attribute.Awareness),
                        _a[Skill.Tech] = new SkillModel("Tech", attributes_1.Attribute.Intelligence),
                        _a[Skill.Thievery] = new SkillModel("Thievery", attributes_1.Attribute.Awareness),
                        _a
                    );
                    var _a;
                }
                Skills.prototype.getSkills = function () {
                    var skills = [];
                    for (var s = 0; s <= Skill.Thievery; s++) {
                        skills.push(s);
                    }
                    return skills;
                };
                Skills.prototype.getSkill = function (skill) {
                    return this._skills[skill];
                };
                Skills.prototype.getSkillName = function (skill) {
                    return this._skills[skill].name;
                };
                Skills.prototype.getSkillByName = function (name) {
                    var n = 0;
                    for (var skill in this._skills) {
                        if (this._skills[skill].name === name) {
                            return n;
                        }
                        n++;
                    }
                    return null;
                };
                Skills.prototype.getSkillsForAttribute = function (attr) {
                    var skills = [];
                    for (var skill in this._skills) {
                        var s = this._skills[skill];
                        if (s.attribute === attr) {
                            skills.push(skill);
                        }
                    }
                    return skills;
                };
                Skills.prototype.getAttributeForSkill = function (skill) {
                    return this._skills[skill].attribute;
                };
                return Skills;
            }());
            exports_2("Skills", Skills);
            exports_2("SkillsHelper", SkillsHelper = new Skills());
        }
    }
});
System.register("helpers/factions", ["common/character", "helpers/skills"], function(exports_3, context_3) {
    "use strict";
    var __moduleName = context_3 && context_3.id;
    var character_1, skills_1;
    var Faction, FactionModel, FactionViewModel, Factions, FactionsHelper;
    return {
        setters:[
            function (character_1_1) {
                character_1 = character_1_1;
            },
            function (skills_1_1) {
                skills_1 = skills_1_1;
            }],
        execute: function() {
            (function (Faction) {
                Faction[Faction["Ariadna"] = 0] = "Ariadna";
                Faction[Faction["Haqqislam"] = 1] = "Haqqislam";
                Faction[Faction["Nomads"] = 2] = "Nomads";
                Faction[Faction["PanOceania"] = 3] = "PanOceania";
                Faction[Faction["YuJing"] = 4] = "YuJing";
                Faction[Faction["Corporation"] = 5] = "Corporation";
                Faction[Faction["Submondo"] = 6] = "Submondo";
                Faction[Faction["Mercenary"] = 7] = "Mercenary";
                Faction[Faction["MinorNation"] = 8] = "MinorNation";
                Faction[Faction["O12"] = 9] = "O12";
                Faction[Faction["Aleph"] = 10] = "Aleph";
                Faction[Faction["Defection"] = 11] = "Defection";
            })(Faction || (Faction = {}));
            exports_3("Faction", Faction);
            FactionModel = (function () {
                function FactionModel(name, skills, needsHeritage) {
                    this.name = name;
                    this.skills = skills;
                    this.needsHeritage = needsHeritage;
                }
                return FactionModel;
            }());
            FactionViewModel = (function (_super) {
                __extends(FactionViewModel, _super);
                function FactionViewModel(id, base) {
                    _super.call(this, base.name, base.skills, base.needsHeritage);
                    this.id = id;
                }
                return FactionViewModel;
            }(FactionModel));
            exports_3("FactionViewModel", FactionViewModel);
            Factions = (function () {
                function Factions() {
                    this._factions = (_a = {},
                        _a[Faction.Ariadna] = new FactionModel("Ariadna", [skills_1.Skill.Survival, skills_1.Skill.Medicine], false),
                        _a[Faction.Haqqislam] = new FactionModel("Haqqislam", [skills_1.Skill.Medicine, skills_1.Skill.Education], false),
                        _a[Faction.Nomads] = new FactionModel("Nomads", [skills_1.Skill.Hacking, skills_1.Skill.Extraplanetary], false),
                        _a[Faction.PanOceania] = new FactionModel("PanOceania", [skills_1.Skill.Tech, skills_1.Skill.Lifestyle], false),
                        _a[Faction.YuJing] = new FactionModel("Yu Jing", [skills_1.Skill.Tech, skills_1.Skill.Education], false),
                        _a[Faction.Corporation] = new FactionModel("Corporation", [skills_1.Skill.Lifestyle, skills_1.Skill.Persuade], true),
                        _a[Faction.Submondo] = new FactionModel("Submondo", [skills_1.Skill.Observation, skills_1.Skill.Thievery], true),
                        _a[Faction.Mercenary] = new FactionModel("Mercenary", [skills_1.Skill.Athletics, skills_1.Skill.Survival], true),
                        _a[Faction.MinorNation] = new FactionModel("Minor Nation", [skills_1.Skill.Education, skills_1.Skill.Pilot], false),
                        _a[Faction.O12] = new FactionModel("O-12", [skills_1.Skill.Education, skills_1.Skill.Persuade], false),
                        _a[Faction.Aleph] = new FactionModel("ALEPH", [skills_1.Skill.Analysis, skills_1.Skill.Education], false),
                        _a
                    );
                    var _a;
                }
                Factions.prototype.getFactions = function () {
                    var factions = [];
                    var n = 0;
                    for (var faction in this._factions) {
                        if (n === Faction.Defection) {
                            continue;
                        }
                        var f = this._factions[faction];
                        factions.push(new FactionViewModel(n, f));
                        n++;
                    }
                    return factions;
                };
                Factions.prototype.getFaction = function (faction) {
                    return this._factions[faction];
                };
                Factions.prototype.getFactionByName = function (name) {
                    var n = 0;
                    for (var faction in this._factions) {
                        var f = this._factions[faction];
                        if (f.name === name) {
                            return n;
                        }
                        n++;
                    }
                    return undefined;
                };
                Factions.prototype.generateFaction = function (hasDefected, ignoreDefection) {
                    var roll = ignoreDefection ? Math.floor(Math.random() * 19) + 1 : Math.floor(Math.random() * 20) + 1;
                    var faction = undefined;
                    switch (roll) {
                        case 1:
                        case 2:
                            faction = Faction.Ariadna;
                            break;
                        case 3:
                        case 4:
                            faction = Faction.Haqqislam;
                            break;
                        case 5:
                        case 6:
                            faction = Faction.Nomads;
                            break;
                        case 7:
                        case 8:
                            faction = Faction.YuJing;
                            break;
                        case 9:
                        case 10:
                            faction = Faction.PanOceania;
                            break;
                        case 11:
                        case 12:
                            faction = !hasDefected ? Faction.Corporation : this.generateFaction(hasDefected);
                            break;
                        case 13:
                        case 14:
                            faction = !hasDefected ? Faction.Submondo : this.generateFaction(hasDefected);
                            break;
                        case 15:
                        case 16:
                            faction = !hasDefected ? Faction.Mercenary : this.generateFaction(hasDefected);
                            break;
                        case 17:
                            faction = Faction.MinorNation;
                            break;
                        case 18:
                            faction = Faction.O12;
                            break;
                        case 19:
                            faction = Faction.Aleph;
                            break;
                        case 20:
                            if (!hasDefected) {
                                faction = Faction.Defection;
                            }
                            else {
                                faction = this.generateFaction(hasDefected);
                            }
                            break;
                    }
                    return faction;
                };
                Factions.prototype.generateHeritage = function () {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    var faction = undefined;
                    switch (roll) {
                        case 1:
                        case 2:
                            faction = Faction.Ariadna;
                            break;
                        case 3:
                        case 4:
                            faction = Faction.Haqqislam;
                            break;
                        case 5:
                        case 6:
                            faction = Faction.Nomads;
                            break;
                        case 7:
                        case 8:
                            faction = Faction.YuJing;
                            break;
                        case 9:
                        case 10:
                            faction = Faction.PanOceania;
                            break;
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                            faction = Faction.MinorNation;
                            break;
                        case 18:
                            faction = Faction.O12;
                            break;
                        case 19:
                            faction = Faction.Aleph;
                            break;
                        case 20:
                            faction = this.generateHeritage();
                            break;
                    }
                    return faction;
                };
                Factions.prototype.getBirthPlaceType = function (faction) {
                    switch (faction) {
                        case Faction.Ariadna:
                        case Faction.Haqqislam: return "Homeland";
                        case Faction.Nomads: return "Mothership";
                        case Faction.PanOceania:
                        case Faction.YuJing: return "Homeworld";
                        case Faction.MinorNation: return "Nation";
                        case Faction.O12:
                        case Faction.Aleph: return "Concilium";
                    }
                    return "";
                };
                Factions.prototype.applyFaction = function (faction) {
                    var f = this.getFaction(faction);
                    f.skills.forEach(function (s) {
                        character_1.character.skills[s].expertise++;
                    });
                    if (faction === Faction.Aleph || character_1.character.heritage === Faction.Aleph) {
                        character_1.character.hostName = "Standard Lhost";
                    }
                };
                return Factions;
            }());
            exports_3("Factions", Factions);
            exports_3("FactionsHelper", FactionsHelper = new Factions());
        }
    }
});
System.register("helpers/sources", [], function(exports_4, context_4) {
    "use strict";
    var __moduleName = context_4 && context_4.id;
    var Source, SourceModel, SourceViewModel, Sources, SourcesHelper;
    return {
        setters:[],
        execute: function() {
            (function (Source) {
                Source[Source["Core"] = 0] = "Core";
                Source[Source["Ariadna"] = 1] = "Ariadna";
                Source[Source["Haqqislam"] = 2] = "Haqqislam";
                Source[Source["PanOceania"] = 3] = "PanOceania";
            })(Source || (Source = {}));
            exports_4("Source", Source);
            SourceModel = (function () {
                function SourceModel(name) {
                    this.name = name;
                }
                return SourceModel;
            }());
            SourceViewModel = (function (_super) {
                __extends(SourceViewModel, _super);
                function SourceViewModel(id, base) {
                    _super.call(this, base.name);
                    this.id = id;
                }
                return SourceViewModel;
            }(SourceModel));
            Sources = (function () {
                function Sources() {
                    this._sources = (_a = {},
                        _a[Source.Core] = { name: "Core" },
                        _a[Source.Ariadna] = { name: "Ariadna" },
                        _a[Source.Haqqislam] = { name: "Haqqislam" },
                        _a[Source.PanOceania] = { name: "PanOceania" },
                        _a
                    );
                    var _a;
                }
                Sources.prototype.getSources = function () {
                    var sources = [];
                    var n = 0;
                    for (var source in this._sources) {
                        var src = this._sources[source];
                        sources.push(new SourceViewModel(n, src));
                        n++;
                    }
                    return sources;
                };
                return Sources;
            }());
            exports_4("Sources", Sources);
            exports_4("SourcesHelper", SourcesHelper = new Sources());
        }
    }
});
System.register("helpers/alienHosts", ["common/character", "helpers/factions", "helpers/sources"], function(exports_5, context_5) {
    "use strict";
    var __moduleName = context_5 && context_5.id;
    var character_2, factions_1, sources_1;
    var AlienHost, AlienHostModel, AlienHostViewModel, AlienHosts, AlienHostsHelper;
    return {
        setters:[
            function (character_2_1) {
                character_2 = character_2_1;
            },
            function (factions_1_1) {
                factions_1 = factions_1_1;
            },
            function (sources_1_1) {
                sources_1 = sources_1_1;
            }],
        execute: function() {
            (function (AlienHost) {
                AlienHost[AlienHost["Human"] = 0] = "Human";
                AlienHost[AlienHost["Dogface"] = 1] = "Dogface";
                AlienHost[AlienHost["Antipode"] = 2] = "Antipode";
                AlienHost[AlienHost["Wulver"] = 3] = "Wulver";
                AlienHost[AlienHost["Helot"] = 4] = "Helot";
            })(AlienHost || (AlienHost = {}));
            exports_5("AlienHost", AlienHost);
            AlienHostModel = (function () {
                function AlienHostModel(name, faction, attributes, attacks, abilities, cost, source) {
                    this.name = name;
                    this.faction = faction;
                    this.attributeBonuses = attributes;
                    this.attacks = attacks;
                    this.abilities = abilities;
                    this.cost = cost;
                    this.source = source;
                }
                return AlienHostModel;
            }());
            AlienHostViewModel = (function (_super) {
                __extends(AlienHostViewModel, _super);
                function AlienHostViewModel(id, base) {
                    _super.call(this, base.name, base.faction, base.attributeBonuses, base.attacks, base.abilities, base.cost, base.source);
                    this.id = id;
                }
                return AlienHostViewModel;
            }(AlienHostModel));
            exports_5("AlienHostViewModel", AlienHostViewModel);
            AlienHosts = (function () {
                function AlienHosts() {
                    this._hosts = (_a = {},
                        _a[AlienHost.Human] = new AlienHostModel("Human", "", [0, 0, 0, 0, 0, 0, 0], [], [], 0, sources_1.Source.Core),
                        _a[AlienHost.Dogface] = new AlienHostModel("Dogface", "Ariadna", [0, 0, 0, 0, 0, 0, 0], [
                            "Claws: Melee, 1+2[CD], Subtle 1, Vicious 1"
                        ], [
                            "Scent",
                            "Transform"
                        ], 3, sources_1.Source.Core),
                        _a[AlienHost.Antipode] = new AlienHostModel("Antipode", "Ariadna", [2, 1, 2, -1, -2, 0], [
                            "Claws: Melee, 1+2[CD], Subtle 1, Vicious 1"
                        ], [
                            "Scent",
                            "Thick-Skinned",
                            "Monstrous",
                            "Super-Jump",
                            "Primal Technology",
                            "Pack Mentality",
                            "Trinary Mind",
                            "Quantronically Inert"
                        ], 2, sources_1.Source.Ariadna),
                        _a[AlienHost.Wulver] = new AlienHostModel("Wulver", "Ariadna", [1, 1, 1, -1, 0, -1, -1], [
                            "Claws: Melee, 1+1[CD], Subtle 1, Vicious 1"
                        ], [
                            "Scent",
                            "Naturally Tough",
                            "Monstrous",
                            "Furious",
                            "Super-Jump",
                            "Odd Fit"
                        ], 3, sources_1.Source.Ariadna),
                        _a[AlienHost.Helot] = new AlienHostModel("Helot", "PanOceania", [0, 1, 0, 0, 0, 1, -1], [], [
                            "Amphibious",
                            "Inured to Cold",
                            "Pressure Sensitive",
                            "Pressure Modifications"
                        ], 2, sources_1.Source.PanOceania),
                        _a
                    );
                    var _a;
                }
                AlienHosts.prototype.getAlienHosts = function () {
                    var hosts = [];
                    var n = 0;
                    for (var host in this._hosts) {
                        var h = this._hosts[host];
                        if (character_2.character.hasSource(h.source)) {
                            hosts.push(new AlienHostViewModel(n, h));
                        }
                        n++;
                    }
                    return hosts;
                };
                AlienHosts.prototype.getAlienHost = function (host) {
                    return this._hosts[host];
                };
                AlienHosts.prototype.applyAlienHost = function (host) {
                    var h = this.getAlienHost(host);
                    for (var i = 0; i < h.attributeBonuses.length; i++) {
                        character_2.character.attributes[i].value += h.attributeBonuses[i];
                        character_2.character.modifiers[i].value += h.attributeBonuses[i];
                    }
                    h.attacks.forEach(function (attack) {
                        character_2.character.hostAbilities.push(attack);
                    });
                    h.abilities.forEach(function (ability) {
                        character_2.character.hostAbilities.push(ability);
                    });
                    character_2.character.lifePoints -= h.cost;
                    if (host === AlienHost.Human) {
                        character_2.character.hostName = "Birth";
                    }
                    else {
                        character_2.character.hostName = this._hosts[host].name;
                    }
                    switch (host) {
                        case AlienHost.Human:
                            break;
                        case AlienHost.Dogface:
                        case AlienHost.Antipode:
                        case AlienHost.Wulver:
                            character_2.character.faction = character_2.character.heritage = factions_1.Faction.Ariadna;
                            break;
                        case AlienHost.Helot:
                            character_2.character.addTalent("Strong Swimmer");
                            character_2.character.faction = character_2.character.heritage = factions_1.Faction.PanOceania;
                            break;
                    }
                };
                return AlienHosts;
            }());
            exports_5("AlienHosts", AlienHosts);
            exports_5("AlienHostsHelper", AlienHostsHelper = new AlienHosts());
        }
    }
});
System.register("common/eventModel", [], function(exports_6, context_6) {
    "use strict";
    var __moduleName = context_6 && context_6.id;
    var EventModel;
    return {
        setters:[],
        execute: function() {
            EventModel = (function () {
                function EventModel(event, trait, effect, detailView) {
                    this.event = event;
                    this.trait = trait;
                    this.effect = effect;
                    this.detailView = detailView;
                }
                return EventModel;
            }());
            exports_6("EventModel", EventModel);
        }
    }
});
System.register("helpers/diceRoller", [], function(exports_7, context_7) {
    "use strict";
    var __moduleName = context_7 && context_7.id;
    var DiceRollResult, SpecialDiceRollResult, Roller, DiceRoller;
    return {
        setters:[],
        execute: function() {
            DiceRollResult = (function () {
                function DiceRollResult() {
                }
                return DiceRollResult;
            }());
            exports_7("DiceRollResult", DiceRollResult);
            SpecialDiceRollResult = (function () {
                function SpecialDiceRollResult() {
                }
                return SpecialDiceRollResult;
            }());
            exports_7("SpecialDiceRollResult", SpecialDiceRollResult);
            Roller = (function () {
                function Roller() {
                }
                Roller.prototype.roll = function (targetValue, focus, difficulty, numDice) {
                    if (!numDice) {
                        numDice = 2;
                    }
                    var result = new DiceRollResult();
                    result.targetValue = targetValue;
                    result.numDice = numDice;
                    result.difficulty = difficulty;
                    result.successes = 0;
                    result.hasRepercusions = false;
                    for (var i = 0; i < numDice; i++) {
                        var roll = Math.floor(Math.random() * 20) + 1;
                        if (roll <= targetValue) {
                            result.successes++;
                            if (roll <= focus) {
                                result.successes++;
                            }
                        }
                        else {
                            if (roll === 20) {
                                result.hasRepercusions = true;
                            }
                        }
                    }
                    return result;
                };
                Roller.prototype.rollSpecial = function (numDice, bonus) {
                    var result = new SpecialDiceRollResult();
                    result.numDice = numDice;
                    result.bonus = bonus;
                    result.hits = 0;
                    result.special = 0;
                    for (var i = 0; i < numDice; i++) {
                        switch (Math.floor(Math.random() * 6) + 1) {
                            case 1:
                                result.hits++;
                                break;
                            case 2:
                                result.hits += 2;
                                break;
                            case 3:
                            case 4:
                            case 5: break;
                            case 6:
                                result.special++;
                                break;
                        }
                    }
                    return result;
                };
                Roller.prototype.rollHitLocation = function () {
                    var location = "";
                    var roll = Math.floor(Math.random() * 20) + 1;
                    switch (roll) {
                        case 1:
                        case 2:
                            location = "head";
                            break;
                        case 3:
                        case 4:
                        case 5:
                            location = "right arm";
                            break;
                        case 6:
                        case 7:
                        case 8:
                            location = "left arm";
                            break;
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                            location = "torso";
                            break;
                        case 15:
                        case 16:
                        case 17:
                            location = "right leg";
                            break;
                        case 18:
                        case 19:
                        case 20:
                            location = "left leg";
                            break;
                    }
                    return location;
                };
                return Roller;
            }());
            exports_7("Roller", Roller);
            exports_7("DiceRoller", DiceRoller = new Roller());
        }
    }
});
System.register("helpers/educations", ["helpers/skills", "helpers/attributes", "common/character", "helpers/alienHosts", "helpers/factions", "helpers/sources"], function(exports_8, context_8) {
    "use strict";
    var __moduleName = context_8 && context_8.id;
    var skills_2, attributes_2, character_3, alienHosts_1, factions_2, sources_2;
    var Education, EducationModel, EducationViewModel, Educations, EducationsHelper;
    return {
        setters:[
            function (skills_2_1) {
                skills_2 = skills_2_1;
            },
            function (attributes_2_1) {
                attributes_2 = attributes_2_1;
            },
            function (character_3_1) {
                character_3 = character_3_1;
            },
            function (alienHosts_1_1) {
                alienHosts_1 = alienHosts_1_1;
            },
            function (factions_2_1) {
                factions_2 = factions_2_1;
            },
            function (sources_2_1) {
                sources_2 = sources_2_1;
            }],
        execute: function() {
            (function (Education) {
                // Core
                Education[Education["Grew_Up_On_The_Streets"] = 0] = "Grew_Up_On_The_Streets";
                Education[Education["Rural_ColonialEducation"] = 1] = "Rural_ColonialEducation";
                Education[Education["Creative_Education"] = 2] = "Creative_Education";
                Education[Education["White_Collar_Education"] = 3] = "White_Collar_Education";
                Education[Education["Technical_Education"] = 4] = "Technical_Education";
                Education[Education["Scientific_Education"] = 5] = "Scientific_Education";
                Education[Education["Military_Training"] = 6] = "Military_Training";
                Education[Education["Orbital_Training"] = 7] = "Orbital_Training";
                // Antipodes
                Education[Education["ScoutTraining"] = 8] = "ScoutTraining";
                Education[Education["WarriorTraining"] = 9] = "WarriorTraining";
                Education[Education["SpiritualTraining"] = 10] = "SpiritualTraining";
                Education[Education["BornWild"] = 11] = "BornWild";
                // Helots
                Education[Education["HelotScoutTraining"] = 12] = "HelotScoutTraining";
                Education[Education["HunterWarriorTraining"] = 13] = "HunterWarriorTraining";
                Education[Education["UtilityTraining"] = 14] = "UtilityTraining";
                Education[Education["WildPod"] = 15] = "WildPod";
            })(Education || (Education = {}));
            exports_8("Education", Education);
            EducationModel = (function () {
                function EducationModel(name, roll, plus2, plus1, minus1, mandatory, elective, equipment) {
                    this.name = name;
                    this.plus2 = plus2;
                    this.plus1 = plus1;
                    this.minus1 = minus1;
                    this.mandatory = mandatory;
                    this.elective = elective;
                    this.equipment = equipment;
                    this.roll = roll;
                }
                return EducationModel;
            }());
            EducationViewModel = (function (_super) {
                __extends(EducationViewModel, _super);
                function EducationViewModel(id, base) {
                    _super.call(this, base.name, base.roll, base.plus2, base.plus1, base.minus1, base.mandatory, base.elective, base.equipment);
                    this.id = id;
                }
                return EducationViewModel;
            }(EducationModel));
            exports_8("EducationViewModel", EducationViewModel);
            Educations = (function () {
                function Educations() {
                    this._educations = (_a = {},
                        _a[Education.Grew_Up_On_The_Streets] = new EducationModel("Grew up on the streets", 1, attributes_2.Attribute.Agility, attributes_2.Attribute.Brawn, attributes_2.Attribute.Intelligence, [skills_2.Skill.Discipline, skills_2.Skill.Observation, skills_2.Skill.Resistance, skills_2.Skill.Stealth, skills_2.Skill.Survival], [skills_2.Skill.Athletics, skills_2.Skill.Close_Combat, skills_2.Skill.Lifestyle], ["Fake ID 1", "Micro-Torch", "Knife"]),
                        _a[Education.Rural_ColonialEducation] = new EducationModel("Rural/Colonial Education", 3, attributes_2.Attribute.Awareness, attributes_2.Attribute.Brawn, attributes_2.Attribute.Personality, [skills_2.Skill.Education, skills_2.Skill.Pilot, skills_2.Skill.Resistance, skills_2.Skill.Survival, skills_2.Skill.Tech], [skills_2.Skill.Animal_Handling, skills_2.Skill.Athletics, skills_2.Skill.Observation], ["Survival Kit", "Survival Rations (x3)", "Nav Suite", "Knife"]),
                        _a[Education.Creative_Education] = new EducationModel("Creative Education", 5, attributes_2.Attribute.Personality, attributes_2.Attribute.Willpower, attributes_2.Attribute.Brawn, [skills_2.Skill.Discipline, skills_2.Skill.Education, skills_2.Skill.Lifestyle, skills_2.Skill.Observation, skills_2.Skill.Persuade], [skills_2.Skill.Analysis, skills_2.Skill.Pilot, skills_2.Skill.Tech], ["AR Eye Implants|Cosmetics Kit", "Recorder"]),
                        _a[Education.White_Collar_Education] = new EducationModel("White Collar Education", 8, attributes_2.Attribute.Awareness, attributes_2.Attribute.Personality, attributes_2.Attribute.Brawn, [skills_2.Skill.Education, skills_2.Skill.Lifestyle, skills_2.Skill.Observation, skills_2.Skill.Persuade, skills_2.Skill.Stealth], [skills_2.Skill.Command, skills_2.Skill.Stealth, skills_2.Skill.Thievery], ["AR Eye Implants|Neural Comlog", "Stims"]),
                        _a[Education.Technical_Education] = new EducationModel("Technical Education", 11, attributes_2.Attribute.Awareness, attributes_2.Attribute.Intelligence, attributes_2.Attribute.Willpower, [skills_2.Skill.Education, skills_2.Skill.Observation, skills_2.Skill.Pilot, skills_2.Skill.Tech, skills_2.Skill.Thievery], [skills_2.Skill.Hacking, skills_2.Skill.Lifestyle, skills_2.Skill.Extraplanetary], ["Powered Multitool", "Repair Kit (with 5 Parts)"]),
                        _a[Education.Scientific_Education] = new EducationModel("Scientific Education", 14, attributes_2.Attribute.Intelligence, attributes_2.Attribute.Awareness, attributes_2.Attribute.Personality, [skills_2.Skill.Education, skills_2.Skill.Lifestyle, skills_2.Skill.Medicine, skills_2.Skill.Pilot, skills_2.Skill.Tech], [skills_2.Skill.Medicine, skills_2.Skill.Science, skills_2.Skill.Spacecraft], ["Analytical Kit (with 5 Reagents)", "Sensor Suite"]),
                        _a[Education.Military_Training] = new EducationModel("Military Training", 17, attributes_2.Attribute.Brawn, attributes_2.Attribute.Agility, attributes_2.Attribute.Intelligence, [skills_2.Skill.Acrobatics, skills_2.Skill.Athletics, skills_2.Skill.Ballistics, skills_2.Skill.Close_Combat, skills_2.Skill.Observation], [skills_2.Skill.Command, skills_2.Skill.Education, skills_2.Skill.Tech], ["Armoured Clothing", "Pistol"]),
                        _a[Education.Orbital_Training] = new EducationModel("Orbital Training", 20, attributes_2.Attribute.Intelligence, attributes_2.Attribute.Awareness, attributes_2.Attribute.Personality, [skills_2.Skill.Discipline, skills_2.Skill.Education, skills_2.Skill.Pilot, skills_2.Skill.Spacecraft, skills_2.Skill.Extraplanetary], [skills_2.Skill.Lifestyle, skills_2.Skill.Resistance, skills_2.Skill.Tech], ["Vac Suit", "Location beacon", "5 Oxygen loads"]),
                        _a[Education.ScoutTraining] = new EducationModel("Scout Training", 106, attributes_2.Attribute.Awareness, attributes_2.Attribute.Agility, attributes_2.Attribute.Personality, [skills_2.Skill.Analysis, skills_2.Skill.Athletics, skills_2.Skill.Observation, skills_2.Skill.Stealth, skills_2.Skill.Survival], [skills_2.Skill.Acrobatics, skills_2.Skill.Ballistics, skills_2.Skill.Stealth], []),
                        _a[Education.WarriorTraining] = new EducationModel("Warrior Training", 112, attributes_2.Attribute.Brawn, attributes_2.Attribute.Agility, attributes_2.Attribute.Intelligence, [skills_2.Skill.Acrobatics, skills_2.Skill.Athletics, skills_2.Skill.Ballistics, skills_2.Skill.Close_Combat, skills_2.Skill.Resistance], [skills_2.Skill.Close_Combat, skills_2.Skill.Observation, skills_2.Skill.Stealth], []),
                        _a[Education.SpiritualTraining] = new EducationModel("Spiritual Training", 118, attributes_2.Attribute.Willpower, attributes_2.Attribute.Personality, attributes_2.Attribute.Coordination, [skills_2.Skill.Animal_Handling, skills_2.Skill.Close_Combat, skills_2.Skill.Command, skills_2.Skill.Psychology, skills_2.Skill.Persuade], [skills_2.Skill.Analysis, skills_2.Skill.Command, skills_2.Skill.Survival], []),
                        _a[Education.BornWild] = new EducationModel("Born Wild", 120, attributes_2.Attribute.Agility, attributes_2.Attribute.Brawn, attributes_2.Attribute.Personality, [skills_2.Skill.Athletics, skills_2.Skill.Observation, skills_2.Skill.Survival], [skills_2.Skill.Stealth, skills_2.Skill.Survival, skills_2.Skill.Thievery], []),
                        _a[Education.HelotScoutTraining] = new EducationModel("Scout Training", 206, attributes_2.Attribute.Awareness, attributes_2.Attribute.Coordination, attributes_2.Attribute.Brawn, [skills_2.Skill.Acrobatics, skills_2.Skill.Athletics, skills_2.Skill.Observation, skills_2.Skill.Stealth, skills_2.Skill.Survival], [skills_2.Skill.Ballistics, skills_2.Skill.Pilot, skills_2.Skill.Thievery], []),
                        _a[Education.HunterWarriorTraining] = new EducationModel("Hunter/Warrior Training", 212, attributes_2.Attribute.Agility, attributes_2.Attribute.Personality, attributes_2.Attribute.Intelligence, [skills_2.Skill.Acrobatics, skills_2.Skill.Athletics, skills_2.Skill.Ballistics, skills_2.Skill.Close_Combat, skills_2.Skill.Resistance], [skills_2.Skill.Medicine, skills_2.Skill.Observation, skills_2.Skill.Stealth], []),
                        _a[Education.UtilityTraining] = new EducationModel("Utility Training", 218, attributes_2.Attribute.Personality, attributes_2.Attribute.Intelligence, attributes_2.Attribute.Brawn, [skills_2.Skill.Animal_Handling, skills_2.Skill.Education, skills_2.Skill.Lifestyle, skills_2.Skill.Psychology, skills_2.Skill.Tech], [skills_2.Skill.Analysis, skills_2.Skill.Persuade, skills_2.Skill.Science], []),
                        _a[Education.WildPod] = new EducationModel("Wild Pod", 219, attributes_2.Attribute.Brawn, attributes_2.Attribute.Agility, attributes_2.Attribute.Willpower, [skills_2.Skill.Athletics, skills_2.Skill.Observation, skills_2.Skill.Resistance, skills_2.Skill.Survival], [skills_2.Skill.Stealth, skills_2.Skill.Survival, skills_2.Skill.Thievery], []),
                        _a
                    );
                    var _a;
                }
                Educations.prototype.getEducations = function () {
                    if (character_3.character.host === alienHosts_1.AlienHost.Antipode && character_3.character.faction === factions_2.Faction.Ariadna && character_3.character.hasSource(sources_2.Source.Ariadna)) {
                        return [
                            new EducationViewModel(Education.ScoutTraining, this._educations[Education.ScoutTraining]),
                            new EducationViewModel(Education.WarriorTraining, this._educations[Education.WarriorTraining]),
                            new EducationViewModel(Education.SpiritualTraining, this._educations[Education.SpiritualTraining]),
                            new EducationViewModel(Education.BornWild, this._educations[Education.BornWild])
                        ];
                    }
                    var educations = [];
                    var n = 0;
                    for (var edu in this._educations) {
                        var education = this._educations[edu];
                        if (n < Education.ScoutTraining) {
                            educations.push(new EducationViewModel(n, education));
                        }
                        n++;
                    }
                    if (character_3.character.host === alienHosts_1.AlienHost.Helot && character_3.character.faction === factions_2.Faction.PanOceania && character_3.character.hasSource(sources_2.Source.PanOceania)) {
                        var edus = [
                            new EducationViewModel(Education.HelotScoutTraining, this._educations[Education.HelotScoutTraining]),
                            new EducationViewModel(Education.HunterWarriorTraining, this._educations[Education.HunterWarriorTraining]),
                            new EducationViewModel(Education.UtilityTraining, this._educations[Education.UtilityTraining]),
                            new EducationViewModel(Education.WildPod, this._educations[Education.WildPod]),
                        ];
                        if (character_3.character.canSelectHumanEducation) {
                            edus.push.apply(edus, educations);
                        }
                        return edus;
                    }
                    return educations;
                };
                Educations.prototype.getEducation = function (education) {
                    return this._educations[education];
                };
                Educations.prototype.generateEducation = function () {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    var n = 0;
                    if (character_3.character.host === alienHosts_1.AlienHost.Antipode && character_3.character.faction === factions_2.Faction.Ariadna && character_3.character.hasSource(sources_2.Source.Ariadna)) {
                        roll += 100;
                    }
                    else if (character_3.character.host === alienHosts_1.AlienHost.Helot && character_3.character.faction === factions_2.Faction.PanOceania && character_3.character.hasSource(sources_2.Source.PanOceania)) {
                        roll += 200;
                        if (roll === 220) {
                            roll = Math.floor(Math.random() * 20) + 1;
                        }
                    }
                    for (var edu in this._educations) {
                        var e = this._educations[edu];
                        if (e.roll >= roll) {
                            return n;
                        }
                        n++;
                    }
                };
                Educations.prototype.applyEducation = function (education) {
                    var edu = this.getEducation(education);
                    character_3.character.attributes[edu.plus2].value += 2;
                    character_3.character.attributes[edu.plus1].value += 1;
                    character_3.character.attributes[edu.minus1].value -= 1;
                    if (education === Education.Creative_Education ||
                        education === Education.White_Collar_Education) {
                        character_3.character.assets++;
                    }
                    else if (education === Education.ScoutTraining) {
                        character_3.character.addTalent("Sharp Senses");
                    }
                    else if (education === Education.WarriorTraining) {
                        character_3.character.addTalent("Sturdy");
                    }
                    else if (education === Education.SpiritualTraining) {
                        character_3.character.addTalent("Counsellor");
                    }
                    else if (education === Education.HelotScoutTraining) {
                        character_3.character.addTalent("Scout");
                    }
                    else if (education === Education.HunterWarriorTraining) {
                        character_3.character.addTalent("Graceful");
                    }
                    else if (education === Education.UtilityTraining) {
                        character_3.character.addTalent("Socialite");
                    }
                    else if (education === Education.BornWild ||
                        education === Education.WildPod) {
                        character_3.character.lifePoints++;
                    }
                    edu.equipment.forEach(function (e, i) {
                        if (e.indexOf('|') === -1) {
                            character_3.character.addEquipment(e);
                        }
                    });
                };
                return Educations;
            }());
            exports_8("Educations", Educations);
            exports_8("EducationsHelper", EducationsHelper = new Educations());
        }
    }
});
System.register("helpers/careers", ["common/character", "helpers/skills", "helpers/factions", "helpers/diceRoller", "helpers/socialClasses", "helpers/alienHosts", "helpers/educations", "helpers/sources"], function(exports_9, context_9) {
    "use strict";
    var __moduleName = context_9 && context_9.id;
    var character_4, skills_3, factions_3, diceRoller_1, socialClasses_1, alienHosts_2, educations_1, sources_3;
    var Career, CareerModel, CareerViewModel, Careers, CareersHelper;
    return {
        setters:[
            function (character_4_1) {
                character_4 = character_4_1;
            },
            function (skills_3_1) {
                skills_3 = skills_3_1;
            },
            function (factions_3_1) {
                factions_3 = factions_3_1;
            },
            function (diceRoller_1_1) {
                diceRoller_1 = diceRoller_1_1;
            },
            function (socialClasses_1_1) {
                socialClasses_1 = socialClasses_1_1;
            },
            function (alienHosts_2_1) {
                alienHosts_2 = alienHosts_2_1;
            },
            function (educations_1_1) {
                educations_1 = educations_1_1;
            },
            function (sources_3_1) {
                sources_3 = sources_3_1;
            }],
        execute: function() {
            (function (Career) {
                // Core
                Career[Career["Unemployed"] = 0] = "Unemployed";
                Career[Career["Academic"] = 1] = "Academic";
                Career[Career["AssaultPackController"] = 2] = "AssaultPackController";
                Career[Career["Bodyguard"] = 3] = "Bodyguard";
                Career[Career["Bosozoku"] = 4] = "Bosozoku";
                Career[Career["BountyHunter"] = 5] = "BountyHunter";
                Career[Career["BureauTothAgent"] = 6] = "BureauTothAgent";
                Career[Career["CelestialGuard"] = 7] = "CelestialGuard";
                Career[Career["Corporate"] = 8] = "Corporate";
                Career[Career["CorporateExecutive"] = 9] = "CorporateExecutive";
                Career[Career["Corsair"] = 10] = "Corsair";
                Career[Career["Criminal"] = 11] = "Criminal";
                Career[Career["Diplomat"] = 12] = "Diplomat";
                Career[Career["FieldScientist"] = 13] = "FieldScientist";
                Career[Career["Frontiersman"] = 14] = "Frontiersman";
                Career[Career["Hacker"] = 15] = "Hacker";
                Career[Career["Hassassin"] = 16] = "Hassassin";
                Career[Career["HeavyIndustry"] = 17] = "HeavyIndustry";
                Career[Career["IntelligenceOperative"] = 18] = "IntelligenceOperative";
                Career[Career["InvestigativeJournalist"] = 19] = "InvestigativeJournalist";
                Career[Career["Lobbyist"] = 20] = "Lobbyist";
                Career[Career["MayaPersonality"] = 21] = "MayaPersonality";
                Career[Career["Media"] = 22] = "Media";
                Career[Career["Medical"] = 23] = "Medical";
                Career[Career["Military"] = 24] = "Military";
                Career[Career["Paratrooper"] = 25] = "Paratrooper";
                Career[Career["Pilot"] = 26] = "Pilot";
                Career[Career["Police"] = 27] = "Police";
                Career[Career["Politician"] = 28] = "Politician";
                Career[Career["RemoteOperator"] = 29] = "RemoteOperator";
                Career[Career["ReverendAgent"] = 30] = "ReverendAgent";
                Career[Career["ShipCrew"] = 31] = "ShipCrew";
                Career[Career["Smuggler"] = 32] = "Smuggler";
                Career[Career["SpecialForces"] = 33] = "SpecialForces";
                Career[Career["SportsPersonality"] = 34] = "SportsPersonality";
                Career[Career["TagPilot"] = 35] = "TagPilot";
                Career[Career["Technician"] = 36] = "Technician";
                Career[Career["TerraformingScientist"] = 37] = "TerraformingScientist";
                Career[Career["Trader"] = 38] = "Trader";
                // Ariadna
                Career[Career["EmergencyResponder"] = 39] = "EmergencyResponder";
                Career[Career["BratvaGangster"] = 40] = "BratvaGangster";
                Career[Career["CaledonianNoble"] = 41] = "CaledonianNoble";
                Career[Career["ClaymoreDuellist"] = 42] = "ClaymoreDuellist";
                Career[Career["FreeMiner"] = 43] = "FreeMiner";
                Career[Career["FrontierDoctor"] = 44] = "FrontierDoctor";
                Career[Career["Hardcase"] = 45] = "Hardcase";
                Career[Career["IrmandinhosSmuggler"] = 46] = "IrmandinhosSmuggler";
                Career[Career["LoupGarou"] = 47] = "LoupGarou";
                Career[Career["MerovingianCommercialAgent"] = 48] = "MerovingianCommercialAgent";
                Career[Career["MilitiaMember"] = 49] = "MilitiaMember";
                Career[Career["Spetsnaz"] = 50] = "Spetsnaz";
                Career[Career["Scavenger"] = 51] = "Scavenger";
                Career[Career["AntipodeWarlord"] = 52] = "AntipodeWarlord";
                Career[Career["AssaultPackMember"] = 53] = "AssaultPackMember";
                Career[Career["DogBloodedIrregular"] = 54] = "DogBloodedIrregular";
                Career[Career["Cameronian"] = 55] = "Cameronian";
                Career[Career["KazakDogWarrior"] = 56] = "KazakDogWarrior";
                Career[Career["DevilDogsMarines"] = 57] = "DevilDogsMarines";
                Career[Career["DogBowlPlayer"] = 58] = "DogBowlPlayer";
                Career[Career["DogNationActivist"] = 59] = "DogNationActivist";
                Career[Career["ForestRanger"] = 60] = "ForestRanger";
                Career[Career["Raider"] = 61] = "Raider";
                Career[Career["Volk"] = 62] = "Volk";
                Career[Career["WulverShockTroop"] = 63] = "WulverShockTroop";
                // Haqqislam
                Career[Career["HassassinFidayHaqqislam"] = 64] = "HassassinFidayHaqqislam";
                Career[Career["Khawarij"] = 65] = "Khawarij";
                Career[Career["DiwanFunctionary"] = 66] = "DiwanFunctionary";
                Career[Career["GreyMarketSpy"] = 67] = "GreyMarketSpy";
                Career[Career["HassassinExemplar"] = 68] = "HassassinExemplar";
                Career[Career["MagharibaGuard"] = 69] = "MagharibaGuard";
                Career[Career["KumGanger"] = 70] = "KumGanger";
                Career[Career["MedicalResearcher"] = 71] = "MedicalResearcher";
                Career[Career["MuhafizAgent"] = 72] = "MuhafizAgent";
                Career[Career["Odalisque"] = 73] = "Odalisque";
                Career[Career["Caravaner"] = 74] = "Caravaner";
                Career[Career["AkbarDoctor"] = 75] = "AkbarDoctor";
                Career[Career["Hafza"] = 76] = "Hafza";
                // PanOceania
                Career[Career["Fusilier"] = 77] = "Fusilier";
                Career[Career["MayacastSupportStaff"] = 78] = "MayacastSupportStaff";
                Career[Career["SensoriumMayacaster"] = 79] = "SensoriumMayacaster";
                Career[Career["Explorer"] = 80] = "Explorer";
                Career[Career["FighterPilot"] = 81] = "FighterPilot";
                Career[Career["NeoterranSpecialOfficer"] = 82] = "NeoterranSpecialOfficer";
                Career[Career["HexasAgent"] = 83] = "HexasAgent";
                Career[Career["Priest"] = 84] = "Priest";
                Career[Career["OrderSergeant"] = 85] = "OrderSergeant";
                Career[Career["Knight"] = 86] = "Knight";
                Career[Career["CrocMan"] = 87] = "CrocMan";
                Career[Career["AquaticFirstResponder"] = 88] = "AquaticFirstResponder";
                Career[Career["Bartender"] = 89] = "Bartender";
                Career[Career["DeepSeaExplorer"] = 90] = "DeepSeaExplorer";
                Career[Career["HelotMilitia"] = 91] = "HelotMilitia";
                Career[Career["Labourer"] = 92] = "Labourer";
                Career[Career["LibertosMember"] = 93] = "LibertosMember";
                Career[Career["OmnStoryteller"] = 94] = "OmnStoryteller";
                Career[Career["ScuballPlayer"] = 95] = "ScuballPlayer";
                Career[Career["Starfish"] = 96] = "Starfish";
                Career[Career["VarunanGuide"] = 97] = "VarunanGuide";
                Career[Career["Any"] = 98] = "Any";
            })(Career || (Career = {}));
            exports_9("Career", Career);
            CareerModel = (function () {
                function CareerModel(name, description, attributes, mandatory, elective, equipment, earnings, factions, source, canBeHazarded, isCriminal) {
                    this.name = name;
                    this.description = description;
                    this.attributes = attributes;
                    this.mandatory = mandatory;
                    this.elective = elective;
                    this.equipment = equipment;
                    this.earnings = earnings;
                    this.factions = factions;
                    this.source = source;
                    this.canBeHazarded = canBeHazarded ? canBeHazarded : function () { return false; };
                    this.isCriminal = isCriminal;
                }
                return CareerModel;
            }());
            CareerViewModel = (function (_super) {
                __extends(CareerViewModel, _super);
                function CareerViewModel(id, base) {
                    _super.call(this, base.name, base.description, base.attributes, base.mandatory, base.elective, base.equipment, base.earnings, base.factions, base.source, base.canBeHazarded, base.isCriminal);
                    this.id = id;
                }
                return CareerViewModel;
            }(CareerModel));
            exports_9("CareerViewModel", CareerViewModel);
            Careers = (function () {
                function Careers() {
                    this._careers = (_a = {},
                        _a[Career.Unemployed] = new CareerModel("Unemployed", "Tens of billions live scattered throughout the Human Sphere and the unemployed number in the hundreds of millions. Robust demogrants, well-funded support networks, and abundant resources, however, mean that the unemployed generally live comfortably while Maya makes a seemingly infi nite variety of entertainment and experiences available to them.", [2, 1, 2, 1, 2, 0, 2], [skills_3.Skill.Survival], skills_3.SkillsHelper.getSkills(), [], "0+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return false; }),
                        _a[Career.Academic] = new CareerModel("Academic", "Bright minds across the Human Sphere develop and implement the latest technology, direct expansion efforts, and guide humanity in all its endeavours. The Academic can be a brilliant but introverted scientist creating miracles in the lab, or she could be a weathered biologist out working in the fi eld. Historians study the past to glean clues about humanity’s future. Roboticists and engineers devise the tools that build the high-tech cities gleaming upon countless worlds. An Academic applies theory, study, and experimentation to solve the problems of the Human Sphere. Knowledge in a wide variety of fi elds makes the Academic career desirable on every world. Brilliant minds are in perpetual demand, especially in troubled times.", [1, 2, 0, 1, 3, 1, 2], [skills_3.Skill.Education, skills_3.Skill.Medicine, skills_3.Skill.Science], [skills_3.Skill.Discipline, skills_3.Skill.Education, skills_3.Skill.Tech], ["Laboratory (3 month lease)"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.AssaultPackController] = new CareerModel("Assault Pack Controller", "Assault Pack Controllers guide mind-controlled Antipodes into battle. The fi erce lupine natives of Ariadna possess heightened senses and ferocious strength. A Controller must lead these creatures, biochemically manipulated to be pliable and obedient, with equally fi erce determination. Assault Pack Controllers use their bestial troops to break through enemy lines and shatter their resolve. Life as a Controller means harsh training and rigorous discipline to carry the strength and presence of an alpha. Controllers face danger every day that they lead their packs, from the savagery of the Antipodes themselves to the missions that require an Assault Pack. Because a Controller must be strong, ruthless, and driven, few forces are more feared on the battlefi eld than an Assault Pack. Many Controllers form close bonds with their Antipodes.", [1, 2, 0, 2, 2, 2, 1], [skills_3.Skill.Athletics, skills_3.Skill.Animal_Handling, skills_3.Skill.Stealth], [skills_3.Skill.Close_Combat, skills_3.Skill.Survival, skills_3.Skill.Ballistics], ["Antipode Control Device", "Teseum Chopper", "Pheromone Dispenser"], "2+D1", [factions_3.Faction.Ariadna], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.Bodyguard] = new CareerModel("Bodyguard", "Bodyguards come in high demand for the rich and important people of the Human Sphere. A Bodyguard might serve as protection for a high-ranking political leader, a controversial Maya personality, or the elite guards of a religious fi gurehead. A Bodyguard must be quick-witted, tough, and skilled in both offensive and defensive techniques. Bodyguards are usually well-armed and willing to take a bullet for their charges. Consequently, a Bodyguard is well paid, at least if the employer wants any sense of loyalty. The best Bodyguards are prized for their attention to discipline and skill at arms, often heading security details guarding convoys, foreign dignitaries, and important frontier missions. Most Bodyguards also display a variety of other skills picked up during their assignments.", [2, 2, 2, 1, 2, 0, 1], [skills_3.Skill.Observation, skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics], [skills_3.Skill.Lifestyle, skills_3.Skill.Pilot, skills_3.Skill.Discipline], ["High-Fashion Clothing", "Ballistic Vest", "Multispectral Visor 1", "Heavy Pistol", "3 Standard Reloads"], "1+D2", [factions_3.Faction.Haqqislam, factions_3.Faction.Submondo], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Bosozoku] = new CareerModel("Bōsōzoku", "Bōsōzoku is an illegal form of street racing originating in Yu Jing. It is a cutthroat competition often involving the use of violence in a no-holds barred race. The Bōsōzoku racers are incredibly skilled and daring. They lead a lifestyle steeped in underground fame, danger, and hot-blooded pursuit of victory set amid the backdrop of blazing neon cities. A Bōsōzoku racer must be tough and fast to survive, even outside the races, often forming connections with other underworld elements. Bōsōzoku gangs kill for one another, and a racer often adopts an “us against the world” mentality. With such a risky yet lucrative occupation, most Bōsōzoku racers approach life with a “live fast, die young” outlook.", [2, 2, 2, 0, 2, 1, 1], [skills_3.Skill.Pilot, skills_3.Skill.Thievery, skills_3.Skill.Stealth], [skills_3.Skill.Pilot, skills_3.Skill.Tech, skills_3.Skill.Hacking], ["Motorcycle", "Armoured Clothing", "AP Pistol", "2 AP Reloads"], "0+D2", [factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }, true),
                        _a[Career.BountyHunter] = new CareerModel("Bounty Hunter", "As spread out as humanity is among the stars, criminals inevitably escape. Outlaws build up power bases away from the centres of law enforcement, pirates retreat to dens of scum after raiding merchant vessels, and unscrupulous executives fl ee persecution to other countries or other worlds. Bounty Hunters act where traditional law enforcement cannot. The bounties commanded by high-profi le criminals are tremendous. Hunters go where others won’t in order to bring back their quarry, or maybe just a piece of them. Skilled in tracking, battle, and guerrilla tactics, Bounty Hunters are the basis of countless romanticized legends and thrilling Maya programs.", [0, 2, 2, 1, 1, 2, 2], [skills_3.Skill.Athletics, skills_3.Skill.Observation, skills_3.Skill.Stealth], [skills_3.Skill.Ballistics, skills_3.Skill.Pilot, skills_3.Skill.Tech], ["SecurCuffs", "Heavy Pistol", "4 Standard Reloads", "Light Combat Armour"], "1+D2", [factions_3.Faction.Mercenary], sources_3.Source.Core, function () { return true; }),
                        _a[Career.BureauTothAgent] = new CareerModel("Bureau Toth Agent", "Agents of Bureau Toth have a specific and demanding duty: Watch over ALEPH. Tasked by O-12 with this most important duty, Bureau Toth Agents serve as one part law enforcement and one part hacker Maya cluster. They fend off foreign attempts on ALEPH's stability, help maintain ALEPH's operations, and supervise its actions on behalf of the O-12. The Bureau's means and resources are hidden from all but the organization itself, including ALEPH. Agents work to make sure that ALEPH remains functional, unimpeded, and most of all benign.", [1, 2, 0, 1, 2, 2, 2], [skills_3.Skill.Analysis, skills_3.Skill.Hacking, skills_3.Skill.Tech], [skills_3.Skill.Ballistics, skills_3.Skill.Education, skills_3.Skill.Persuade], ["Assault Hacking Device|Defensive Hacking device", "Heavy Pistol", "4 Standard Reloads", "E/M grenade"], "3+D1", [factions_3.Faction.O12], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.O12 || character_4.character.faction === factions_3.Faction.Aleph; }),
                        _a[Career.CelestialGuard] = new CareerModel("Celestial Guard", "The famed Yu Jing Celestial Guard protect the Imperial Palace and the Celestial Emperor. Their duty even extends to the whole of the Forbidden City. These crack troops specialize in urban warfare, each soldier highly experienced and impeccably disciplined. Only the most loyal and proven members of the Yu Jing military can ascend to the ranks of Celestial Guard. The Guard acts on direct orders from the Emperor, and function as a police unit with vast authority and resources. The Celestial Guard are known to bend or break laws that bind other police units in their pursuit of Imperial justice. Guard soldiers are brutal and decisive, trained to bring a swift end to any threat Yu Jing faces.", [1, 2, 2, 1, 2, 0, 2], [skills_3.Skill.Athletics, skills_3.Skill.Acrobatics, skills_3.Skill.Observation], [skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics, skills_3.Skill.Analysis], ["Light Combat Armour", "Combi Rifle", "Recorder"], "2+D1", [factions_3.Faction.YuJing], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.YuJing; }),
                        _a[Career.Corporate] = new CareerModel("Corporate", "Corporate workers labour at all levels to keep the megacorps and hypercorps of the Human Sphere running. Managers ply their people skills to keep stressed and overworked staffers productive. Accountants and actuaries calculate risk and determine investments. Working a Corporate career, whether in a small start-up on the frontier or as part of a massive conglomerate, means being perceptive, wary, and opportunistic — always ready to adapt to a changing corporate environment or the fast-paced demands of interplanetary business.", [0, 2, 1, 2, 2, 2, 1], [skills_3.Skill.Lifestyle, skills_3.Skill.Observation, skills_3.Skill.Stealth], [skills_3.Skill.Lifestyle, skills_3.Skill.Discipline, skills_3.Skill.Education], ["AR Eye Implants|Implanted Knife|Bioimmunity Organ", "Cosmetics Kit"], "2+D2", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.CorporateExecutive] = new CareerModel("Corporate Executive", "Executives in the most infl uential hypercorps wield more power than many sovereign rulers among the minor nations. With the trade of currency and favours, an Executive alters the course of political development, positions their company to benefi t fi rst and foremost from government contracts, and helps shape the Human Sphere. A Corporate Executive swims in shark-infested waters, vying with competitors for the best deals. An Executive is responsible for their company’s interests, which often means meeting and negotiating with the most high-powered individuals in human space. They must adapt to constantly changing situations with a quick wit and keen eye for opportunity.", [0, 1, 1, 2, 2, 3, 1], [skills_3.Skill.Persuade, skills_3.Skill.Lifestyle, skills_3.Skill.Command], [skills_3.Skill.Education, skills_3.Skill.Lifestyle, skills_3.Skill.Discipline], ["High-Fashion Clothing (with locational beacon)", "Tonfa Bangles|AP Pistol", "Neural Comlog|AR Eye Implant", "1 dose of a recreational drug"], "3+D3", [factions_3.Faction.PanOceania], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Corsair] = new CareerModel("Corsair", "Every major nation employs corsairs, privateers commissioned to capture military and merchant ships of enemy nations. Some corsairs hunt other corsairs, but most make a living pursuing less suspecting prey. Authorized to keep part of the loot, corsairs make a profit by targeting the least-protected vessels and keeping more than their contracted allotment of bounty. A Corsair lives a dangerous lifestyle, considered by law to be an enemy combatant but without the honour or respect due the military. Despite their reputation as lawless dogs, most Corsairs stick to a strict code among their own people. Corsairs can be charming and sly in turns, skilled negotiators and dangerous in a fight. Their experience traveling human space is second to none.", [2, 2, 2, 1, 2, 1, 0], [skills_3.Skill.Spacecraft, skills_3.Skill.Extraplanetary, skills_3.Skill.Thievery], [skills_3.Skill.Close_Combat, skills_3.Skill.Acrobatics, skills_3.Skill.Ballistics], ["Vac Suit", "3 Oxygen Loads", "Surge (x2)", "Boarding Shotgun", "4 Standard Shell Reloads", "1 AP Shell Reload"], "0+D3", [factions_3.Faction.Haqqislam, factions_3.Faction.Submondo], sources_3.Source.Core, function () { return true; }, true),
                        _a[Career.Criminal] = new CareerModel("Criminal", "Perhaps the one profession most common across all factions is that of criminal. Smugglers sneak contraband into and out of system borders. Thieves test the security systems of ships, banks, and corporate business records, looking to steal identities, leverage, access codes — anything that lets them tap into their targets’ wealth. Lawless gangs haunt the fringes of civilized society, like the destitute underclass that lurks in the bowels of gleaming mega-cities, or the pirates that attack shipping lanes. Ecoterrorists and those with an axe to grind against the massive economic power players strike out to disrupt the status quo, or take revenge on the ones who took away their livelihoods. It’s also possible that one could find themselves trapped in a Criminal life for reasons beyond their control, such as fleeing wrongful persecution or crossing the wrong bureaucrat.", [2, 2, 2, 2, 0, 1, 1], [skills_3.Skill.Thievery, skills_3.Skill.Observation, skills_3.Skill.Stealth], [skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics, skills_3.Skill.Tech], ["Cosmetics Kit", "Heavy Pistol", "3 Standard Reloads", "Fake ID 2"], "0+D2", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }, true),
                        _a[Career.Diplomat] = new CareerModel("Diplomat", "Diplomacy is a fine art in the Human Sphere, especially with a Code Infinity looming over everyone’s heads. Diplomats work to smooth over relations between rival nations, force alliances of convenience or sometimes shared ideology, and keep disparate countries connected by more than just trade. A good Diplomat exhibits great personal charm and integrity, conducting business on foreign soil with the utmost of respect and care. Diplomats travel to foreign countries, distant worlds, meeting with envoys of sovereign nations, corporate rule, and new settlements. They broker trade agreements and peace treaties, negotiate political alliances, and defuse tense situations. The life of a Diplomat is one of constant engagement with many different representatives in locales all across the Human Sphere.", [1, 2, 0, 2, 2, 2, 1], [skills_3.Skill.Persuade, skills_3.Skill.Education, skills_3.Skill.Discipline], [skills_3.Skill.Psychology, skills_3.Skill.Pilot, skills_3.Skill.Education], ["Cosmetics Kit|AR Eye Implant", "Negotation Suite (3 days rental credit)"], "2+D2", [factions_3.Faction.O12], sources_3.Source.Core, function () { return true; }),
                        _a[Career.FieldScientist] = new CareerModel("Field Scientist", "The Field Scientists that work for more advanced nations seek out natural mysteries. They experiment with (or upon) local wildlife and vegetation, they test out new wetware implants or high-tech devices, and their laboratories are often little more than camps set up to brave the elements. Field Scientists aren’t afraid to get their hands dirty in order to discover new chemicals or capture promising flora and fauna, and the true field scientist is a renaissance specialist. They study a mixture of biology, chemistry, geology, and the like by immersing themselves in it, rather than isolating it in a lab.", [1, 2, 1, 2, 3, 1, 0], [skills_3.Skill.Science, skills_3.Skill.Education, skills_3.Skill.Survival], [skills_3.Skill.Observation, skills_3.Skill.Tech, skills_3.Skill.Athletics], ["Analytics Kit", "Survival Kit", "Sensor Suite (x3)"], "2+D1", [factions_3.Faction.Corporation], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Frontiersman] = new CareerModel("Frontiersman", "The men and women of the frontier explore the little-known regions of human space. They are the first to expand the maps, eager to set foot on new ground and stake a claim in humanity’s interstellar expansion. These rugged folk brave environmental dangers, unknown flora and fauna, and set up trading posts in seldom-travelled regions. A frontiersman is skilled at hunting, gathering supplies, and often in working with technology out away from urban centres, with little to no technical support. Frontiersmen prospect for resources, like the rare and valuable Teseum, or rare herbs and wildlife with properties useful to the medical industry. Some are criminals fleeing the reach of the law by living on the frontier, and others are bounty hunters sent to hunt down those who would otherwise escape justice.", [2, 2, 1, 1, 2, 0, 2], [skills_3.Skill.Survival, skills_3.Skill.Animal_Handling, skills_3.Skill.Resistance], [skills_3.Skill.Discipline, skills_3.Skill.Athletics, skills_3.Skill.Thievery], ["Survival Rations (x6)", "Survival Kit", "Axe|Powered Multitool"], "1+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Hacker] = new CareerModel("Hacker", "Nearly any conceivable information exists on the Maya network. Hackers make a living breaking down electronic barriers and uncovering secrets, or taking data from others for the purposes of fraud, theft, or mere thrills. Hackers also work with law enforcement, helping to track those with similar skills or counter their efforts. Some specialize in hacking corporate networks, like those of the massive banks and producers of consumer products. Others see it as an art form, hacking challenging military networks or plunging into the depths of Maya in order to find something no one else can.", [1, 2, 1, 2, 2, 2, 0], [skills_3.Skill.Thievery, skills_3.Skill.Hacking, skills_3.Skill.Tech], [skills_3.Skill.Observation, skills_3.Skill.Ballistics, skills_3.Skill.Stealth], ["Deployable Repeater (x3)", "Powered Multitool", "Assault Hacking Device|Defensive Hacking Device"], "2+D2", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Hassassin] = new CareerModel("Hassassin Fiday", "No covert operative in human space is deadlier or more feared than those of the Hassassin Society. These mysterious agents act as spies and assassins, completing missions too dangerous for lesser agents. A Hassassin is a protector of Haqqislamic interests as well as a devout believer in the Search for Knowledge. Many Hassassins possess a zeal even their countrymen cannot match. Theirs is a dangerous and often thankless work, like the dreaded Fidays who embrace death as part of their duty. In secret camps known only to the Hassassin Society and the Hachib, the President of Haqqislam, Hassassins undergo the most gruelling training. Nearly limitless funds, a long tradition of discipline, honour, and deadly focus, and an unquenchable desire to guard humanity’s evolution give the Hassassins incomparable ability.", [1, 2, 1, 2, 1, 2, 1], [skills_3.Skill.Stealth, skills_3.Skill.Persuade, skills_3.Skill.Thievery], [skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics, skills_3.Skill.Hacking], ["Fake ID 3", "Cosmetics Kit", "Climbing Plus", "Grazeblade", "DT Sniper Rifle", "2 Standard Reloads"], "1+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.Haqqislam && !character_4.character.hasSource(sources_3.Source.Haqqislam); }),
                        _a[Career.HeavyIndustry] = new CareerModel("Heavy Industry", "While expert systems and automation has reduced the number of workers involved in industrial pursuits, those that remain are all the more critical, providing skills and judgment. Modern materials require vacuum purification in electron-beam furnaces; titanic terraforming processors need calibration and adjustment to local conditions before being set to automated operation; volatile planetary core taps demand human decisions where predictive physics break down; and even automated maintenance systems want for their own upkeep. Industrial specialists are an increasingly rare breed that understand the link between sweat and advanced technology. Their knowledge spans grease guns to exclusion fields, and they have the experience to apply either to a problem. Professionals in this field are the gears that keep the Human Sphere moving.", [1, 2, 0, 2, 2, 1, 2], [skills_3.Skill.Resistance, skills_3.Skill.Pilot, skills_3.Skill.Tech], [skills_3.Skill.Close_Combat, skills_3.Skill.Persuade, skills_3.Skill.Thievery], ["Gruntsuit", "Respirator 1", "Powered Multitool", "Painkillers (x3)", "Repair Kit"], "2+D1", [factions_3.Faction.MinorNation, factions_3.Faction.Nomads], sources_3.Source.Core, function () { return true; }),
                        _a[Career.IntelligenceOperative] = new CareerModel("Intelligence Operative", "The tense state of conflict in the Human Sphere means every agency looks for an edge over its competitors. Intelligence Operatives conduct corporate espionage, deep-cover spy missions, acts of sabotage, and other acts which risk their life and limb for agencies that would disavow any knowledge of, or connection to, their operations. An Intelligence Operative is quick-witted, highly disciplined, and often alone in a place surrounded by enemies unaware of the traitor in their midst. They trade in secrets — information that can turn the tide of small-scale conflicts, like a raid on secret warehouses holding valuable experimental gear or data, and they can influence the large-scale skirmishes that take place between rival nations. The intelligence an operative collects can cause wars or end them with equal facility.", [1, 3, 0, 2, 2, 1, 1], [skills_3.Skill.Observation, skills_3.Skill.Stealth, skills_3.Skill.Analysis], [skills_3.Skill.Hacking, skills_3.Skill.Education, skills_3.Skill.Thievery], ["Fake ID 2", "AP Pistol", "4 Standard Reloads", "Breaking & Entering Kit", "Recorder"], "3+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.InvestigativeJournalist] = new CareerModel("Investigative Journalist", "Maya has more than its fair share of tabloid reporting and fluff stories, but the Investigative Journalist seeks the real stuff. These Journalists hunt the truth, bringing word to the public about enemy action, the heroic efforts of national forces, and of course the latest scandals to haunt politicians and entertainers alike. Investigative Journalists often face hostility from those they investigate, and tend to have more than a few criminal skills like shadowing, breaking and entering, and sometimes falsifying data to gain admittance to places otherwise barred from them. Some see their cause as bringing the truth to light, while others simply have an insatiable curiosity and a penchant for getting into (and out of) trouble.", [2, 2, 0, 2, 1, 2, 1], [skills_3.Skill.Stealth, skills_3.Skill.Persuade, skills_3.Skill.Observation], [skills_3.Skill.Hacking, skills_3.Skill.Education, skills_3.Skill.Thievery], ["Recorder|AR Eye Implants", "Analysis Suite", "Breaking & Entering Kit"], "1+D2", [factions_3.Faction.MinorNation, factions_3.Faction.Nomads], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Lobbyist] = new CareerModel("Lobbyist", "The PanOceanian government is immense, the largest in the Human Sphere, and it has ended the hypocritical separation between political power and economic power. The old political parties, now abolished, have been replaced by a substantial number of lobbies. Lobbyists vie for political favour, coordinate the activities of lobby members, and engage in covert battles of clout with rival lobbies. With the unprecedented level of transparency in modern lobbies, a Lobbyist can be practically anyone — from a citizen with a very active interest in the groups that preside over matters they care about, to a prestigious and influential leader intimately guiding the lobby’s political fortunes. Any Lobbyist, however, is highly motivated and skilled in whatever arena they choose, and the lobbying game is both robust and demanding.", [1, 2, 0, 2, 2, 2, 1], [skills_3.Skill.Persuade, skills_3.Skill.Psychology, skills_3.Skill.Command], [skills_3.Skill.Discipline, skills_3.Skill.Lifestyle, skills_3.Skill.Education], ["Negotiator's Suite (10 days rental credit)", "Geist Upgrade: +2 Psychology|Geist Upgrade: Research Specialist Talent"], "4+D2", [factions_3.Faction.PanOceania], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.MayaPersonality] = new CareerModel("Maya Personality", "Would-be Maya Personalities number in the millions, but the real stars reach hundreds of millions of viewers and devoted, fanatic fans. A Maya Personality might be a popular musician, a comedian, or spiritual speaker. Artists and life-casters broadcast their work and live sensory feeds across the Sphere. The Maya network hosts a staggering variety of content, and talented Maya Personalities rise from the faceless multitudes to become somebody. Popular newscasters and public speakers can gain far more fame and influence through legions of followers than they would have experienced as a government official. Larger-than-life personalities create legions of fans who hang on their every feeling, perception, thought, or word. They spawn both blind conformance and vehement dissent, filling up forums and editorial screeds with endless debate.", [1, 2, 1, 2, 2, 2, 0], [skills_3.Skill.Persuade, skills_3.Skill.Lifestyle, skills_3.Skill.Observation], [skills_3.Skill.Hacking, skills_3.Skill.Discipline, skills_3.Skill.Tech], ["Recorder (x3)", "High-Quality Clothing", "Fake ID 1", "AR Eye Implants"], "1+D4", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Media] = new CareerModel("Media", "The media is perhaps the single largest industry in all of the Human Sphere, the one constant binding disparate nation-states, cultures, and spiritual organizations together. Despite the glamor accorded to actors, WarCors, event-casters, and the other public faces of news and entertainment, a legion of writers, editors, producers, and effects artists support their work. These media professionals support the select few in the spotlight, always battling for better ratings and the sponsorships that come with them. Despite limited time in the public eye, media corporations covet the most talented behind-the-scenes professionals more than the personalities they support. The Sphere is fi lled with potential stars, but only a select few can make those stars shine.", [1, 3, 0, 2, 1, 2, 1], [skills_3.Skill.Education, skills_3.Skill.Hacking, skills_3.Skill.Analysis], [skills_3.Skill.Hacking, skills_3.Skill.Stealth, skills_3.Skill.Tech], ["TinBot (with Recorder)", "AR Eye Implants", "Analysis Suite"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Medical] = new CareerModel("Medical", "Medical science has advanced by leaps and bounds, but Hospitals often see a wide variety of strange cases and few professions can match the Medical career for a wealth of odd experiences. Doctors perform miracles, including resurrections, for those capable of paying the costs. Combat medics save the lives of wounded soldiers, or perform gruesome examinations on the fallen aliens. Some medics seek out new chemicals on alien worlds, hoping for the next big breakthrough. Ambitious medical scientists also push the envelope of human engineering, with advances in biotechnology, cybertechnology, and genetic therapies producing super-soldiers, making whole regions impervious to disease, or strengthening workforces to perform the most hazardous jobs where lesser people would fail.", [1, 2, 0, 2, 2, 1, 2], [skills_3.Skill.Medicine, skills_3.Skill.Athletics, skills_3.Skill.Psychology], [skills_3.Skill.Animal_Handling, skills_3.Skill.Survival, skills_3.Skill.Discipline], ["Armoured Clothing", "MediKit (with 5 Serum)", "Basic Medical Supplies"], "2+D2", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Military] = new CareerModel("Military", "Military characters run the gamut from professional soldiers employed by nations to loosely-defi ned mercenary camps. Yu Jing employs the most well-disciplined soldiers as part of its interplanetary armed forces, while PanOceania makes heavy use of mercenaries with little connection to a larger governmental branch. At Paradiso and the front lines, soldiers of all stripes work to halt the Combined Army’s advance. ALEPH helps direct these battles, a fact that doesn’t always sit well with the soldiers: Nomads would rather strike at the AI’s own information centres and mercenaries would prefer to pirate poorly protected vessels carrying sensitive information. As the Human Sphere constantly expands, soldiers stand at the forefront, pushing the boundaries and forming the fi rst line of defence against the dangers of the frontier.", [2, 1, 2, 1, 2, 0, 2], [skills_3.Skill.Athletics, skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics], [skills_3.Skill.Survival, skills_3.Skill.Acrobatics, skills_3.Skill.Tech], ["Medium Combat Armour", "Rifle", "4 Standard Reloads", "Stims (x3)"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Paratrooper] = new CareerModel("Paratrooper", "In the advanced warfare of the Human Sphere, Paratroopers drop onto planets and battlefi elds inaccessible by land. These brave men and women parachute into hostile territory, using high-tech glider suits and stealth chutes to slip past enemy defences. Air support is key to victory in the countless confl icts that grip the Human Sphere, and airborne soldiers engage in dynamic operations all across space. Paratroopers often adopt a “live fast” motto, jumping out of the sky and into combat for a living. This can give them a reputation for wild behaviour, but Paratroopers are every bit as disciplined as their fellow soldiers. A Paratrooper character often fi nds themselves far behind enemy lines, facing challenges that less elite soldiers could only imagine.", [2, 2, 2, 1, 1, 0, 2], [skills_3.Skill.Survival, skills_3.Skill.Athletics, skills_3.Skill.Ballistics], [skills_3.Skill.Close_Combat, skills_3.Skill.Pilot, skills_3.Skill.Discipline], ["Combat Jump Pack", "Medium Combat Armour", "Combi Rifle", "4 Standard Reloads"], "2+D1", [factions_3.Faction.Ariadna], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Pilot] = new CareerModel("Pilot", "Atmospheric, suborbital, and intrasystem shuttles ply the skies and space lanes everywhere humanity has touched. From the humble city hopper to deadly assault dropships, pilots ensure these vessels make it from origin to destination, quickly and in one piece, under both mild and dire circumstances. Acceleration crèches, physical alteration, and MetaChemicals help these pilots endure the prolonged periods at high-g with limited ill effect, but it’s still a hard, very physical life. Still, very little cargo, passengers, or sensitive data would fl ow throughout the Sphere without pilots at the controls of a host of scows, skiffs, and couriers. Pilots also helm the military’s vast fl eet of dropships, high-g interceptors, net weasels, stealth infi ltrators, and many other craft for accomplishing their missions.", [2, 2, 1, 2, 2, 1, 0], [skills_3.Skill.Pilot, skills_3.Skill.Observation, skills_3.Skill.Spacecraft], [skills_3.Skill.Ballistics, skills_3.Skill.Hacking, skills_3.Skill.Tech], ["Armoured Clothing|Crashsuit", "Pistol", "2 Standard Reloads", "Inlaid Palm Curcuitry|AR Eye Implants"], "3+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Police] = new CareerModel("Police", "Law enforcement has had to adapt to the advances of the 22nd century in a big way. Humanity is spread so far that just as often police are privately contracted from the best mercenary agencies. Government-employed police forces work to keep the most fl agrant abuses at bay, though no law enforcement agency can hope to properly police the nightmare tangle of corporate laws. A police offi cer is highly trained in combat, negotiation tactics, and technical skills to help them in apprehending criminals. Police employ cutting-edge equipment and an offi cer also possesses specifi c skills related to their fi eld: cyber-crime, undercover and espionage, high-pressure hostage situations, and more.", [2, 2, 2, 0, 2, 1, 1], [skills_3.Skill.Athletics, skills_3.Skill.Observation, skills_3.Skill.Persuade], [skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics, skills_3.Skill.Medicine], ["Armoured Clothing", "Heavy Pistol", "4 Standard Reloads", "Adhesive Grenade (x2)|Stun Baton"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Politician] = new CareerModel("Politician", "Few professions are as simultaneously reviled and necessary as that of a Politician. With so many human souls and so much chaos threatening to engulf the Human Sphere at any moment, Politicians manage states, nations, whole interstellar empires. They conduct debates when the latest discovery of foreign action against their home comes to light. They work to develop and implement laws that better regulate the societies of which they are a part — or apart, if the Politician puts their own interests ahead of the people’s. To work in politics is to be a fighter; it is not a profession for the faint of heart. A Politician constantly struggles for influence on their own behalf and that of their constituents. Every new campaign brings with it hostile lobbyists, rival corporate interests, and ideological nemeses, all seeking to tear the Politician’s foundation out from beneath them.", [1, 2, 0, 2, 2, 2, 1], [skills_3.Skill.Persuade, skills_3.Skill.Psychology, skills_3.Skill.Discipline], [skills_3.Skill.Education, skills_3.Skill.Lifestyle, skills_3.Skill.Command], ["Negotiation Suite (3 days rental)", "Stims (x3)"], "2+D2", [factions_3.Faction.O12], sources_3.Source.Core, function () { return true; }),
                        _a[Career.RemoteOperator] = new CareerModel("Remote Operator", "Remote Operators pilot advanced combat and exploration machines. Highly advanced interface designs allow these operators to feel like they are right in the action, much like a TAG pilot. Due to their specialized training they come to know their machines as well as any pilot of a manned vehicle. Remote Operators engage in urban warfare, fighting in dense population centres where TAGs and large war-machines can’t go, relying on speed, mobility, and a keen sense of the battleground. Many Remote Operators also function in a scientific capacity, piloting submersible or deep-space salvage and forensics units to carry out delicate missions in extreme environments.", [2, 2, 1, 2, 2, 1, 0], [skills_3.Skill.Pilot, skills_3.Skill.Observation, skills_3.Skill.Tech], [skills_3.Skill.Education, skills_3.Skill.Hacking, skills_3.Skill.Discipline], ["Armoured Clothing", "Bioscanner", "Remote Presence Gear|Spotbot", "Stims (x3)"], "2+D1", [factions_3.Faction.Mercenary], sources_3.Source.Core, function () { return true; }),
                        _a[Career.ReverendAgent] = new CareerModel("Reverend Agent", "The Nomads have secret forces of their own in the Observants, a religious organization ideologically opposed to the likes of ALEPH and technology ruling over humanity. The Observants employ several types of Reverend Agents to carry out their most holy mission of protecting the human race. Reverend Moiras are elite women fighting against technologically superior enemies. They enact terrible vengeance upon those who have wronged the righteous. Reverend Custodiers manage intelligence and technical warfare, waging battles over Maya, intelligence networks, specialists in security programming. Reverend Healers perform field medicine, but they are also skilled warriors fighting alongside their Reverend sisters. Reverend Agents are among the most feared soldiers on the battlefield, and the most inspiring to their compatriots.", [2, 2, 1, 2, 2, 0, 1], [skills_3.Skill.Extraplanetary, skills_3.Skill.Athletics, skills_3.Skill.Hacking], [skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics, skills_3.Skill.Acrobatics], ["Light Combat Armour", "Vac Suit", "2 Oxygen Loads", "Assault Hacking Device|Defensive Hacking Device", "AutoMediKit", "Viral Pistol|Light Shotgun"], "1+D1", [factions_3.Faction.Nomads], sources_3.Source.Core, function () { return character_4.character.faction === factions_3.Faction.Nomads; }),
                        _a[Career.ShipCrew] = new CareerModel("Ship Crew", "Millions upon millions of ships fill the interplanetary routes of the Human Sphere. While a few, such as some employed by the AI ALEPH, can operate autonomously, the vast majority require skilled crew. Intrepid crewmembers keep their ships running both in and out of battle. A good crew is worth more than good upgrades, especially in a pinch. Ship Crew tends to form tight bonds with one another and with the ship itself, working in tandem to achieve victory. A wide variety of experience lends ship crew members a versatile set of skills: they have Zero-G training, most acquire significant technical skills, and have been in more than their share of scrapes. As a result, crew members tend to be some of the toughest and most experienced travellers in any system.", [1, 2, 1, 3, 2, 0, 1], [skills_3.Skill.Survival, skills_3.Skill.Tech, skills_3.Skill.Extraplanetary], [skills_3.Skill.Science, skills_3.Skill.Spacecraft, skills_3.Skill.Ballistics], ["Vac Suit", "5 Oxygen Loads", "Powered Multitool", "Repair Kit"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Smuggler] = new CareerModel("Smuggler", "Smuggling is a lucrative but highly dangerous [Career. Skilled Smugglers slip past the constant vigil of advanced nations with weapons and industrial secrets to sell to competitors. Contraband reaches every world with a demand for it, brought in by crafty Smugglers. Scoundrels who smuggle objects from or perhaps through the territories of powerful leaders fetch a high bounty, but they are highly skilled in evading trouble, understanding the behaviour and methods of law enforcement, and above all covering their own retreat.", [2, 2, 2, 1, 2, 1, 0], [skills_3.Skill.Pilot, skills_3.Skill.Observation, skills_3.Skill.Thievery], [skills_3.Skill.Tech, skills_3.Skill.Hacking, skills_3.Skill.Discipline], ["Adhesive Grenade|Banshee Grenade", "Smoke Grenade (x2)", "AR Eye Implants|Long ModCoat"], "0+D4", [factions_3.Faction.Submondo], sources_3.Source.Core, function () { return true; }, true),
                        _a[Career.SpecialForces] = new CareerModel("Special Forces", "The most elite soldiers in the Human Sphere carry out spec ops missions across known space... and sometimes upon unknown worlds. Special Forces units operate in covert missions of international warfare, hunting down war criminals, striking important assets and retreating before anyone can blame their acting governments. These elite units also carry out the most difficult ops in the war for Paradiso, attacking Combined Army commanders and bases, rescuing allies caught far behind enemy lines, and countering the threat of elite enemy units. Governments deploy Special Forces when discretion is needed — all too common in the shadow warfare fought between nations of the Human Sphere — and when regular mercenaries or law enforcement simply aren’t enough. A Special Forces soldier receives the finest training, equipment, and most important missions, demanding as much from themselves as their people do.", [2, 2, 2, 1, 1, 0, 2], [skills_3.Skill.Survival, skills_3.Skill.Resistance, skills_3.Skill.Ballistics], [skills_3.Skill.Close_Combat, skills_3.Skill.Hacking, skills_3.Skill.Discipline], ["Medium Combat Armour", "Combi Rifle|AP Rifle", "5 Standard Reloads", "Climbing Plus|Combat Jump Pack", "Garrotte"], "2+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.SportsPersonality] = new CareerModel("Sports Personality", "Sporting events are a time-honoured tradition of competition between cities, countries, even whole worlds. The greatest sports stars are legends, heroes to their people, larger than life. They possess a sway and a swagger that few political leaders can match, all stemming from their ability to perform incredible athletic feats. With the advances in genetic engineering, wetware implants, and cybernetics, professional athletes boast physiques and abilities the common person could only imagine. A Sports Personality could be a rising star of Aristeia! Dog-Bowl, or the less glamorous Aristeia! Underground. Champions of these bone-breaking contests and professional duels can rise from humble roots to touch immortal fame. Sports Personalities can bear the colours and face of a nation, quest only for the next adrenaline rush, or hunt for personal glory.", [2, 2, 1, 0, 1, 2, 2], [skills_3.Skill.Athletics, skills_3.Skill.Persuade, skills_3.Skill.Close_Combat], [skills_3.Skill.Acrobatics, skills_3.Skill.Athletics, skills_3.Skill.Ballistics], ["Biografted Attribute Augmentation 2|Super-Jump", "Uniform"], "1+D3", [factions_3.Faction.Ariadna], sources_3.Source.Core, function () { return true; }),
                        _a[Career.TagPilot] = new CareerModel("TAG Pilot", "TAG (Tactical Armoured Gear) units command a presence on the battlefi eld with their hulking armour platforms. One part personal tank and one part weapons arrays, TAGs turn pilots into one-person armies. They bear heavy fi repower and tremendous strength. Pilots thus develop a certain confi dence born of the machines they so skilfully command. TAG pilots often fi ght on the front lines against the Combined Army, or lead forays into enemy territory when stealth and subtlety are lost. TAG pilots command some of the deadliest forces on the battlefi eld and they know it. Most are all too happy to show off their skills, eager for the kind of victory only TAGs can bring.", [2, 2, 1, 2, 2, 0, 1], [skills_3.Skill.Pilot, skills_3.Skill.Tech, skills_3.Skill.Ballistics], [skills_3.Skill.Discipline, skills_3.Skill.Extraplanetary, skills_3.Skill.Survival], ["Armoured Clothing", "Inlaid Palm Curcuitry|AR Eye Implants", "Pistol", "2 Standard Reloads"], "2+D1", [factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Technician] = new CareerModel("Technician", "The technician possesses skill desired all across the Human Sphere. Technology-dependent nations like PanOceania need technicians to keep industry booming. Backwater worlds and gleaming metropolises alike need technical knowledge, whether the technician is servicing farm equipment or the latest model of racing cars. Nomads employ technicians to salvage, jury-rig, and dismantle their gains. Their colossal motherships exist in a state of constant repair and modifi cation, with technicians working beneath cascades of welding sparks, stringing cable throughout the hulls, and fi nding ingenious ways to recycle scrap. PanOceanian or Yu Jing techs produce the latest and greatest models of vehicles and weaponry, working to ensure their nation’s continued dominance in the intergalactic arena. Ariadnan technicians possess unrivalled skills in fi eld-testing and repairing rugged equipment, despite their lack of the most modern advances.", [2, 2, 1, 2, 0, 1, 2], [skills_3.Skill.Tech, skills_3.Skill.Pilot, skills_3.Skill.Hacking], [skills_3.Skill.Observation, skills_3.Skill.Resistance, skills_3.Skill.Discipline], ["Powered Multitool", "Repair Kit (with 5 Parts)", "Stims (x1)"], "1+D1", [factions_3.Faction.Ariadna, factions_3.Faction.Corporation, factions_3.Faction.Haqqislam, factions_3.Faction.Mercenary, factions_3.Faction.MinorNation, factions_3.Faction.Nomads, factions_3.Faction.O12, factions_3.Faction.PanOceania, factions_3.Faction.Submondo, factions_3.Faction.YuJing], sources_3.Source.Core, function () { return true; }),
                        _a[Career.TerraformingScientist] = new CareerModel("Terraforming Scientist", "Terraforming Scientists help transform new worlds into places much more fi t for human habitation. Terraforming is an expensive and time-consuming process, so only the brightest minds oversee the work. Characters in this profession possess a wide variety of scientifi c knowledge, from geology, climatology, and biology, to engineering and chemistry degrees. A Terraforming Scientist is usually adventurous, as she must brave alien environments and potentially dangerous fl ora and fauna. Every new world is a potential gold mine of resources. A Terraforming Scientist must be ambitious and persistent in order to prosper. She has probably seen stranger things than most, living out on the frontier. Terraforming Scientists are often more rugged than their lab-bound folk, though it’d be a mistake to doubt their academic prowess.", [0, 2, 1, 3, 2, 1, 0], [skills_3.Skill.Science, skills_3.Skill.Education, skills_3.Skill.Observation], [skills_3.Skill.Pilot, skills_3.Skill.Tech, skills_3.Skill.Extraplanetary], ["Survival Kit", "Analytical Kit (with 5 Reagents)", "Sensor Suite|Recorder"], "2+D1", [factions_3.Faction.Haqqislam], sources_3.Source.Core, function () { return true; }),
                        _a[Career.Trader] = new CareerModel("Trader", "Trade is the lifeblood of the Human Sphere. Nomads know it better than anyone. Because of their unique lifestyle, trading has become an art for them, maximizing the gains in value for as little as they can trade in return. Other Traders make a living on the frontier, conducting business with settlers and miners, frequenting planetary bazaars where a skilled Trader can fi nd anything for the right price. Some trade honestly with one hand and reach for the valuables with the other, like traders conducting business with Ariadna to bring them the latest in technological wonders... while also looking for ways to strip whatever resources they can manage. Haqqislam caravanserai serve as giant hubs of trade, where buyers can fi nd and acquire (or offl oad) nearly anything for the right price.", [1, 2, 1, 1, 2, 3, 0], [skills_3.Skill.Persuade, skills_3.Skill.Psychology, skills_3.Skill.Discipline], [skills_3.Skill.Pilot, skills_3.Skill.Education, skills_3.Skill.Lifestyle], ["Long ModCoat", "Survival Kit and Bottled Water", "Cosmetics Kit"], "1+D2", [factions_3.Faction.Corporation, factions_3.Faction.MinorNation], sources_3.Source.Core, function () { return true; }),
                        _a[Career.EmergencyResponder] = new CareerModel("112 Emergency Responder", "It’s said that in Ariadna, there are three callings that never rest; drinking, debauchery, and the 112 Emergency Services. While the first two are debatable, the third is not; the 112 are always on-duty, patrolling the borders and byways 25 hours a day, seven days a week. Stormy weather, natural disasters, Antipode attacks — whatever the conditions, whatever the danger, it doesn’t matter — when distress signals go up, the 112 head out. In the remote reaches of Ariadna, they’re not just first responders; they’re often the only responders. As such, they train not just as field medics and firefighters, but as trackers, engineers, and soldiers. Sometimes, saving lives means splinting a broken bone, or repairing a busted generator. Sometimes it means cracking heads. But whatever the need, when the call goes out, the 112 answer.", [1, 2, 1, 1, 2, 2, 2], [skills_3.Skill.Discipline, skills_3.Skill.Medicine, skills_3.Skill.Tech], [skills_3.Skill.Close_Combat, skills_3.Skill.Psychology, skills_3.Skill.Survival], ["Survival Rations (x4)", "MediKit (with 5 Serum)", "Powered Multitool", "Merovingian Survival Gear", "Teseum Hatchet"], "2+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.BratvaGangster] = new CareerModel("Bratva Gangster", "Every society has its criminals. Every underworld, its kingpins. In Rodina, that’s the Bratva — and they know it. Even though their style evokes the trappings of Russian Mafioso from Earth, the Bratva aren’t an import; they’re a fully home-grown enterprise. An empire built from scratch and tailored to the harsh realities of life on Dawn, Bratva are possessed of a uniquely Rodian form of pragmatism. Every Mafia family employs fronts, but the Bratva treat these polite fictions as what they are; a necessary cost of doing business. This leads to their remarkably integrated, unapologetic place in Ariadnan society. From tattooed underlings in track suits to the semi-legitimate “shipping professionals” that make up their lieutenants, their grim practicality is a constant, subtle presence in major cities.", [1, 2, 2, 2, 0, 1, 2], [skills_3.Skill.Close_Combat, skills_3.Skill.Resistance, skills_3.Skill.Thievery], [skills_3.Skill.Ballistics, skills_3.Skill.Persuade, skills_3.Skill.Survival], ["Armoured Clothing", "Fake ID 1", "Heavy Pistol", "2 Standard Reloads", "Wurari (2 doses)"], "1+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.birthPlace === "Rodina/Tartar"; }),
                        _a[Career.CaledonianNoble] = new CareerModel("Caledonian Noble", "The Caledonian clans boast a form of government unique in the Human Sphere, and their nobility form its proud, honour-bound heart. Caledonian Nobles work among their people; they hear their concerns, champion their causes, and fight their battles. If the Clan Chief is governor, judge, and warlord, they’re still one person. Rather than try to be everywhere at once, their additional nobles provide the legislative, judicial, and administrative apparatus. Usually originating from the Chief’s family and friends, capable Highlanders occasionally find themselves elevated to the position; and of course, anyone can challenge an existing Noble for their title. Loath to show any signs of weakness, Nobles have learned to throw their weight around; clad in Heavy Tesum jewellery —torcs, rings, necklaces and the like — they eschew subtlety, preferring strong, decisive action to lengthy deliberation.", [1, 1, 1, 1, 1, 3, 1], [skills_3.Skill.Command, skills_3.Skill.Lifestyle, skills_3.Skill.Persuade], [skills_3.Skill.Animal_Handling, skills_3.Skill.Close_Combat, skills_3.Skill.Analysis], ["Armoured Clothing", "Sgian Dubh"], "2+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.birthPlace === "Caledonia"; }),
                        _a[Career.ClaymoreDuellist] = new CareerModel("Claymore Duellist", "In a society where duels are an acceptable means of resolving disputes, it pays to have a dedicated expert on your side. And while Caledonians respect anyone who can fight their own battles, there’s also a great deal to be said for inspiring loyalty in capable warriors. Sometimes serving as bodyguards, but never far from their liege’s side, a professional duellist hones their craft to a keen edge through an intense training regimen and a tireless thirst for competition. Of course, such capable warriors do more than just settle disputes; when the Highlands are in danger, Duellists are often the first to leap to its defence, Claymores held high.", [2, 1, 3, 1, 0, 0, 2], [skills_3.Skill.Acrobatics, skills_3.Skill.Close_Combat, skills_3.Skill.Discipline], [skills_3.Skill.Athletics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], ["Teseum Claymore", "Light Combat Armour"], "0+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.FreeMiner] = new CareerModel("Free Miner", "Teseum is the wealth of Dawn, but it doesn’t grow on trees; it’s hewed from stone through sheer grit, determination, and stubbornness. In the absence of sophisticated mining tools, early Ariadnans learned to make do with what was available, and that attitude persists among its miners today. While every nation employs dedicated teams, most Teseum mining is handled through independent contractors. These “Free Miners” are paragons of the Ariadnan spirit; heading off into dangerous territory, with only their wits and their grit, forcibly extracting their fortune out of some of the hardest, most unforgiving terrain anywhere in the Human Sphere. From the mountains of Caledonia to the hills of Tartary, their adventures aren’t always profitable, but few lives are as self-reliant.", [1, 1, 2, 1, 1, 0, 3], [skills_3.Skill.Resistance, skills_3.Skill.Survival, skills_3.Skill.Tech], [skills_3.Skill.Athletics, skills_3.Skill.Pilot, skills_3.Skill.Spacecraft], ["XO Suit", "2 D-Charges", "Trench Hammer", "Bottled Water"], "0+D6", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return true; }),
                        _a[Career.FrontierDoctor] = new CareerModel("Frontier Doctor", "Far from the cushy accoutrements of a private practice, the security of a major hospital, or even the relative stability of a wartime medical facility, the life of a Frontier Doctor is chaotic, but satisfying, and rarely dull. Often the only person with medical training — or an advanced education of any sort — as far as the eye can see, a Frontier doctor can treat snakebites one day, tend to sick cattle the next, and deliver a bouncing baby Dogface the day after that. Not for the faint of heart, or the weak of stomach, Frontier Doctors take pride in looking after their communities. After all, if they don’t, it’s unlikely anyone else will.", [1, 2, 2, 1, 2, 0, 2], [skills_3.Skill.Analysis, skills_3.Skill.Animal_Handling, skills_3.Skill.Medicine], [skills_3.Skill.Education, skills_3.Skill.Medicine, skills_3.Skill.Survival], ["Ballistic Vest", "Basic Medical Supplies", "MediKit", "USAriadnan Entrenching Tool"], "2+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return true; }),
                        _a[Career.Hardcase] = new CareerModel("Hardcase", "USAriadna’s southern border is sparsely populated, plenty dangerous, and unforgiving by any standard. A desolate place to be sure, but the refuge of choice for the rough souls collectively known as Hardcases. A term with its roots in the American Old West, Hardcases are a different breed — rough as rawhide, and tough as Teseum nails — but to the homesteaders of the southern border, they’re heroes. Between the smugglers, bandits, and Antipode raids, life on the frontier is incredibly dangerous; and when the nearest major city is hundreds of kilometres away, law is what you can make it. But whether they’re veterans, adventurous frontier folk, or just someone looking to forget the past, when things are at their worst, these Hardcases step into the void; grievous angels in Stetson hats and leather dusters, dispensing frontier justice with hardly a word.", [1, 2, 2, 2, 0, 1, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Observation, skills_3.Skill.Survival], [skills_3.Skill.Analysis, skills_3.Skill.Animal_Handling, skills_3.Skill.Pilot], ["Americolt Eagle", "1 Standard Reload", "1 Eagle Reload", "Bandolier", "Binoculars", "Modcoat", "Long (Leather Duster)"], "1+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.birthPlace === "USAriadna"; }),
                        _a[Career.IrmandinhosSmuggler] = new CareerModel("Irmandinhos Smuggler", "Castropol has long been home to all manner of interesting — if occasionally suspect — dealings. Initially founded by a group of Galician biologists from the original colony ship, early settlers used their oceanographic research vessels to acquire, transport, and otherwise provide items for Ariadna’s nascent black market. Today, members of the Brotherhood of Waterborne Surveillance Volunteers, more commonly known as Irmandinhos, act as a shock force, run supplies to remote locations, and of course, they’ve kept right on smuggling. Training isn’t formalized; new recruits learn the ropes alongside veterans of the Irmandade, training in scavenging, repair, and short- range combat tactics, among other topics. With the Galician language essentially dead outside their ranks, they can ensure secrecy that can’t be hacked. A mainstay of the Ariadnan army, they’re also in contact with intelligence services from across the Human Sphere; though to what end, they’re not saying. Except, of course, in Galician.", [2, 1, 2, 1, 2, 1, 1], [skills_3.Skill.Close_Combat, skills_3.Skill.Pilot, skills_3.Skill.Tech], [skills_3.Skill.Observation, skills_3.Skill.Stealth, skills_3.Skill.Thievery], ["Chain Rifle", "4 Standard Reloads", "Light Shotgun (with 1 T2 Reload)|Americolt Eagle", "Smoke Grenade x2", "Knife", "Binoculars"], "1+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.LoupGarou] = new CareerModel("Loup-Garou", "Regardless of one’s feelings on the civil rights issues, a rampaging mass of tooth, claw, and muscle in the throes of a blood fury is a danger to themselves and everyone around them. Rather than trust in the dog-blooded to police themselves, the Ariadnan nations created the Loup-Garous. A joint task force, Loup-Garous are given the best training, equipment, and tactics — every possible advantage — and tasked with containing threats from Dogfaces, Wulvers, and even the occasional Antipode raid. In the aftermath of riots responding to the brutal apprehension and killing of a (later-exonerated) Dogface, the organization is attempting to reform on the fly, putting its shadier elements behind it. Trained to quickly ascertain threats, and versed in multiple de-escalation methods, modern Loup-Garou units are expected to eschew violent solutions whenever possible. But when that isn’t an option, they still strike with blinding precision, disabling their targets before matters get out of hand.", [1, 2, 1, 3, 0, 1, 1], [skills_3.Skill.Analysis, skills_3.Skill.Close_Combat, skills_3.Skill.Athletics], [skills_3.Skill.Ballistics, skills_3.Skill.Observation, skills_3.Skill.Psychology], ["Medium Combat Armour", "Boarding Shotgun", "3 Adhesive Shell Reloads", "1 Silver Bullet Reload", "Tactical Webbing"], "1+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.MerovingianCommercialAgent] = new CareerModel("Merovingian Commercial Agent", "Take one part explorer, two parts merchant, and mix in roving traders, spies, and con artists to taste. Add a dash of exploration, and season with an adventurous spirit, and you’ve got the recipe for a Merovingian Commercial Agent. If the cities are Merovingia’s heart, and the trade caravans her arteries, Commercial Agents are the blood; also, the sweat and tears. Trained in a variety of disciplines, and often a primary interaction point between Ariadna and galactics, a Commercial Agent has to be ready for absolutely anything. If they seem arrogant, it’s because confidence is their best weapon. If they seem uncaring, it’s because neutrality is their sworn duty. And if they keep one hand on their wallet, and another on their weapon? It’s because they’ve learned the hard way; not every partner can be trusted.", [1, 1, 0, 1, 2, 3, 1], [skills_3.Skill.Education, skills_3.Skill.Lifestyle, skills_3.Skill.Persuade], [skills_3.Skill.Hacking, skills_3.Skill.Lifestyle, skills_3.Skill.Stealth], ["Negotiator's Suite", "Fusebox", "Pistol", "Rucksack"], "2+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.birthPlace === "Merovingia"; }),
                        _a[Career.MilitiaMember] = new CareerModel("Militia Member", "It’s sometimes said that every Ariadnan is a soldier. And while that’s not technically true, it’s easy to see how it looks that way, given the prevalence of militias — both volunteer, and drafted — dotting the landscape. Much of Rodina mandates a term of service for citizens — equal parts education, training, and patrol — while takes pride in its multiple volunteer armies; and in Caledonia, it’s less an official designation, and more something one does when needed. However they come to be, Militias are diverse by nature, as well as necessity; on any given day, they may be called upon to provide scouting, fire support, field medicine, or just drive a truck. And while they might (and often do) complain, most Ariadnan Militia veterans are intensely proud of their service. They know that freedom isn’t free; they enjoy making their enemies foot the bill.", [2, 2, 1, 2, 0, 1, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Medicine, skills_3.Skill.Pilot, skills_3.Skill.Stealth], ["Armoured Clothing", "Rifle", "Painkillers (1 Dose)", "USAriadnan Entrenching Tool, Custom 1"], "0+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return true; }),
                        _a[Career.Spetsnaz] = new CareerModel("Spetsnaz", "Dubbed “The Walking Death” by the River Tribe during the First Antipode Offensive, most people have different names for the Spetznaz, and few are flattering. Heirs to the most underhanded and brutal tactics of the Russian Special Forces, their techniques have been honed by years of Cossack discipline, and the harsh, unforgiving teacher that is the planet Dawn. Their boot camp is founded on one simple principle; rather than stretch the limits of human endurance, they flatly deny the existence of such limits, and push forward. Paragons of the Rodinan virtue of “work hard/play hard,” these soldiers are an unholy terror whether you encounter them in the training yard, the saloon, or the battlefield. But when Ariadna needs defending, there is no better barbed-wire fence than this caustic group of troublemakers.", [2, 1, 2, 2, 1, 0, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Resistance], [skills_3.Skill.Discipline, skills_3.Skill.Stealth, skills_3.Skill.Thievery], ["Jump Pack", "Heavy Combat Armour", "Boarding Shotgun", "Tactical Webbing"], "0+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.faction === factions_3.Faction.Ariadna; }),
                        _a[Career.Scavenger] = new CareerModel("Scavenger", "Finding employment can be difficult for anyone. But when you’re a hulking mass of muscle, hated and feared by most of the population, it can be a waking nightmare. Demogrants don’t apply to the dog-blooded; most get by through a mix of hunting, foraging, and salvage. At least, when they’re not fighting off the latest big shot drunk, evading hostile DNAriadnans, or slowly killing themselves with vodka and bitterness. For their part, Antipode Trinaries cut off from their packs are no less dangerous for their desperation; like a racoon with Teseum-laced claws, they take what they can get, but getting in their way is unwise.", [2, 2, 2, 1, 1, 0, 2], [skills_3.Skill.Close_Combat, skills_3.Skill.Survival], skills_3.SkillsHelper.getSkills().filter(function (s) { return s !== skills_3.Skill.Close_Combat && s !== skills_3.Skill.Survival; }).slice(), [], "0+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.host === alienHosts_2.AlienHost.Antipode; }),
                        _a[Career.AntipodeWarlord] = new CareerModel("Antipode Warlord", "Long Shadow. Sharp Knife. Names that strike fear into anyone who knows them, and lives to tell the tale; which isn’t many. To be an Antipode war-leader is to face down a technologically superior interloper, and to stand your ground. To look at the changing world, and defiantly bellow “no. You change.” Often mistaken for chiefs or tribal elders, Warlords often have little to do with decision-making capabilities; unless of course, those decisions take place on a battlefield. Warlords are chosen by a combination of consensus, combat prowess, and the most prized and rare trait among Antipode; the ability to stare down a growling, hungry pack of killers, and command them to follow you. Anyone who can pull that off, the reasoning goes, can face a human army without any trouble.", [2, 2, 2, 1, 0, 2, 1], [skills_3.Skill.Command, skills_3.Skill.Close_Combat, skills_3.Skill.Stealth], [skills_3.Skill.Acrobatics, skills_3.Skill.Animal_Handling, skills_3.Skill.Survival], ["Knife", "Tactical Bow", "2 AP Arrow Reload", "Wolfshots (3 doses)"], "0+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.host === alienHosts_2.AlienHost.Antipode; }),
                        _a[Career.AssaultPackMember] = new CareerModel("Assault Pack Member", "Slavery. There’s really no other way to put it; at least, not at first. Biochemically shackled and leashed to the will of their would-be conquerors, to be an Assault Pack Member is to be an unwilling fist; a mind-controlled weapon, wielded as the master sees fit. And yet, once that initial breaking period is passed, the equation becomes much more complicated. For every tale of Assault Packs tearing their Controllers to shreds, there’s another of an injured handler being dragged back to base by a lone, protective Antipode. For every enemy drugged and mind-controlled, there’s an orphan cub who was taken in, now fighting to protect the only family they’ve ever known. But past the propaganda, an Assault Pack remains a living, breathing, act of violence upon free will… and anything else foolish enough to get in its way.", [3, 2, 3, 2, 0, 0, 0], [skills_3.Skill.Acrobatics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Animal_Handling, skills_3.Skill.Stealth, skills_3.Skill.Survival], ["Antipode Control Cranial Implant", "Teseum-Edged Claws"], "0+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.host === alienHosts_2.AlienHost.Antipode; }),
                        _a[Career.DogBloodedIrregular] = new CareerModel("Dog-Blooded Irregular", "Most would be hard-pressed to call any unit incorporating Dog-Warriors and Wulvers “regular;” the presence of these preternaturally strong troops allows for some interesting tactical options, even by the standards of irregular military units. From Caledonia’s Cameronian Regiment — berserkers who injure themselves to enter the battle in Dog-Warrior form, Claymores in-hand —to USAriadnan Devil Dogs Marines, to Rodina’s catch-as-catch-can assignment of their primarily Kazak Dog-Warriors, tearing into the enemy with Teseum-laced claws, if you can fight, there’s no shortage of opportunities in the Ariadnan armed forces. And whether the brass likes it or not, there’s no denying that a blood fury is like unleashed hell on a battlefield. Regardless of their classification, Irregulars are trained to fight, to defend their homes, and ultimately, to kill their enemies. It’s also important to avoid being killed themselves; but those lessons come with time and experience. Or not.", [2, 1, 2, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Acrobatics, skills_3.Skill.Stealth, skills_3.Skill.Athletics], ["Chain Rifle", "Chain Rifle", "Smoke Grenade (x2)"], "1+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver;
                        }),
                        _a[Career.Cameronian] = new CareerModel("Dog-Blooded Irregular: Cameronian", "Most would be hard-pressed to call any unit incorporating Dog-Warriors and Wulvers “regular;” the presence of these preternaturally strong troops allows for some interesting tactical options, even by the standards of irregular military units. From Caledonia’s Cameronian Regiment — berserkers who injure themselves to enter the battle in Dog-Warrior form, Claymores in-hand —to USAriadnan Devil Dogs Marines, to Rodina’s catch-as-catch-can assignment of their primarily Kazak Dog-Warriors, tearing into the enemy with Teseum-laced claws, if you can fight, there’s no shortage of opportunities in the Ariadnan armed forces. And whether the brass likes it or not, there’s no denying that a blood fury is like unleashed hell on a battlefield. Regardless of their classification, Irregulars are trained to fight, to defend their homes, and ultimately, to kill their enemies. It’s also important to avoid being killed themselves; but those lessons come with time and experience. Or not.", [2, 1, 2, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Athletics, skills_3.Skill.Close_Combat, skills_3.Skill.Resistance], ["Teseum Claymore", "Smoke Grenade", "Grenade", "Chain Rifle"], "1+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return (character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver) &&
                                (character_4.character.birthPlace === "Caledonia");
                        }),
                        _a[Career.KazakDogWarrior] = new CareerModel("Dog-Blooded Irregular: Kazak Dog-Warrior", "Most would be hard-pressed to call any unit incorporating Dog-Warriors and Wulvers “regular;” the presence of these preternaturally strong troops allows for some interesting tactical options, even by the standards of irregular military units. From Caledonia’s Cameronian Regiment — berserkers who injure themselves to enter the battle in Dog-Warrior form, Claymores in-hand —to USAriadnan Devil Dogs Marines, to Rodina’s catch-as-catch-can assignment of their primarily Kazak Dog-Warriors, tearing into the enemy with Teseum-laced claws, if you can fight, there’s no shortage of opportunities in the Ariadnan armed forces. And whether the brass likes it or not, there’s no denying that a blood fury is like unleashed hell on a battlefield. Regardless of their classification, Irregulars are trained to fight, to defend their homes, and ultimately, to kill their enemies. It’s also important to avoid being killed themselves; but those lessons come with time and experience. Or not.", [2, 1, 2, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Acrobatics, skills_3.Skill.Discipline, skills_3.Skill.Stealth], ["Teseum-Edged Claws", "Smoke Grenade (x3)", "Chain Rifle", "Chain Rifle"], "1+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return (character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver) &&
                                (character_4.character.birthPlace === "Rodina/Tartar");
                        }),
                        _a[Career.DevilDogsMarines] = new CareerModel("Dog-Blooded Irregular: Devil Dogs Marines", "Most would be hard-pressed to call any unit incorporating Dog-Warriors and Wulvers “regular;” the presence of these preternaturally strong troops allows for some interesting tactical options, even by the standards of irregular military units. From Caledonia’s Cameronian Regiment — berserkers who injure themselves to enter the battle in Dog-Warrior form, Claymores in-hand —to USAriadnan Devil Dogs Marines, to Rodina’s catch-as-catch-can assignment of their primarily Kazak Dog-Warriors, tearing into the enemy with Teseum-laced claws, if you can fight, there’s no shortage of opportunities in the Ariadnan armed forces. And whether the brass likes it or not, there’s no denying that a blood fury is like unleashed hell on a battlefield. Regardless of their classification, Irregulars are trained to fight, to defend their homes, and ultimately, to kill their enemies. It’s also important to avoid being killed themselves; but those lessons come with time and experience. Or not.", [2, 1, 2, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Observation], [skills_3.Skill.Animal_Handling, skills_3.Skill.Resistance, skills_3.Skill.Stealth], ["Medium Combat Armour", "Smoke Grenade (x2)", "Boarding Shotgun"], "1+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return (character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver) &&
                                (character_4.character.birthPlace === "USAriadna");
                        }),
                        _a[Career.DogBowlPlayer] = new CareerModel("Dog-Bowl Player", "In a world of mistrust, fear, and outright hatred, it’s nice to be cheered. It’s even better to be cheered while the same qualities that mark them an outcast, propel them to indescribable feats of athleticism. In the streets, the risk of a blood fury causes police to profile them, and parents to hide their children; but in the game, that same fury carries them to glorious victory, amidst thunderous applause. To be a Dog-Bowl player is to live in a pocket of adoration amidst a sea of trouble; also, the salary’s nice. Unfortunately, athletic careers tend not to last all that long. Injury, scandal, the real or perceived effects of aging; any and all of these factors can cause the whole thing to come crashing down. But while it lasts, there’s nothing quite like it.", [2, 0, 3, 1, 0, 2, 1], [skills_3.Skill.Acrobatics, skills_3.Skill.Athletics, skills_3.Skill.Close_Combat], [skills_3.Skill.Close_Combat, skills_3.Skill.Lifestyle, skills_3.Skill.Observation], ["Cod (3 doses)", "Dog-Bowl Armour", "Recorder"], "1+D5", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver;
                        }),
                        _a[Career.DogNationActivist] = new CareerModel("Dog Nation Activist", "“Equality or Death! This is the voice of the metisy! The voice that cannot be silenced! The shout that cannot be ignored! The roaring cry of the Dog Nation!” It’s been years since John “Vanya” Rotten uttered those words; and while it seemed like things were getting better, many Dogfaces and Wulvers feel that it’s been two steps forward, two steps back. The Dog Nation isn’t in the business of waiting for the world to come around; its members want real change, and they’re willing to take action to get it. If that means protests, rallies, and civil disobedience, so be it. And for some, if that means stepping outside the boundaries of the law, that’s fine; they consider any damage they cause to be a drop in the bucket when compared to everything they’ve been through.", [1, 1, 1, 0, 1, 2, 3], [skills_3.Skill.Education, skills_3.Skill.Persuade, skills_3.Skill.Tech], [skills_3.Skill.Hacking, skills_3.Skill.Stealth, skills_3.Skill.Thievery], ["Digicloak (Urban)", "Fusebox", "Rebreather", "2 Recorders"], "1+D2", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver;
                        }),
                        _a[Career.ForestRanger] = new CareerModel("Forest Ranger", "One of the few career paths that actively recruits Dogfaces and Wulvers, Forest Rangers — or simply “Wardens” in Caledonia — fill a unique niche in Ariadnan society. Even in the Antipodean wilds, having a lone Trinary keep tabs on the territory isn’t an uncommon occurrence. Less focused on conservational efforts or cracking down on poachers, Rangers cover wide stretches of wild territory; mapping, cataloguing, and marking changes in the natural ecosystem. Maintaining roads, outposts, and waystations is a constant task; given the large distances between many Ariadnan cities, they also provide guidance, support, and the occasional rescue to travellers. While not soldiers per se, the Ariadnan wilds are far from safe, so while some Rangers certainly know how to fight, every Ranger learns how to avoid one.", [1, 3, 2, 1, 1, 0, 1], [skills_3.Skill.Medicine, skills_3.Skill.Stealth, skills_3.Skill.Survival], [skills_3.Skill.Athletics, skills_3.Skill.Animal_Handling, skills_3.Skill.Survival], ["Knife", "Nav Suite (Forest)", "Survival Kit (Forest)", "Tracking Collar", "USAriadnan Entrenching Tool, Custom 1"], "1+D3", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver ||
                                character_4.character.host === alienHosts_2.AlienHost.Antipode;
                        }),
                        _a[Career.Raider] = new CareerModel("Raider", "From the Dogface desperados of the USAriadnan frontier, to pirates harrying remote Stanitsas, to the Antipode raiding groups that provide a constant source of terror to frontier folk, Raiders all have one thing in common; they take what they want, using lethal force if necessary. Or sometimes, if they’re bored enough. Between the threats of Antipodes, wild animals, attacks by galactics, and the planet itself, there’s no shortage of opportunities for raiding in Ariadna. Unlike Submondo, who generally have an organizational structure, Raiders are wildcards in the truest sense; accountable to nothing but themselves, and one step ahead of what passes for law on the frontier. It is a life that few choose outright, but one that many find themselves particularly well-suited to.", [1, 1, 3, 2, 0, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Thievery], [skills_3.Skill.Pilot, skills_3.Skill.Survival, skills_3.Skill.Stealth], ["Surge (1 dose)", "Teseum Chopper"], "0+D4", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver ||
                                character_4.character.host === alienHosts_2.AlienHost.Antipode;
                        }, true),
                        _a[Career.Volk] = new CareerModel("Volk", "“Pay up, or I throw you to the wolves.” Whoever first had the idea is lost to time, but where most Ariadnans saw a problem, the Bratva saw an opportunity. Many Dogfaces are societal castoffs, who can also casually destroy a motorcycle with their bare hands. The gangsters sensed an opportunity, and began recruiting Dogfaces as cheap muscle. Nowadays, the term “Volk” (from the Russian волк, meaning wolf), is used to describe any Dogface (or these days, Wulver) involved in Submondo activity. While not all Volks wear tracksuits and speak in mangled clichés, popular Ariadnan fiction suggests otherwise, and more than one Volk has simply steered into the stereotype, rather than constantly explain themselves. While it’s hardly upright work, many find it honest in its way. Regardless of their feelings on the matter, there’s no denying that they make excellent muscle.", [2, 1, 3, 1, 0, 1, 1], [skills_3.Skill.Athletics, skills_3.Skill.Close_Combat, skills_3.Skill.Stealth], [skills_3.Skill.Animal_Handling, skills_3.Skill.Close_Combat, skills_3.Skill.Thievery], ["Cod (2 doses)", "D.E.P.", "Nitrocaine (1 dose)", "Painkillers (2 doses)", "Sports Padding"], "", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () {
                            return character_4.character.host === alienHosts_2.AlienHost.Dogface ||
                                character_4.character.host === alienHosts_2.AlienHost.Wulver;
                        }, true),
                        _a[Career.WulverShockTroop] = new CareerModel("Wulver Shock Troop", "“Airaghardt!” (Go Forth!) — the Gaelic motto of the Caledonian 9th Wulver Grenadiers Regiment — sums up the mentality of most Wulver strike teams; they hit hard, they hit fast, and if at all possible, they hit first. While studies have been inconclusive as to whether or not Wulvers are any more or less intelligent than their Dogface cousins, there’s no denying they have a much easier time communicating, leading some mixed-troop units to rely on them as commanders and field medics. Ariadnan militaries are still learning how best to use their Dogfaces; so how to effectively utilize Wulvers’ unique contributions is very much a work-in-progress. Until then, Wulver soldiers can usually be found in the thick of things, riding the blood fury to victory or death… or far too often, both.", [2, 1, 2, 2, 2, 1, 0], [skills_3.Skill.Athletics, skills_3.Skill.Close_Combat, skills_3.Skill.Ballistics], [skills_3.Skill.Acrobatics, skills_3.Skill.Command, skills_3.Skill.Medicine], ["Light Combat Armour", "Explosive Grenade", "Shock Grenade", "Smoke Grenade", "T2 Boarding Shotgun"], "1+D1", [factions_3.Faction.Ariadna], sources_3.Source.Ariadna, function () { return character_4.character.host === alienHosts_2.AlienHost.Wulver; }),
                        _a[Career.AkbarDoctor] = new CareerModel("Akbar Doctor", "The study of Tebb al-Nabi, the Prophet’s Medicine, is more than a scholarly pursuit; it’s a metaphor for understanding the cosmos and the sublime intersection of Art, Science, and Spiritual pursuits. Having said that, anyone witnessing an Akbar Doctor (“great” in Arabic) at work would be hard-pressed to deny their practical applications, they aren’t just some of the best surgeons in the Human Sphere, they’re arguably the finest battlefield medics anyone has ever produced. Able to perform complex surgeries, apply genetic therapy, and deploy fast-acting nanomachines in the time it takes others to perform a diagnosis, it’s no exaggeration to suggest that the Great Doctors have played an integral role in Haqqislam’s military holding its own against far greater numbers. Not everyone can do what an Akbar Doctor can, and almost no one does it better under pressure.", [0, 1, 0, 1, 3, 2, 2], [skills_3.Skill.Discipline, skills_3.Skill.Education, skills_3.Skill.Medicine], [skills_3.Skill.Analysis, skills_3.Skill.Medicine, skills_3.Skill.Psychology], ["Basic Medical Supplies", "Akbar Kit|MediKit and Silk (1 dose)", "Light Combat Armour"], "2+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.Caravaner] = new CareerModel("Caravaner", "Caravanserais are more than just space stations, ports of call, or trade hubs; they’re a slice of Bourak out among the stars. A thousand factors go into each decision, from the cut of a rug, to which decks will have live musical performances, to the water pressure in a fountain. If Caravanserais are the beating heart of Haqqislam in space, Caravaners are the cardiac physicians, applying Tebb al-Nabi to ensure its continued health. Travelling from Caravanserai to Caravanserai, staffing and maintaining a particular location, or setting up shop as a Peddler, most Caravaners have done it all, or are on their way to doing so. They are passengers, pilots, technicians, security and more, but most of all, they are citizens.", [1, 2, 1, 1, 1, 2, 2], [skills_3.Skill.Extraplanetary, skills_3.Skill.Lifestyle, skills_3.Skill.Observation], [skills_3.Skill.Persuade, skills_3.Skill.Pilot, skills_3.Skill.Tech], ["Blu Khat (2 doses)", "Riha Rations", "Vac Suit (2 Oxygen Loads)", "Powered Multitool", "Inlaid Palm Circuitry|Pistol and Stun Baton"], "2+D3", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.DiwanFunctionary] = new CareerModel("Diwân Functionary", "Many citizens find employment with Haqqislam’s government. Bureaucrats, diplomats, minor local officials, statisticians, and lawyers; the Diwân provide no shortage of opportunities for Haqqislam’s citizens to participate in civic governance, from supply clerks overseeing military support for the Diwân al Jund, to press agents for the Diwân al Hachib managing requests relating to the president, including flagging the journalists that might be foreign spies. Agents of the Diwân al Mazalim travel between Caravanserai, often hand-in-hand with agents from the Diwân al Kharâj, spotting foreign investors attempting to use Haqqislam’s intricate tax codes as shelter. The Diwân al Rasa’il’s agents coordinate with ALEPH while fending off quantronic attacks both foreign and domestic. Diwân Functionaries work tirelessly in the service of Haqqislam, with no issue too small, and no challenge too great.", [0, 1, 0, 1, 2, 2, 3], [skills_3.Skill.Analysis, skills_3.Skill.Persuade, skills_3.Skill.Psychology], [skills_3.Skill.Command, skills_3.Skill.Hacking, skills_3.Skill.Tech], ["Cosmetics Kit", "Psychotropics (2 Doses)", "Repair Kit|Negotiation's Kit (2 Day's Rental)", "Armoured Clothing"], "1+D4", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.GreyMarketSpy] = new CareerModel("Grey Market Spy", "Given the thriving R&D industry in Haqqislam—particularly in biotechnological fields—it comes as no surprise that corporate espionage runs rampant, especially on Bourak. Free of the heavy regulations and protections that govern the Silk trade, Haqqislam Biohealth Corps are locked in a high-stakes chess game of sabotage, headhunting, and industrial espionage—and that’s before foreign powers get involved. Whether acquisition, counter-espionage, or more direct forms of sabotage, there’s a high demand for discreet agents willing to get their hands dirty. Enter the Grey Market Spy. Either as part of a Biohealth Corp’s dedicated counter-intelligence staff, or as freelancers offering their skills to whomever holds their contract, these professionals provide a less-combative alternative to many mercenary companies. A Grey Market Spy aims for their targets to lose profits, not lives. But when the chips are down, they’ll be what they always are: professional.", [1, 3, 0, 1, 1, 2, 1], [skills_3.Skill.Lifestyle, skills_3.Skill.Stealth, skills_3.Skill.Thievery], [skills_3.Skill.Hacking, skills_3.Skill.Observation, skills_3.Skill.Tech], ["Djinncloak", "Fake ID 3|Breaking & Entering Kit", "Hacking Device|Vrabec Pistol"], "1+D5", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.Hafza] = new CareerModel("Hafza", "In Islamic mythology, four guardian spirits (known as Hafazas or Hafzas) keep watch over believers, bolstering their soul against malevolent influence and recording their deeds. In Haqqislam, the elite Hafza unit are guardian angels of the battlefield. Every Hafza trains at the prestigious Military Academy of Al-Khaafdif, where they learn tactics, philosophy, and behavioural sciences. A Hafza can turn any group of soldiers into an efficient, coordinated combat force, no matter how eclectic or diverse their skills and backgrounds. Soldiers know they can rely on the Hafza, who never ask for something they’re not willing to do themselves. Enemy forces quickly learned to target these lynchpins, so the modern Hafza is a master of disguise; even other Haqqislam soldiers have difficulty identifying them. The guardians are always there, invisibly guiding their charges to safety through any storm.", [1, 2, 0, 1, 2, 2, 2], [skills_3.Skill.Command, skills_3.Skill.Psychology, skills_3.Skill.Stealth], [skills_3.Skill.Ballistics, skills_3.Skill.Discipline, skills_3.Skill.Lifestyle], ["Hafza Holomask", "Spitfire|Rifle with Light Shotgun", "Cosmetics Kit"], "1+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return character_4.character.faction === factions_3.Faction.Haqqislam; }),
                        _a[Career.HassassinExemplar] = new CareerModel("Hassassin Exemplar", "Hassassins have a singular goal: to protect the Search for Knowledge. Though, removing impediments to the scientific, cultural, and spiritual development of the Human Sphere is often anything but. Safeguarding the future requires full dedication to the cause. Seekers of Haqqislamite Virtues, committed to the Search for Knowledge. In other words, Hassassin Exemplars. While not every Hassassin is an assassin per se, each strives to understand the art of murder. The loss of any life is regrettable, but that cost is ever balanced against the Search. In a society where Cubes are commonplace, death can seem like little more than an inconvenience. Hassassins, however, use it to deliver a clear message that those who place themselves above humanity’s future are never safe, no matter where they hide.", [2, 2, 1, 1, 1, 2, 1], [skills_3.Skill.Close_Combat, skills_3.Skill.Discipline, skills_3.Skill.Stealth], [], // determined by Order
                        [""], // determined by Order
                        "1+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return character_4.character.faction === factions_3.Faction.Haqqislam; }),
                        _a[Career.HassassinFidayHaqqislam] = new CareerModel("Hassassin Fiday", "No covert operative in human space is deadlier or more feared than those of the Hassassin Society; and among the Society, few are as deadly or feared as the Fidays. Embracing death as part of their duty, the Fidays, or “those who sacrifice,” are not sent to quietly and subtly remove their targets: they intend to make a scene. To a Fiday, assassination is more an act of communication than one of violence, and they seek to safeguard the future of humanity’s evolution through powerful disincentivizing. No matter who you are, or how safe you believe yourself to be, the Fiday can find and end you. Needless to say, many Fidays don’t outlive their assignments.", [1, 2, 1, 2, 1, 1, 2], [skills_3.Skill.Close_Combat, skills_3.Skill.Discipline, skills_3.Skill.Stealth], [], // determined by Order
                        ["Fake ID 3", "Cosmetics Kit", "Climbing Plus", "Grazeblade", "DT Sniper Rifle", "2 Standard Reloads"], "1+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return character_4.character.faction === factions_3.Faction.Haqqislam; }),
                        _a[Career.Khawarij] = new CareerModel("Khawarij", "Haqqislam’s biomedical research is second to none, a fact embodied by their best-in-class super soldier programs. Most notable among these are the Khawarijs, a group of Haqq Mutazilite scholars who undergo Runihura—literally “destructor” — treatment, resulting in sagacious super-soldiers who look as though they could subdue an Ezhdeha Tariki with their bare hands. Khawarijs endeavour to maintain a “wise contradiction and perfect balance,” weighing their scholarly pursuits and enhanced combat prowess against each other in delicate harmony. Though not all Khawarijs possess such a philosophical bent, it would be a mistake to classify any as soulless, unnatural, or otherwise detached from humanity. Unlike the Nomads’ Chimera, who push for transcendence, Haqqislam’s super-soldiers seek a greater understanding of the self through skilful application of The Prophet’s Medicine, building the temple in which Paradise is found.", [2, 2, 2, 2, 1, 0, 1], [skills_3.Skill.Athletics, skills_3.Skill.Athletics, skills_3.Skill.Discipline], // TODO: Athletics twice?
                        [skills_3.Skill.Acrobatics, skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat], ["Spitfire", "Runihura Augmentation"], "2+D4", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.KumGanger] = new CareerModel("Kum Ganger", "“North, South, East, or West, where to find the Kyrgyz? By the silver hand of Alexander, look for them around their enemies!” For the Kum, this age-old Kyrgyz battle shout is as much a way of life as it is a rallying cry. Of course, to a Kum Ganger, the definition of enemy can include foreign militaries, rival gangs, local police, or a best friend, depending on the day. While the Sword of Allah recruits from these ruthless biker gangs for their Kum Motorized Troops, most Kum Gangers are preoccupied with dealings far less savoury or essential to the continued well-being of Haqqislam. The Kum Gangers few rules include: ride hard, fight harder, and keep what you kill. Possession is the whole of the law. If you’re not strong enough to stop something being taken, it was never truly yours to begin with.", [1, 0, 1, 0, 2, 2, 3], [skills_3.Skill.Ballistics, skills_3.Skill.Pilot, skills_3.Skill.Resistance], [skills_3.Skill.Command, skills_3.Skill.Tech, skills_3.Skill.Thievery], ["Smoke Grenade", "Chain Rifle", "Knife", "Signal Flare", "Kum Motorcycle", "Ad-Qali Armour 2", "ExcelRate (1 dose)"], "1+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.MagharibaGuard] = new CareerModel("Maghariba Guard", "While not exactly known for armoured regiments, the Maghariba Guard is nevertheless the pride of the Haqqislamite military. Impressive firepower and mobility mean the XPR-5 Akrep Scorpion TAGs can keep pace with anything PanOceania or Yu Jing can throw at them. When it comes to military spending, however, Haqqislam doesn’t have a seat at that table. Always outnumbered, and often outgunned, the Maghariba Guard are nevertheless anything but tentative or cautious. And crafty. That’s a must. Most TAG pilots would struggle with the cognitive dissonance in piloting a battlefield colossus with patience, precision, and cunning, so the Maghariba cannot afford to be most TAG Pilots. They must be better, or at the very least, more thoughtful in their actions. Maghariba tend to embody this contradiction in every aspect of their life: hyper-analysing the smallest details, yet willing to throw caution to the wind at a moment’s notice.", [1, 2, 1, 2, 2, 0, 2], [skills_3.Skill.Discipline, skills_3.Skill.Observation, skills_3.Skill.Pilot], [skills_3.Skill.Analysis, skills_3.Skill.Ballistics, skills_3.Skill.Education], ["Steady (2 doses)", "Rihla Rations", "Pistol"], "3+D1", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return character_4.character.faction === factions_3.Faction.Haqqislam; }),
                        _a[Career.MedicalResearcher] = new CareerModel("Medical Researcher", "For most Biomedical researchers, there is no more attractive environment than Bourak. Compared to the capitalistic pressures of most Hypercorps to create marketable products, the Search for Knowledge has prioritized understanding, and Tebb al-Nabi has given medicine a near-sacred place in Haqqislamite society. For a Medical Researcher, the chance to truly push the limits of human understanding without the need for results is incredibly attractive, though it’s not all roses and sunshine. Competition between Biohealth Corps is incredibly fierce, and recruiting tactics aren’t always ethical. Most Medical Researchers receive at least cursory training in counter-espionage; finding themselves employed in very different circumstances on short notice is a real risk. Everyone involved wants to see a Medical Researchers work come to fruition, however and for many that more than makes up for any unanticipated excitement.", [1, 2, 1, 1, 2, 1, 2], [skills_3.Skill.Education, skills_3.Skill.Medicine, skills_3.Skill.Science], [skills_3.Skill.Analysis, skills_3.Skill.Animal_Handling, skills_3.Skill.Command], ["Laboratory (2 month's rental credit)", "Noor AR", "Saifari AR", "Sniffer 2", "Geist Upgrade: +2 Education ranks|Geist Upgrade: Research Specialist talent"], "3+D2", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.MuhafizAgent] = new CareerModel("Muhafiz Agent", "Outside of the Hassassins, the Muhafiz make up Haqqislam’s only significant intelligence agency. In theory, the authority of the Funduq Security and Intelligence Force—the Muhafiz—is limited to trade route security. In practice, every aspect of the Human Sphere technically intersects with Haqqislam’s trade interests. High Command enjoy working with agents who don’t answer to a quasi-mythical figure outside of their command chain and send Muhafiz Agents across the Human Sphere. Some units have gained considerable notoriety, including their special assault corps: the Djanbazan Tactical Group. Many undergo extensive biogenic treatments and augmentations. Al Hawwa’ (“the snake charmer” in Classical Arabic) are a clandestine naval unit specializing in Infowar and covert operations. But whatever their classification, the Muhafiz are a popular tool for those uncomfortable with the Old Man’s stranglehold on Haqqislamite intelligence.", [1, 2, 1, 2, 2, 1, 1], [skills_3.Skill.Analysis, skills_3.Skill.Hacking, skills_3.Skill.Observation], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Medicine], ["Assault Hacking Device|Multispectral Visor 2", "Vrabec Pistol", "Armoured Clothing", "Hawala Dot 1", "Djanbazan Regeneration|Sixth Sense"], "2+D1", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return character_4.character.faction === factions_3.Faction.Haqqislam; }),
                        _a[Career.Odalisque] = new CareerModel("Odalisque", "The most effective bodyguards in the Human Sphere, Funduq's Çember Odalisques Academy turns pretty faces into ethereal beauties, gifted athletes into precise killers, and flirtatious personalities into master manipulators. Their composure, precision, and beauty are the envy of agents across the Human Sphere. Able to wield their bodies and minds as precise instruments to achieve their goals, everything about an Odalisque is painstakingly considered; even the title is designed to conjure the image of an exotic beauty gracefully reclining over a divan. Though possessing every courtly charm imaginable, there is nothing languid about them once they spring to action. Combining the grace of a dancer with the ferocity of a tiger, more than one would-be kidnapper has wound up at the mercy of an Odalisque they mistook for just another pretty face.", [1, 1, 0, 1, 1, 3, 2], [skills_3.Skill.Acrobatics, skills_3.Skill.Observation, skills_3.Skill.Persuade], [skills_3.Skill.Ballistics, skills_3.Skill.Education, skills_3.Skill.Resistance], ["Aletheia Kit", "Nanopulse", "Subdermal Grafts|Odalisque Augmentation"], "3+D1", [factions_3.Faction.Haqqislam], sources_3.Source.Haqqislam, function () { return true; }),
                        _a[Career.Explorer] = new CareerModel("Explorer", "The Hyperpower has always prided itself on its Explorers, the brave souls who fearlessly chart new courses, find neo-material rich asteroids to mine, and in exceptionally rare cases, new worlds to colonise. Of course, most of an Explorer’s life is spent in far less grandiose pursuits. Whether conducting an environmental survey, navigating an asteroid belt, or pushing the boundaries of the Human Edge, Explorers all have one thing in common—they heard the call of adventure.", [1, 2, 1, 3, 1, 0, 1], [skills_3.Skill.Extraplanetary, skills_3.Skill.Pilot, skills_3.Skill.Spacecraft], [skills_3.Skill.Observation, skills_3.Skill.Survival, skills_3.Skill.Tech], ["Crashsuit", "Exo-Compass", "Inland Palm Circuitry|Thunka Charges (2)"], "1+D4", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.CrocMan] = new CareerModel("Croc Man", "Veteran scouts from the brutal jungles of Paradiso, the Croc Men were founded in the wake of the Ravensbrücke debacle. The PanOceanian Polynesian Division went into the ill-fated operation as Fusiliers. The survivors came out as a battle-forged whanau. Many Crocs, regardless of ethnicity or gender, honour the unit’s heritage by opting to receive Tā moko—the tattoo- like facial markings signifying status and coming of age in Māori society—upon embarking on their first tour of duty.Specializing in surveillance, covert operations, and sabotage, Croc Men make stalwart friends and deadly enemies.", [2, 2, 1, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Survival, skills_3.Skill.Stealth], [skills_3.Skill.Close_Combat, skills_3.Skill.Observation, skills_3.Skill.Stealth], ["Light Combat Armour", "Mere X", "Croc Mines (3)|Subdermal Grafts", "MULTI Sniper Rifle"], "0+D1", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.FighterPilot] = new CareerModel("Fighter Pilot", "In the PanOceanian Armada, perhaps no role is as glamourized as that of the fighter pilot. PanOceania’s aviators are portrayed as brash and reckless top guns in many a Maya-series, a reputation that their real-world counterparts do little to discourage. Outside of the holomovies, successful fighter pilots possess a killer instinct and hunter’s temperament sharpened to a fine point. With unmanned high-manoeuvrability fighter squads operating at speeds beyond human capability, a pilot needs synchronisation that is hard to match from a Remote Presence Cockpit. Many Fighter Pilots become permanent adrenaline junkies; from Father-Pilots to Archeron Blockade vets, once you’ve danced among the stars with your life on the line, a sedentary lifestyle holds little appeal.", [1, 2, 1, 3, 0, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Pilot, skills_3.Skill.Spacecraft], [skills_3.Skill.Observation, skills_3.Skill.Resistance, skills_3.Skill.Spacecraft], ["AR Eye Implants", "Inlaid Palm Circuitry", "Surge (2 doses)", "Light Combat Armour|Assault Pistol"], "3+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.Fusilier] = new CareerModel("Fusilier", "The unquestioned backbone of the PanOceanian military, Fusiliers consider themselves the light infantry troop to judge all others by. Professional soldiers hailing from every corner of PanOceania, many citizens have spent a tour of duty with the Fusiliers. While not all go on to careers in the military, most look back on their service with immense pride. Fusiliers commonly posit that they form the heart of the army—everyone else is basically their support staff.And while this sentiment is echoed with a range of intentions from comical to dead serious, it wouldn’t survive this long without at least a grain of truth. Ubiquitous, modern, and versatile, Fusiliers are the binding agent that holds the PanOceanian Military Complex together.", [1, 2, 1, 2, 1, 1, 2], [skills_3.Skill.Athletics, skills_3.Skill.Ballistics, skills_3.Skill.Resistance], [skills_3.Skill.Medicine, skills_3.Skill.Stealth, skills_3.Skill.Tech], ["Light Combat Armour", "Combi Rifle", "Pollock Grenade", "Pollock Grenade"], "2+D1", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.HexasAgent] = new CareerModel("Hexas Agent", "The living embodiment of the Hexahedron’s Strategic Security Division and an espionage fantasy made flesh, Hexas Agents safeguard PanOceanian interests throughout the Human Sphere. Equipped with bleeding edge tools, forward-thinking training, and the full support of the Hyperpower, a Hexas Agent has no boundaries, no moral code, and no conscience while in the field. The mission is all that matters, and the mission can change by the hour. Able to infiltrate corporate facilities, capture the attention of hyper- elites, and pursue targets through adverse conditions, Hexas Agents are chameleons by necessity.Who they are today might not suit tomorrow’s task.The spy fantasy both is and isn’t everything it’s cracked up to be, but the vids were right about one thing.Hexas Agents possess impeccable style.", [1, 2, 0, 1, 1, 3, 1], [skills_3.Skill.Close_Combat, skills_3.Skill.Persuade, skills_3.Skill.Stealth], [skills_3.Skill.Hacking, skills_3.Skill.Psychology, skills_3.Skill.Thievery], ["Hexas Nightwear", "Malasartes Grenade", "Wetspike"], "3+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.Knight] = new CareerModel("Knight", "Symbols of faith, collaboration, and unwavering dedication, Knights are living emblems for not only the military, but for PanOceanian society as well. Living beyond a soldier’s ideals, a Knight must inspire others with their faith, even if they don’t share it. Beliefs must be upheld, even if surrounded by those who flaunt them. Internal rivalries must be put aside, both figurative and literal, so that a united charge can be taken against PanOceania’s enemies. It’s often said that Knights never truly retire, as they simply enter a new chapter of service.For a living embodiment of chivalry, piety, and holy warfare, there are no true days off, just new ways to serve.", [2, 1, 2, 1, 1, 1, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Command], [], // determined by order
                        [""], // determined by order
                        "1+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.MayacastSupportStaff] = new CareerModel("Mayacast Support Staff", "Every star has bodies in its orbit, and the stars of Maya broadcasts are no different. Equal parts roadie, tech support, film crew, business manager, and personal security, these unsung heroes of the entertainment industry work tirelessly behind the scenes so that programmes can air without a hitch. Often ducking and diving just beyond a camera’s view, their job is misunderstood, exhausting, and invisible. But these self-proclaimed “tech ninjas” wouldn’t have it any other way. As any entertainer who’s tried to make do without them will tell you, things just work out better when they’re on your side.", [1, 1, 0, 1, 1, 2, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Command], [skills_3.Skill.Hacking, skills_3.Skill.Pilot, skills_3.Skill.Stealth], ["AR Eye Implants", "Theia Orb", "Powered Multitool", "3 Recorders"], "2+D4", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.NeoterranSpecialOfficer] = new CareerModel("Neoterran Special Officer", "As one of the largest population centres in the Human Sphere, Neoterra is also arguably the safest. Exactly as intended. Whether it’s the Tactical Operations Unit, Special Narcotics Force, the Territory Response Group’s Hawk Brigade, or any of the countless other civilian police forces, Neoterra’s Special Officers ensure stability is maintained at any cost. Often working undercover or striking at a moment’s notice, Special Officers live their lives on- call.They seek out the worst dregs of society and prevent them from causing harm, all without disrupting, terrorizing, or otherwise harassing the rest of the citizenry.If the wrong call is made, they must be fast enough to make up the difference.Balancing optimism and cynicism in equal measure is no small task, but these officers wouldn’t trust anyone else with the job.", [1, 3, 1, 2, 1, 1, 0], [skills_3.Skill.Ballistics, skills_3.Skill.Observation, skills_3.Skill.Stealth], [skills_3.Skill.Analysis, skills_3.Skill.Hacking, skills_3.Skill.Science], ["AR Eye Implants", "Ballistic Vest", "Banduk|Hacking Device|Stun Baton"], "2+D3", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.OrderSergeant] = new CareerModel("Order Sergeant", "Not all members of a Military Order become Knights, which is no bad thing as logistics, bureaucracy, technical issues, and a thousand other factors mean the Orders have their hands full. Sergeants at Arms, colloquially known as Order Sergeants, provide the assistance and support necessary for the Military Orders to reach their full potential. Ranging from earnestly pious, to opportunistic or even bloodthirsty, Order Sergeants are often temporary associates who have paid for the privilege of belonging to an Order.Regardless, they are the lifeblood in the Orders’ veins once the call to action goes out.Conducting tactical support tasks and securing combat zones as part of the advance force, Order Sergeants represent the breadth of PanOceanian society for both good and ill. There are few defenders of faith and home as stalwart once the call to arms goes out.", [1, 2, 2, 1, 1, 1, 2], [skills_3.Skill.Close_Combat, skills_3.Skill.Observation, skills_3.Skill.Tech], [], // determined by order
                        ["Assault Pistol", "Knife", "Light Combat Armour"], "1+D4", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.faction === factions_3.Faction.PanOceania; }),
                        _a[Career.SensoriumMayacaster] = new CareerModel("Sensorium Mayacaster", "The thrill of racing over Varuna’s waves. The exhilaration of traversing Neoterra’s urban environments via augmented parkour. The picoscale precision of an Acontecimento prima ballerina. Any Mayacaster can show their audience these things, but a Sensorium Mayacaster can make them feel it. Communicating sensory data through their augmentations, these entertainers bring their audiences with them on remarkable journeys, letting the audience feel the exhilaration of success, the shock of despair, and every range of emotions in-between.Athletes are common, but all Sensorium Mayacasters provide their own unique perspective to their fans.For them, the concept of privacy is almost foreign, but the rewards are absolutely worth it.", [1, 1, 0, 1, 2, 3, 1], [skills_3.Skill.Acrobatics, skills_3.Skill.Lifestyle, skills_3.Skill.Persuade], [skills_3.Skill.Education, skills_3.Skill.Hacking, skills_3.Skill.Psychology], ["AR Eye Implants", "High-Quality Clothing", "Full-Sensorium Maya Integration"], "1+D8", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.Priest] = new CareerModel("Priest", "Whether pious or lackadaisical, religion is an integral part of daily life for most PanOceanians. The Hyperpower produces more clergy per capita than any other G5 nation. While the Church is overwhelmingly the dominant religion, there exist no small number of Hindu Pujari, Sikh Granthi, and other clerical representatives of their respective religions. Affiliations aside, Priests provide guidance, leadership, and hope to their clergy. With the advent of quantronic-assisted communion, modern Priests are frequently opinion leaders rather than liturgists or ritual leaders; a source of spiritual insight, a willing ear for confession, and a moral and spiritual compass — all reachable via comlog. Pillars of the community by default, it’s no exaggeration that Priests are responsible for dictating large chunks of PanOceania’s culture, whether they intend to or not.", [1, 2, 0, 1, 2, 2, 2], [skills_3.Skill.Command, skills_3.Skill.Education, skills_3.Skill.Persuade], [skills_3.Skill.Analysis, skills_3.Skill.Lifestyle, skills_3.Skill.Psychology], ["High-Quality Clothing", "Geist Upgrade (+2 ranks in Education)"], "1+D4", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return true; }),
                        _a[Career.AquaticFirstResponder] = new CareerModel("Aquatic First Responder", "EMTs, firefighters, lifeguards. Of the many career paths open to Helots, the First Responder is one that confuses humanity the most. Not that they aren’t happy to see them, as any human EMT would be hard-pressed to match a Helot when navigating hazardous underwater terrain. For a species tarred as “lazy”, however, many are confused to see how enthusiastically they take to the role.", [1, 2, 2, 2, 1, 1, 1], [skills_3.Skill.Athletics, skills_3.Skill.Medicine, skills_3.Skill.Tech], [skills_3.Skill.Discipline, skills_3.Skill.Observation, skills_3.Skill.Pilot], ["Light Combat Armour", "Pressure suit mod for armour", "Medikit (with 3 Serum)"], "1+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.Bartender] = new CareerModel("Bartender", "Across Varuna, particularly Ikatere, Helots indulge in the ancient role of barkeep, dispensing drinks and offering a friendly ear in equal measure. Legend states that early PanOceanian entrepreneurs revelled with a pod of Helots. They watched their hosts dive effortlessly beneath the waves, then resurface with various chilled liquors that were mixed with playful aplomb. An opportunity not to be missed.", [2, 2, 1, 1, 2, 1, 1], [skills_3.Skill.Lifestyle, skills_3.Skill.Persuade, skills_3.Skill.Psychology], [skills_3.Skill.Education, skills_3.Skill.Observation, skills_3.Skill.Persuade], ["Fashionable clothing", "Psychotropics (3 doses)"], "0+D1", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.DeepSeaExplorer] = new CareerModel("Deep-Sea Explorer", "Prideful as PanOceania are of their Explorers, it’s curious that much of Varuna’s depths remain unexplored. Of course, between the crushing pressure, aquatic predators, and omnipresent, oppressive darkness, most humans know better than to dive too deeply, undiscovered secrets or no. The Helots know better too. But they do it anyway.", [1, 3, 1, 2, 1, 1, 0], [skills_3.Skill.Animal_Handling, skills_3.Skill.Pilot, skills_3.Skill.Tech], [skills_3.Skill.Analysis, skills_3.Skill.Observation, skills_3.Skill.Survival], ["Crashsuit", "Pressure suit mod for crashsuit", "Exo-compass", "D-Thread (3 charges)", "Knife"], "1+D3", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.HelotMilitia] = new CareerModel("Helot Militia", "Considered little more than cannon fodder by PanOceania’s command, Helot Militia specialise in amphibious operations and support the PanOceanian military in situations where amphibious natives provide a tactical edge. Primarily focused on internal security, though occasionally providing support in military operations abroad, these brave Helots have one of the highest casualty ratios in the PanOceanian military due to their primary deployment in highrisk situations.", [2, 1, 2, 2, 1, 1, 1], [skills_3.Skill.Ballistics, skills_3.Skill.Observation, skills_3.Skill.Resistance], [skills_3.Skill.Close_Combat, skills_3.Skill.Discipline, skills_3.Skill.Stealth], ["Light Combat Armour|Pain Filters", "Rifle"], "1+D1", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.Labourer] = new CareerModel("Labourer", "When most people think of Helots, one of two things comes to mind. Either the terrorist actions of Libertos, or the many Helot Labourers working across Varuna. The advent of the pressure suit revolutionized the workforce, but even with this advancement, most Helots still make their living as semi-skilled Labourers.", [1, 2, 2, 1, 1, 2, 1], [skills_3.Skill.Athletics, skills_3.Skill.Discipline, skills_3.Skill.Resistance], [skills_3.Skill.Discipline, skills_3.Skill.Observation, skills_3.Skill.Pilot], ["Locational Beacon", "Powered Multitool|Repair Kit", "Painkillers (5 doses)"], "0+D3", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.LibertosMember] = new CareerModel("Libertos Member", "Libertos view themselves as change. To make change requires blood, violence, and confrontation. Faced with unacceptable conditions and convinced that there can be no change without violent upheaval, Libertos members take their destiny into their heavily-armed hands. Viewed as anti-human terrorists, they actually have very little issue with individual humans.", [1, 2, 1, 2, 1, 1, 2], [skills_3.Skill.Ballistics, skills_3.Skill.Close_Combat, skills_3.Skill.Stealth], [skills_3.Skill.Hacking, skills_3.Skill.Survival, skills_3.Skill.Thievery], ["D-Thread", "Fake ID 1", "Malasartes Grenade (x2)|Heavy Pistol"], "0+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }, true),
                        _a[Career.OmnStoryteller] = new CareerModel("Omn Storyteller", "Owing to centuries of oral tradition as the primary means of recording their legends and history, the Omn (“those who speak” in Tetessom) are fantastic storytellers. Elder kossomn traditionally act as the primary lorekeepers, though everyone is encouraged to participate. Those with a talent for engaging, theatrical storytelling are singled out from fryhood.", [1, 1, 1, 0, 2, 3, 1], [skills_3.Skill.Education, skills_3.Skill.Lifestyle, skills_3.Skill.Persuade], [skills_3.Skill.Acrobatics, skills_3.Skill.Persuade, skills_3.Skill.Survival], ["Cosmetics Kit", "Recorder (x2)"], "0+D3", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.ScuballPlayer] = new CareerModel("Scuball Player", "Unlike human players, who extensively use custom Scuball suits to better navigate the underwater environs, Helots are born swimmers. Unlike human athletes, who can’t start seriously competing without organisational support, young Helots engage in different variants of the game before they reach maturity. Although it’s among the more lucrative options available to them, the money hardly competes with the chance to enjoy their dream job.", [2, 1, 3, 1, 0, 1, 1], [skills_3.Skill.Acrobatics, skills_3.Skill.Athletics, skills_3.Skill.Lifestyle], [skills_3.Skill.Athletics, skills_3.Skill.Command, skills_3.Skill.Observation], ["AR Eye Implant", "Rippa X", "Helot Jet Harness", "Uniform"], "2+D3", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.Starfish] = new CareerModel("Starfish", "After years of frustration in dealing with the Nomad Nations’ cetacean pilots and their intrinsic understanding of three-dimensional spatial manoeuvres, the PanOceanian Armada snapped. The StarSwimmer initiative hardly revolutionized the PanOceanian Navy, but recruiting the best, most tech-savvy, or reckless Helots available gave the Hyperpower an edge it had been sorely lacking.", [1, 2, 1, 3, 0, 2, 0], [skills_3.Skill.Extraplanetary, skills_3.Skill.Pilot, skills_3.Skill.Spacecraft], [skills_3.Skill.Ballistics, skills_3.Skill.Lifestyle, skills_3.Skill.Spacecraft], ["AR Eye Implants", "Light Combat Armour (with pressure suit mod)|Assault Pistol (2 reloads)"], "1+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a[Career.VarunanGuide] = new CareerModel("Varunan Guide", "From underwater mining in Damak, to scouting for new construction sites, to friendly neighbourhood tour guides, many Helots spend their time guiding their human neighbours around Varuna. Intricately tied to the tourism industry, outside of Labourers, more Helots find their employ as Guides than in any other vocation. Requiring not just extensive local knowledge, but the ability to explain its importance to a highly-educated populace, more than one Varunan Guide has needed to explain why and how eating a poisonous plant is a bad idea.", [1, 2, 1, 0, 3, 2, 0], [skills_3.Skill.Animal_Handling, skills_3.Skill.Education, skills_3.Skill.Psychology], [skills_3.Skill.Athletics, skills_3.Skill.Lifestyle, skills_3.Skill.Survival], ["Adarsana Grenade", "Lantern", "Locational Beacon", "Signal Flare", "Survival Kit"], "1+D2", [factions_3.Faction.PanOceania], sources_3.Source.PanOceania, function () { return character_4.character.host === alienHosts_2.AlienHost.Helot; }),
                        _a
                    );
                    var _a;
                }
                Careers.prototype.generateBasicCareer = function () {
                    var career = undefined;
                    var roll = Math.floor(Math.random() * 20) + 1;
                    switch (roll) {
                        case 1:
                        case 2:
                            career = Career.Unemployed;
                            break;
                        case 3:
                        case 4:
                            career = Career.Corporate;
                            break;
                        case 5:
                        case 6:
                            career = Career.Technician;
                            break;
                        case 7:
                        case 8:
                            career = Career.Military;
                            break;
                        case 9:
                        case 10:
                            career = Career.Medical;
                            break;
                        case 11:
                        case 12:
                            career = Career.Academic;
                            break;
                        case 13:
                            career = Career.Criminal;
                            break;
                        case 14:
                            career = Career.Police;
                            break;
                        case 15:
                            career = Career.Frontiersman;
                            break;
                        case 16:
                            career = Career.Media;
                            break;
                        case 17:
                            career = Career.ShipCrew;
                            break;
                        case 18:
                            career = Career.Pilot;
                            break;
                        case 19:
                        case 20:
                            career = this.generateFactionCareer(character_4.character.faction);
                            break;
                    }
                    if (character_4.character.prohibitedCareers.indexOf(career) > -1) {
                        return this.generateBasicCareer();
                    }
                    return career;
                };
                Careers.prototype.generateFactionCareer = function (faction) {
                    var career = undefined;
                    var roll = Math.floor(Math.random() * 6) + 1;
                    if (faction === factions_3.Faction.Ariadna) {
                        if (character_4.character.hasSource(sources_3.Source.Ariadna)) {
                            roll = Math.floor(Math.random() * 20) + 1;
                            if (character_4.character.host === alienHosts_2.AlienHost.Antipode) {
                                switch (roll) {
                                    case 1:
                                    case 2:
                                    case 3: return Career.Scavenger;
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8: return Career.AntipodeWarlord;
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 12: return Career.AssaultPackMember;
                                    case 13:
                                    case 14:
                                    case 15:
                                    case 16: return Career.ForestRanger;
                                    case 17:
                                    case 18:
                                    case 19:
                                    case 20: return Career.Raider;
                                }
                            }
                            else if (character_4.character.host === alienHosts_2.AlienHost.Dogface || character_4.character.host === alienHosts_2.AlienHost.Wulver) {
                                switch (roll) {
                                    case 1:
                                    case 2:
                                    case 3: return Career.Scavenger;
                                    case 4: return Career.AssaultPackController;
                                    case 5:
                                    case 6: return character_4.character.birthPlace === "USAriadna" ? Career.DevilDogsMarines : this.generateFactionCareer(faction);
                                    case 7:
                                    case 8: return Career.DogBowlPlayer;
                                    case 9:
                                    case 10: return Career.DogNationActivist;
                                    case 11:
                                    case 12: return Career.ForestRanger;
                                    case 13:
                                    case 14: return Career.DogBloodedIrregular;
                                    case 15:
                                    case 16: return Career.Raider;
                                    case 17:
                                    case 18: return Career.Volk;
                                    case 19:
                                    case 20: return character_4.character.host === alienHosts_2.AlienHost.Wulver ? Career.WulverShockTroop : this.generateFactionCareer(faction);
                                }
                            }
                            else {
                                switch (roll) {
                                    case 1: return Career.SpecialForces;
                                    case 2: return Career.IntelligenceOperative;
                                    case 3: return Career.AssaultPackController;
                                    case 4: return Career.SportsPersonality;
                                    case 5: return Career.Paratrooper;
                                    case 6: return Career.EmergencyResponder;
                                    case 7: return Career.BratvaGangster;
                                    case 8: return Career.CaledonianNoble;
                                    case 9: return Career.ClaymoreDuellist;
                                    case 10: return Career.FreeMiner;
                                    case 11: return Career.FrontierDoctor;
                                    case 12: return Career.Hardcase;
                                    case 13: return Career.IrmandinhosSmuggler;
                                    case 14: return Career.LoupGarou;
                                    case 15: return Career.MerovingianCommercialAgent;
                                    case 16: return Career.MilitiaMember;
                                    case 17: return Career.Spetsnaz;
                                    case 18:
                                    case 19:
                                    case 20: return Career.Any;
                                }
                            }
                        }
                        else {
                            switch (roll) {
                                case 1: return Career.SpecialForces;
                                case 2: return Career.IntelligenceOperative;
                                case 3: return Career.AssaultPackController;
                                case 4: return Career.SportsPersonality;
                                case 5: return Career.Paratrooper;
                                case 6: return Career.Any;
                            }
                        }
                    }
                    else if (faction === factions_3.Faction.Haqqislam) {
                        if (character_4.character.hasSource(sources_3.Source.Haqqislam)) {
                            roll = Math.floor(Math.random() * 20) + 1;
                            switch (roll) {
                                case 1: return Career.SpecialForces;
                                case 2: return Career.HassassinFidayHaqqislam;
                                case 3: return Career.Corsair;
                                case 4: return Career.TerraformingScientist;
                                case 5: return Career.Bodyguard;
                                case 6: return Career.Khawarij;
                                case 7: return Career.DiwanFunctionary;
                                case 8: return Career.GreyMarketSpy;
                                case 9: return Career.HassassinExemplar;
                                case 10: return Career.MagharibaGuard;
                                case 11: return Career.KumGanger;
                                case 12: return Career.MedicalResearcher;
                                case 13: return Career.MuhafizAgent;
                                case 14: return Career.Odalisque;
                                case 15: return Career.Caravaner;
                                case 16: return Career.AkbarDoctor;
                                case 17: return Career.Hafza;
                                case 18:
                                case 19:
                                case 20: return Career.Any;
                            }
                        }
                        else {
                            switch (roll) {
                                case 1: return Career.SpecialForces;
                                case 2: return Career.Hassassin;
                                case 3: return Career.Corsair;
                                case 4: return Career.TerraformingScientist;
                                case 5: return Career.Bodyguard;
                                case 6: return Career.Any;
                            }
                        }
                    }
                    else if (faction === factions_3.Faction.Nomads) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return Career.ReverendAgent;
                            case 4: return Career.HeavyIndustry;
                            case 5: return Career.InvestigativeJournalist;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.PanOceania) {
                        if (character_4.character.hasSource(sources_3.Source.PanOceania)) {
                            roll = Math.floor(Math.random() * 20) + 1;
                            if (character_4.character.host === alienHosts_2.AlienHost.Helot) {
                                switch (roll) {
                                    case 1: return Career.Unemployed;
                                    case 2: return Career.Frontiersman;
                                    case 3: return Career.Criminal;
                                    case 4: return Career.ShipCrew;
                                    case 5: return Career.Pilot;
                                    case 6: return Career.IntelligenceOperative;
                                    case 7: return Career.LibertosMember;
                                    case 8: return Career.AquaticFirstResponder;
                                    case 9: return Career.Bartender;
                                    case 10: return Career.HelotMilitia;
                                    case 11: return Career.Labourer;
                                    case 12: return Career.VarunanGuide;
                                    case 13: return Career.MayacastSupportStaff;
                                    case 14: return Career.ScuballPlayer;
                                    case 15: return Career.OmnStoryteller;
                                    case 16: return Career.DeepSeaExplorer;
                                    case 17: return Career.Priest;
                                    case 18: return Career.Trader;
                                    case 19: return Career.HeavyIndustry;
                                    case 20: return Career.Starfish;
                                }
                            }
                            else {
                                switch (roll) {
                                    case 1: return Career.SpecialForces;
                                    case 2: return Career.IntelligenceOperative;
                                    case 3: return Career.Lobbyist;
                                    case 4: return Career.MayaPersonality;
                                    case 5: return Career.CorporateExecutive;
                                    case 6: return Career.Fusilier;
                                    case 7: return Career.MayacastSupportStaff;
                                    case 8: return Career.SensoriumMayacaster;
                                    case 9: return Career.Explorer;
                                    case 10: return Career.FighterPilot;
                                    case 11: return Career.NeoterranSpecialOfficer;
                                    case 12: return Career.HexasAgent;
                                    case 13: return Career.Priest;
                                    case 14: return Career.OrderSergeant;
                                    case 15: return Career.Knight;
                                    case 16: return Career.CrocMan;
                                    case 17:
                                    case 18:
                                    case 19:
                                    case 20: return Career.Any;
                                }
                            }
                        }
                        else {
                            switch (roll) {
                                case 1: return Career.SpecialForces;
                                case 2: return Career.IntelligenceOperative;
                                case 3: return Career.Lobbyist;
                                case 4: return Career.MayaPersonality;
                                case 5: return Career.CorporateExecutive;
                                case 6: return Career.Any;
                            }
                        }
                    }
                    else if (faction === factions_3.Faction.YuJing) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return character_4.character.hasCriminalRecord ? this.generateFactionCareer(character_4.character.faction) : Career.CelestialGuard;
                            case 4: return Career.Bosozoku;
                            case 5: return Career.TagPilot;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.Corporation) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return Career.CorporateExecutive;
                            case 4: return Career.Trader;
                            case 5: return Career.FieldScientist;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.Submondo) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.Corsair;
                            case 3: return Career.Smuggler;
                            case 4: return Career.Hacker;
                            case 5: return Career.Bodyguard;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.Mercenary) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return Career.BountyHunter;
                            case 4: return Career.RemoteOperator;
                            case 5: return Career.ShipCrew;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.O12 || faction === factions_3.Faction.Aleph) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return Career.Diplomat;
                            case 4: return Career.Politician;
                            case 5: return character_4.character.hasCriminalRecord ? this.generateFactionCareer(character_4.character.faction) : Career.BureauTothAgent;
                            case 6: return Career.Any;
                        }
                    }
                    else if (faction === factions_3.Faction.MinorNation) {
                        switch (roll) {
                            case 1: return Career.SpecialForces;
                            case 2: return Career.IntelligenceOperative;
                            case 3: return Career.HeavyIndustry;
                            case 4: return Career.Trader;
                            case 5: return Career.InvestigativeJournalist;
                            case 6: return Career.Any;
                        }
                    }
                    if (character_4.character.prohibitedCareers.indexOf(career) > -1) {
                        return this.generateFactionCareer(faction);
                    }
                    return career;
                };
                Careers.prototype.getBasicCareers = function () {
                    var careers = [
                        Career.Academic,
                        Career.Corporate,
                        Career.Criminal,
                        Career.Frontiersman,
                        Career.Media,
                        Career.Medical,
                        Career.Military,
                        Career.Pilot,
                        Career.Police,
                        Career.ShipCrew,
                        Career.Technician,
                    ];
                    if (character_4.character.hasCriminalRecord) {
                        careers.splice(careers.indexOf(Career.Police), 1);
                    }
                    character_4.character.prohibitedCareers.forEach(function (c) {
                        var index = careers.indexOf(c);
                        if (index > -1) {
                            careers.splice(index, 1);
                        }
                    });
                    return careers;
                };
                Careers.prototype.getHazardableCareers = function () {
                    var _this = this;
                    var careers = [];
                    var n = 0;
                    for (var career in this._careers) {
                        var c = this._careers[career];
                        if ((c.canBeHazarded() || character_4.character.ignoreHazardRequirements) &&
                            character_4.character.hasSource(c.source)) {
                            careers.push(n);
                        }
                        n++;
                    }
                    if (character_4.character.hasCriminalRecord && !character_4.character.ignoreHazardRequirements) {
                        careers.splice(careers.indexOf(Career.CelestialGuard), 1);
                        careers.splice(careers.indexOf(Career.BureauTothAgent), 1);
                        careers.splice(careers.indexOf(Career.AquaticFirstResponder), 1);
                    }
                    character_4.character.prohibitedCareers.forEach(function (c) {
                        var index = careers.indexOf(c);
                        if (index > -1) {
                            careers.splice(index, 1);
                        }
                    });
                    return careers.sort(function (a, b) { return _this._careers[a].name.localeCompare(_this._careers[b].name); });
                };
                Careers.prototype.getCareer = function (career) {
                    return this._careers[career];
                };
                Careers.prototype.applyCareer = function (career) {
                    var c = this.getCareer(career);
                    if (character_4.character.careers.length === 1) {
                        for (var i = 0; i < c.attributes.length; i++) {
                            character_4.character.attributes[i].value += c.attributes[i];
                        }
                    }
                    var careerCounter = 0;
                    character_4.character.careers.forEach(function (c) {
                        if (c.career === career) {
                            careerCounter++;
                        }
                    });
                    if (careerCounter === 1) {
                        c.equipment.forEach(function (eq) {
                            if (eq.indexOf('|') === -1) {
                                character_4.character.addEquipment(eq);
                            }
                        });
                    }
                    character_4.character.earnings = this.calculateEarnings(c.earnings);
                    if (career === Career.IrmandinhosSmuggler) {
                        character_4.character.addLanguage("Galician");
                    }
                    else if (career === Career.Hafza &&
                        character_4.character.education !== educations_1.Education.Military_Training) {
                        character_4.character.age += diceRoller_1.DiceRoller.rollSpecial(2, 2).hits;
                    }
                    else if (career === Career.FighterPilot) {
                        if (character_4.character.equipment.indexOf("Assault Pistol") > -1) {
                            character_4.character.addEquipment("2 Standard Reloads");
                        }
                    }
                    else if (career === Career.CrocMan) {
                        character_4.character.addOtherEvent("Contacts: Any other Croc Man", "");
                        character_4.character.equipment.forEach(function (eq) {
                            if (eq.indexOf("Mere") > -1) {
                                eq.replace("X", character_4.character.careers.filter(function (c) { return c.career === Career.CrocMan; }).length.toString());
                            }
                        });
                    }
                    else if (career === Career.ScuballPlayer) {
                        character_4.character.equipment.forEach(function (eq) {
                            if (eq.indexOf("Rippa") > -1) {
                                eq.replace("X", character_4.character.careers.filter(function (c) { return c.career === Career.ScuballPlayer; }).length.toString());
                            }
                        });
                    }
                    // Reset this.
                    character_4.character.ignoreHazardRequirements = false;
                };
                Careers.prototype.getEarningsSpan = function (earnings) {
                    var c = parseInt(earnings[0]);
                    var d = parseInt(earnings[earnings.length - 1]);
                    var maxd = c + (d * 2);
                    return c.toString() + "-" + maxd.toString();
                };
                Careers.prototype.careerIsSameFaction = function (career, faction) {
                    var c = this.getCareer(career);
                    return c.factions.indexOf(faction) > -1;
                };
                Careers.prototype.getHazardDifficulty = function (career) {
                    var c = this.getCareer(career);
                    if (c.isCriminal && character_4.character.hasCriminalRecord) {
                        return 1;
                    }
                    return 2;
                };
                Careers.prototype.calculateEarnings = function (earnings) {
                    var c = parseInt(earnings[0]);
                    var d = parseInt(earnings[earnings.length - 1]);
                    var earningsRoll = diceRoller_1.DiceRoller.rollSpecial(d, 0);
                    var newEarnings = earningsRoll.hits + c;
                    if (newEarnings > character_4.character.earnings) {
                        if (earningsRoll.special > 0) {
                            var diff = newEarnings - character_4.character.earnings;
                            for (var i = 0; i < diff && i < earningsRoll.special; i++) {
                                socialClasses_1.SocialClassesHelper.increaseSocialClass();
                            }
                        }
                        return newEarnings;
                    }
                    else if (newEarnings < character_4.character.earnings) {
                        if (earningsRoll.special > 0) {
                            var diff = character_4.character.earnings - newEarnings;
                            for (var i = 0; i < diff && i < earningsRoll.special; i++) {
                                socialClasses_1.SocialClassesHelper.reduceSocialClass();
                            }
                        }
                        return Math.max(character_4.character.earnings - 1, 0);
                    }
                    return character_4.character.earnings;
                };
                return Careers;
            }());
            exports_9("Careers", Careers);
            exports_9("CareersHelper", CareersHelper = new Careers());
        }
    }
});
System.register("helpers/socialClasses", ["helpers/attributes", "common/character", "helpers/alienHosts", "helpers/factions", "helpers/sources", "helpers/careers", "common/eventModel", "helpers/careerEvents"], function(exports_10, context_10) {
    "use strict";
    var __moduleName = context_10 && context_10.id;
    var attributes_3, character_5, alienHosts_3, factions_4, sources_4, careers_1, eventModel_1, careerEvents_1;
    var SocialClass, SocialClassModel, SocialClassViewModel, SocialClasses, SocialClassesHelper;
    return {
        setters:[
            function (attributes_3_1) {
                attributes_3 = attributes_3_1;
            },
            function (character_5_1) {
                character_5 = character_5_1;
            },
            function (alienHosts_3_1) {
                alienHosts_3 = alienHosts_3_1;
            },
            function (factions_4_1) {
                factions_4 = factions_4_1;
            },
            function (sources_4_1) {
                sources_4 = sources_4_1;
            },
            function (careers_1_1) {
                careers_1 = careers_1_1;
            },
            function (eventModel_1_1) {
                eventModel_1 = eventModel_1_1;
            },
            function (careerEvents_1_1) {
                careerEvents_1 = careerEvents_1_1;
            }],
        execute: function() {
            (function (SocialClass) {
                // Core
                SocialClass[SocialClass["Underclass"] = 0] = "Underclass";
                SocialClass[SocialClass["Demogrant"] = 1] = "Demogrant";
                SocialClass[SocialClass["Middle"] = 2] = "Middle";
                SocialClass[SocialClass["Upper"] = 3] = "Upper";
                SocialClass[SocialClass["Elite"] = 4] = "Elite";
                SocialClass[SocialClass["Hyper_Elite"] = 5] = "Hyper_Elite";
                // Antipodes
                SocialClass[SocialClass["Scavengers"] = 6] = "Scavengers";
                SocialClass[SocialClass["Members"] = 7] = "Members";
                SocialClass[SocialClass["Trusted"] = 8] = "Trusted";
                SocialClass[SocialClass["Valued"] = 9] = "Valued";
                SocialClass[SocialClass["Favored"] = 10] = "Favored";
                SocialClass[SocialClass["Warlords"] = 11] = "Warlords";
                // Haqqislam
                SocialClass[SocialClass["AlMustaslaha_Orphaned"] = 12] = "AlMustaslaha_Orphaned";
                SocialClass[SocialClass["AlMustaslaha_Donated"] = 13] = "AlMustaslaha_Donated";
                SocialClass[SocialClass["AlMustaslaha_Delivered"] = 14] = "AlMustaslaha_Delivered";
                // PanOceania
                SocialClass[SocialClass["Atek"] = 15] = "Atek";
                SocialClass[SocialClass["Underclass_Helot"] = 16] = "Underclass_Helot";
                SocialClass[SocialClass["Demogrant_Helot"] = 17] = "Demogrant_Helot";
                SocialClass[SocialClass["Middle_Helot"] = 18] = "Middle_Helot";
            })(SocialClass || (SocialClass = {}));
            exports_10("SocialClass", SocialClass);
            ;
            SocialClassModel = (function () {
                function SocialClassModel(name, description, attribute, earnings) {
                    this.name = name;
                    this.description = description;
                    this.attribute = attribute;
                    this.earnings = earnings;
                }
                return SocialClassModel;
            }());
            SocialClassViewModel = (function (_super) {
                __extends(SocialClassViewModel, _super);
                function SocialClassViewModel(id, base) {
                    _super.call(this, base.name, base.description, base.attribute, base.earnings);
                    this.id = id;
                }
                return SocialClassViewModel;
            }(SocialClassModel));
            exports_10("SocialClassViewModel", SocialClassViewModel);
            SocialClasses = (function () {
                function SocialClasses() {
                    this._socialClasses = (_a = {},
                        _a[SocialClass.Underclass] = new SocialClassModel("Underclass", "Although it’s become incredibly difficult for true poverty to exist, there are some people who slip through the cracks. (PanOceanians will talk about the tragic conditions of backcountry Ariadnans, but Yu Jing would be quick to point to the Ateks in PanOceania’s backyard. Elsewhere there are minor nations and small habitats in places like Human Edge).", attributes_3.Attribute.Willpower, 1),
                        _a[SocialClass.Demogrant] = new SocialClassModel("Demogrant", "The demogrant is a basic income guaranteed to every member of the major powers (and most of the minor powers, too). The immense manufacturing capacity of dedicated nanoassemblers combined with the rich resources available to an automated, interstellar civilization make it possible for all citizens to enjoy a more than comfortable standard of living.", attributes_3.Attribute.Personality, 2),
                        _a[SocialClass.Middle] = new SocialClassModel("Middle", "Most of humanity is living in a golden age of luxury. It’s easy for people to be part of the middle class while working twenty hours a week or less. The large middle class is constantly seeking out activities both real and virtual to fill their idle hours.", attributes_3.Attribute.Willpower, 3),
                        _a[SocialClass.Upper] = new SocialClassModel("Upper", "This is a life of utter affluence. For the rich of the Human Sphere, thought has become the equivalent of action and desire can be instantaneously met by reality. For the upper class, the physical world can trivially transform itself almost as easily the virtual playgrounds of the middle class.", attributes_3.Attribute.Agility, 4),
                        _a[SocialClass.Elite] = new SocialClassModel("Elite", "The vast wealth of the elite creates specialist micro-cultures that cater to their needs, a market of ultra-luxury items and bespoke items that are casually created on demand, and a plethora of body modifications unheard of in previous ages. Their lives, swaddled in advanced domotics, are virtually effortless, like endless theme park rides that are malleable to their will.", attributes_3.Attribute.Personality, 5),
                        _a[SocialClass.Hyper_Elite] = new SocialClassModel("Hyper-Elite", "The hyper-elite flit across interplanetary distances or rule over de facto fiefdoms rendered in their own image. Their control over their physical reality is almost unlimited, allowing them to realize their ultimate fantasies in flights of whimsy.", attributes_3.Attribute.Willpower, 6),
                        _a[SocialClass.Scavengers] = new SocialClassModel("Scavengers", "", attributes_3.Attribute.Awareness, 0),
                        _a[SocialClass.Members] = new SocialClassModel("Members", "", attributes_3.Attribute.Awareness, 1),
                        _a[SocialClass.Trusted] = new SocialClassModel("Trusted", "", attributes_3.Attribute.Brawn, 2),
                        _a[SocialClass.Valued] = new SocialClassModel("Valued", "", attributes_3.Attribute.Agility, 2),
                        _a[SocialClass.Favored] = new SocialClassModel("Favored", "", attributes_3.Attribute.Personality, 2),
                        _a[SocialClass.Warlords] = new SocialClassModel("Warlords", "", attributes_3.Attribute.Willpower, 3),
                        _a[SocialClass.AlMustaslaha_Orphaned] = new SocialClassModel("Al-Mustaslaha (Orphaned)", "", attributes_3.Attribute.Willpower, 2),
                        _a[SocialClass.AlMustaslaha_Donated] = new SocialClassModel("Al-Mustaslaha (Donated)", "", attributes_3.Attribute.Awareness, 2),
                        _a[SocialClass.AlMustaslaha_Delivered] = new SocialClassModel("Al-Mustaslaha (Delivered)", "", attributes_3.Attribute.Brawn, 2),
                        _a[SocialClass.Atek] = new SocialClassModel("Atek", "", attributes_3.Attribute.Willpower, 1),
                        _a[SocialClass.Underclass_Helot] = new SocialClassModel("Underclass", "", attributes_3.Attribute.Agility, 1),
                        _a[SocialClass.Demogrant_Helot] = new SocialClassModel("Demogrant", "", attributes_3.Attribute.Personality, 1),
                        _a[SocialClass.Middle_Helot] = new SocialClassModel("Middle", "", attributes_3.Attribute.Willpower, 3),
                        _a
                    );
                    var _a;
                }
                SocialClasses.prototype.getSocialClasses = function () {
                    var soc = [];
                    if (character_5.character.host === alienHosts_3.AlienHost.Antipode && character_5.character.faction === factions_4.Faction.Ariadna && character_5.character.hasSource(sources_4.Source.Ariadna)) {
                        soc.push(new SocialClassViewModel(SocialClass.Scavengers, this._socialClasses[SocialClass.Scavengers]));
                        soc.push(new SocialClassViewModel(SocialClass.Members, this._socialClasses[SocialClass.Members]));
                        soc.push(new SocialClassViewModel(SocialClass.Trusted, this._socialClasses[SocialClass.Trusted]));
                        soc.push(new SocialClassViewModel(SocialClass.Valued, this._socialClasses[SocialClass.Valued]));
                        soc.push(new SocialClassViewModel(SocialClass.Favored, this._socialClasses[SocialClass.Favored]));
                        soc.push(new SocialClassViewModel(SocialClass.Warlords, this._socialClasses[SocialClass.Warlords]));
                    }
                    if (character_5.character.host === alienHosts_3.AlienHost.Helot && character_5.character.faction === factions_4.Faction.PanOceania && character_5.character.hasSource(sources_4.Source.PanOceania)) {
                        soc.push(new SocialClassViewModel(SocialClass.Underclass_Helot, this._socialClasses[SocialClass.Underclass_Helot]));
                        soc.push(new SocialClassViewModel(SocialClass.Demogrant_Helot, this._socialClasses[SocialClass.Demogrant_Helot]));
                        soc.push(new SocialClassViewModel(SocialClass.Middle_Helot, this._socialClasses[SocialClass.Middle_Helot]));
                    }
                    else {
                        if (character_5.character.faction === factions_4.Faction.PanOceania && character_5.character.hasSource(sources_4.Source.PanOceania)) {
                            soc.push(new SocialClassViewModel(SocialClass.Atek, this._socialClasses[SocialClass.Atek]));
                        }
                        else {
                            soc.push(new SocialClassViewModel(SocialClass.Underclass, this._socialClasses[SocialClass.Underclass]));
                        }
                        soc.push(new SocialClassViewModel(SocialClass.Demogrant, this._socialClasses[SocialClass.Demogrant]));
                        if (character_5.character.faction === factions_4.Faction.Haqqislam && character_5.character.hasSource(sources_4.Source.Haqqislam)) {
                            soc.push(new SocialClassViewModel(SocialClass.AlMustaslaha_Orphaned, this._socialClasses[SocialClass.AlMustaslaha_Orphaned]));
                            soc.push(new SocialClassViewModel(SocialClass.AlMustaslaha_Donated, this._socialClasses[SocialClass.AlMustaslaha_Donated]));
                            soc.push(new SocialClassViewModel(SocialClass.AlMustaslaha_Delivered, this._socialClasses[SocialClass.AlMustaslaha_Delivered]));
                        }
                        soc.push(new SocialClassViewModel(SocialClass.Middle, this._socialClasses[SocialClass.Middle]));
                        soc.push(new SocialClassViewModel(SocialClass.Upper, this._socialClasses[SocialClass.Upper]));
                        soc.push(new SocialClassViewModel(SocialClass.Elite, this._socialClasses[SocialClass.Elite]));
                        soc.push(new SocialClassViewModel(SocialClass.Hyper_Elite, this._socialClasses[SocialClass.Hyper_Elite]));
                    }
                    return soc;
                };
                SocialClasses.prototype.getSocialClass = function (cls) {
                    return this._socialClasses[cls];
                };
                SocialClasses.prototype.getSocialClassByName = function (name) {
                    var n = 0;
                    for (var cls in this._socialClasses) {
                        var c = this._socialClasses[cls];
                        if (c.name === name) {
                            return n;
                        }
                        n++;
                    }
                    return undefined;
                };
                SocialClasses.prototype.generateSocialClass = function () {
                    var roll = Math.floor(Math.random() * 11) + 2;
                    var cls = undefined;
                    if (character_5.character.host === alienHosts_3.AlienHost.Antipode && character_5.character.hasSource(sources_4.Source.Ariadna)) {
                        switch (roll) {
                            case 2:
                                cls = SocialClass.Scavengers;
                                break;
                            case 3:
                            case 4:
                            case 5:
                                cls = SocialClass.Members;
                                break;
                            case 6:
                            case 7:
                            case 8:
                                cls = SocialClass.Trusted;
                                break;
                            case 9:
                            case 10:
                                cls = SocialClass.Valued;
                                break;
                            case 11:
                                cls = SocialClass.Favored;
                                break;
                            case 12:
                                cls = SocialClass.Warlords;
                                break;
                        }
                    }
                    if (character_5.character.host === alienHosts_3.AlienHost.Helot && character_5.character.hasSource(sources_4.Source.PanOceania)) {
                        switch (roll) {
                            case 2:
                            case 3:
                            case 4: cls = SocialClass.Underclass_Helot;
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10: cls = SocialClass.Demogrant_Helot;
                            case 11:
                            case 12: cls = SocialClass.Middle_Helot;
                        }
                    }
                    else if (character_5.character.faction === factions_4.Faction.Haqqislam && character_5.character.hasSource(sources_4.Source.Haqqislam)) {
                        switch (roll) {
                            case 2:
                                cls = SocialClass.Underclass;
                                break;
                            case 3:
                            case 4:
                                cls = SocialClass.Demogrant;
                                break;
                            case 5:
                                {
                                    var subroll = Math.floor(Math.random() * 20) + 1;
                                    if (subroll <= 8)
                                        cls = SocialClass.AlMustaslaha_Orphaned;
                                    else if (subroll <= 16)
                                        cls = SocialClass.AlMustaslaha_Donated;
                                    else
                                        cls = SocialClass.AlMustaslaha_Delivered;
                                }
                                break;
                            case 6:
                            case 7:
                            case 8:
                                cls = SocialClass.Middle;
                                break;
                            case 9:
                            case 10:
                                cls = SocialClass.Upper;
                                break;
                            case 11:
                                cls = SocialClass.Elite;
                                break;
                            case 12:
                                cls = SocialClass.Hyper_Elite;
                                break;
                        }
                    }
                    else if (character_5.character.faction === factions_4.Faction.PanOceania && character_5.character.hasSource(sources_4.Source.PanOceania)) {
                        switch (roll) {
                            case 2:
                                cls = SocialClass.Atek;
                                break;
                            case 3:
                                cls = SocialClass.Demogrant;
                                break;
                            case 4:
                            case 5:
                            case 6:
                                cls = SocialClass.Middle;
                                break;
                            case 7:
                            case 8:
                                cls = SocialClass.Upper;
                                break;
                            case 9:
                            case 10:
                                cls = SocialClass.Elite;
                                break;
                            case 11:
                            case 12:
                                cls = SocialClass.Hyper_Elite;
                                break;
                        }
                    }
                    else {
                        switch (roll) {
                            case 2:
                                cls = SocialClass.Underclass;
                                break;
                            case 3:
                            case 4:
                            case 5:
                                cls = SocialClass.Demogrant;
                                break;
                            case 6:
                            case 7:
                            case 8:
                                cls = SocialClass.Middle;
                                break;
                            case 9:
                            case 10:
                                cls = SocialClass.Upper;
                                break;
                            case 11:
                                cls = SocialClass.Elite;
                                break;
                            case 12:
                                cls = SocialClass.Hyper_Elite;
                                break;
                        }
                    }
                    return cls;
                };
                SocialClasses.prototype.applySocialClass = function (cls) {
                    var soc = this.getSocialClass(cls);
                    character_5.character.attributes[soc.attribute].value++;
                    character_5.character.earnings = soc.earnings;
                    if (cls === SocialClass.AlMustaslaha_Delivered ||
                        cls === SocialClass.AlMustaslaha_Donated ||
                        cls === SocialClass.AlMustaslaha_Orphaned) {
                        character_5.character.freeCareers.push(careers_1.Career.AkbarDoctor);
                        character_5.character.freeCareers.push(careers_1.Career.Military);
                        character_5.character.freeCareers.push(careers_1.Career.SpecialForces);
                    }
                    else if (cls === SocialClass.Atek) {
                        character_5.character.careerEvents.push(new careerEvents_1.CareerEventModel(new eventModel_1.EventModel("", "Quantronic Novice", "Ateks are unfamiliar with advanced technology and suffer +1 complication range when using Expert systems. This costs 50 XP to remove.")));
                    }
                };
                SocialClasses.prototype.reduceSocialClass = function () {
                    if (character_5.character.socialClass > SocialClass.Underclass) {
                        character_5.character.socialClass--;
                        character_5.character.earnings = Math.max(character_5.character.earnings - 1, 0);
                    }
                };
                SocialClasses.prototype.increaseSocialClass = function () {
                    if (character_5.character.socialClass < SocialClass.Hyper_Elite) {
                        character_5.character.socialClass++;
                        character_5.character.earnings++;
                    }
                };
                return SocialClasses;
            }());
            exports_10("SocialClasses", SocialClasses);
            exports_10("SocialClassesHelper", SocialClassesHelper = new SocialClasses());
        }
    }
});
System.register("helpers/birthPlaces", ["common/character", "helpers/factions", "helpers/attributes", "helpers/skills", "helpers/sources", "helpers/alienHosts"], function(exports_11, context_11) {
    "use strict";
    var __moduleName = context_11 && context_11.id;
    var character_6, factions_5, attributes_4, skills_4, sources_5, alienHosts_4;
    var BirthPlaceModel, HomelandModel, BirthPlaces, BirthPlacesHelper;
    return {
        setters:[
            function (character_6_1) {
                character_6 = character_6_1;
            },
            function (factions_5_1) {
                factions_5 = factions_5_1;
            },
            function (attributes_4_1) {
                attributes_4 = attributes_4_1;
            },
            function (skills_4_1) {
                skills_4 = skills_4_1;
            },
            function (sources_5_1) {
                sources_5 = sources_5_1;
            },
            function (alienHosts_4_1) {
                alienHosts_4 = alienHosts_4_1;
            }],
        execute: function() {
            BirthPlaceModel = (function () {
                function BirthPlaceModel(name, roll, languages, languageOptions, attributes, skill, rollSecondaryLanguage, rollHomeland) {
                    if (rollHomeland === void 0) { rollHomeland = false; }
                    this.name = name;
                    this.languages = languages;
                    this.languageOptions = languageOptions;
                    this.attributes = attributes;
                    this.skill = skill;
                    this.rollSecondaryLanguage = rollSecondaryLanguage;
                    this.roll = roll;
                    this.rollHomeland = rollHomeland;
                }
                return BirthPlaceModel;
            }());
            HomelandModel = (function () {
                function HomelandModel(name, languages, rollSecondaryLanguage, roll) {
                    this.name = name;
                    this.languages = languages;
                    this.rollSecondaryLanguage = rollSecondaryLanguage;
                    this.roll = roll;
                }
                return HomelandModel;
            }());
            BirthPlaces = (function () {
                function BirthPlaces() {
                    this._birthPlaces = (_a = {},
                        _a[factions_5.Faction.Ariadna] = [
                            new BirthPlaceModel("Antipodean Wilds/Outlands", 1, [], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Brawn], skills_4.Skill.Animal_Handling, false, true),
                            new BirthPlaceModel("Caledonia", 6, [], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Brawn], skills_4.Skill.Resistance, false, true),
                            new BirthPlaceModel("Merovingia", 10, [], null, [attributes_4.Attribute.Personality, attributes_4.Attribute.Brawn], skills_4.Skill.Lifestyle, false, true),
                            new BirthPlaceModel("Rodina/Tartar", 15, [], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Brawn], skills_4.Skill.Discipline, false, true),
                            new BirthPlaceModel("USAriadna", 20, [], null, [attributes_4.Attribute.Coordination, attributes_4.Attribute.Brawn], skills_4.Skill.Survival, false, true)
                        ],
                        _a[factions_5.Faction.Haqqislam] = [
                            new BirthPlaceModel("Bourak (Funduq Sultanate)", 3, ["Arabic", "Turkish"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Willpower], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Bourak (Iran Zhat al Amat Shanate)", 6, ["Arabic", "Farsi"], null, [attributes_4.Attribute.Awareness, attributes_4.Attribute.Willpower], skills_4.Skill.Persuade, false),
                            new BirthPlaceModel("Bourak (Gabqar)", 9, ["Arabic", "Kyrgyz"], null, [attributes_4.Attribute.Brawn, attributes_4.Attribute.Willpower], skills_4.Skill.Survival, false),
                            new BirthPlaceModel("Bourak (Al Medinat Caliphate)", 12, ["Arabic"], null, [attributes_4.Attribute.Personality, attributes_4.Attribute.Willpower], skills_4.Skill.Science, true),
                            new BirthPlaceModel("Bourak (Islands)", 14, ["Arabic"], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Willpower], skills_4.Skill.Persuade, true),
                            new BirthPlaceModel("Caravanserai", 16, ["Arabic"], null, [attributes_4.Attribute.Awareness, attributes_4.Attribute.Willpower], skills_4.Skill.Extraplanetary, true),
                            new BirthPlaceModel("Paradiso", 18, ["Arabic"], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Willpower], skills_4.Skill.Survival, true),
                            new BirthPlaceModel("Sol", 20, ["Random"], null, [attributes_4.Attribute.Coordination, attributes_4.Attribute.Willpower], skills_4.Skill.Pilot, false),
                        ],
                        _a[factions_5.Faction.Nomads] = [
                            new BirthPlaceModel("Bakunin", 5, ["German", "English"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Agility], skills_4.Skill.Science, false),
                            new BirthPlaceModel("Corregidor", 10, ["Corregidoran"], ["English", "Swahili"], [attributes_4.Attribute.Brawn, attributes_4.Attribute.Agility], skills_4.Skill.Resistance, false),
                            new BirthPlaceModel("Tunguska", 15, ["Russian", "English"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Agility], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Human Edge", 17, ["Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Agility], skills_4.Skill.Tech, false),
                            new BirthPlaceModel("Commercial Mission", 19, ["Random"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Agility], skills_4.Skill.Pilot, false),
                            new BirthPlaceModel("Sol/Sol Orbitals", 20, ["Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Agility], skills_4.Skill.Extraplanetary, false),
                        ],
                        _a[factions_5.Faction.PanOceania] = [
                            new BirthPlaceModel("Acontecimento", 4, ["Spanish"], ["Hindi", "Punjabi", "Portuguese"], [attributes_4.Attribute.Willpower, attributes_4.Attribute.Intelligence], skills_4.Skill.Animal_Handling, false, true),
                            new BirthPlaceModel("Neoterra", 8, ["Spanish"], ["English", "Hindi", "Italian"], [attributes_4.Attribute.Awareness, attributes_4.Attribute.Intelligence], skills_4.Skill.Lifestyle, false, true),
                            new BirthPlaceModel("Varuna", 12, ["Spanish", "Malay"], null, [attributes_4.Attribute.Brawn, attributes_4.Attribute.Intelligence], skills_4.Skill.Athletics, false, true),
                            new BirthPlaceModel("Sol", 16, ["Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Intelligence], skills_4.Skill.Extraplanetary, false),
                            new BirthPlaceModel("Paradiso", 18, null, ["Spanish", "English"], [attributes_4.Attribute.Personality, attributes_4.Attribute.Intelligence], skills_4.Skill.Survival, false, true),
                            new BirthPlaceModel("Human Edge", 19, null, ["Spanish", "English"], [attributes_4.Attribute.Agility, attributes_4.Attribute.Intelligence], skills_4.Skill.Tech, false, true),
                            new BirthPlaceModel("Svalarheima", 20, ["SvalarNorse"], ["English", "German"], [attributes_4.Attribute.Willpower, attributes_4.Attribute.Intelligence], skills_4.Skill.Survival, false, true),
                        ],
                        _a[factions_5.Faction.YuJing] = [
                            new BirthPlaceModel("Shentang", 5, ["Yujingyu", "Random"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Awareness], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Yutang", 10, ["Yujingyu"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Awareness], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Sol (Chung Kuo)", 15, ["Yujingyu", "Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Awareness], skills_4.Skill.Extraplanetary, false),
                            new BirthPlaceModel("Paradiso", 17, ["Yujingyu", "Random"], null, [attributes_4.Attribute.Personality, attributes_4.Attribute.Awareness], skills_4.Skill.Survival, false),
                            new BirthPlaceModel("Svalarheima", 19, ["Yujingyu"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Awareness], skills_4.Skill.Survival, false),
                            new BirthPlaceModel("Human Edge", 20, ["Yujingyu"], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Awareness], skills_4.Skill.Tech, false),
                        ],
                        _a[factions_5.Faction.MinorNation] = [
                            new BirthPlaceModel("Earth", 4, ["Random", "Random"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Awareness], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Lunar Colonies", 7, ["Random", "Random"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Awareness], skills_4.Skill.Lifestyle, false),
                            new BirthPlaceModel("Venusian Aerostats", 9, ["Random", "Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Awareness], skills_4.Skill.Extraplanetary, false),
                            new BirthPlaceModel("Mars", 13, ["Random", "Random"], null, [attributes_4.Attribute.Personality, attributes_4.Attribute.Awareness], skills_4.Skill.Survival, false),
                            new BirthPlaceModel("Jovian Colonies", 15, ["Random", "Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Awareness], skills_4.Skill.Survival, false),
                            new BirthPlaceModel("Orbitals", 18, ["Random", "Random"], null, [attributes_4.Attribute.Agility, attributes_4.Attribute.Awareness], skills_4.Skill.Tech, false),
                            new BirthPlaceModel("Human Edge", 20, ["Random", "Random"], null, [attributes_4.Attribute.Willpower, attributes_4.Attribute.Awareness], skills_4.Skill.Survival, false),
                        ],
                        _a[factions_5.Faction.O12] = [
                            new BirthPlaceModel("Concilium", 6, ["Spanish"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Personality], skills_4.Skill.Persuade, true),
                            new BirthPlaceModel("Concilium", 12, ["English"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Personality], skills_4.Skill.Persuade, true),
                            new BirthPlaceModel("Concilium", 18, ["German"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Personality], skills_4.Skill.Persuade, true),
                            new BirthPlaceModel("Concilium", 20, ["Random"], null, [attributes_4.Attribute.Intelligence, attributes_4.Attribute.Personality], skills_4.Skill.Persuade, true),
                        ],
                        _a
                    );
                    this._homelands = (_b = {},
                        _b["Caledonia"] = [
                            new HomelandModel("Cailleach", ["Russian (Kazak)|Antipode Creole (Snarl)", "English (Scots)"], false, 4),
                            new HomelandModel("Calonack", ["English (Scots)"], true, 6),
                            new HomelandModel("Coille Laith", ["English (Scots)"], true, 8),
                            new HomelandModel("Dál Riada", ["English (Scots)"], true, 10),
                            new HomelandModel("Inverloch", ["English (Scots)"], true, 12),
                            new HomelandModel("Scone", ["Russian (Kazak)|French", "English (Scots)"], true, 16),
                            new HomelandModel("Skara Brae", ["Russian (Kazak)", "English (Scots)"], false, 18),
                            new HomelandModel("Tuathcruithne", ["Antipode Creole (Snarl)", "English (Scots)"], false, 20)
                        ],
                        _b["Merovingia"] = [
                            new HomelandModel("Auron", ["English (American)|Russian (Kazak)", "French"], true, 4),
                            new HomelandModel("Le Douar", ["English (American)|Russian (Kazak)", "French"], true, 8),
                            new HomelandModel("Mariannebourg", ["French"], true, 13),
                            new HomelandModel("Poictesme", ["English (Scots)", "French"], false, 16),
                            new HomelandModel("Lafayette", ["English", "French"], false, 18),
                            new HomelandModel("Dauphin", ["French"], true, 20)
                        ],
                        _b["Rodina/Tartar"] = [
                            new HomelandModel("Dynamo", ["Russian (Kazak)"], true, 2),
                            new HomelandModel("Gök-Burgo", ["Russian (Kazak)"], true, 4),
                            new HomelandModel("Mat'", ["English|French", "Russian (Kazak)"], true, 7),
                            new HomelandModel("Novocherkassk", ["Russian (Kazak)"], true, 9),
                            new HomelandModel("Stanitsas", ["Russian (Kazak)"], false, 12),
                            new HomelandModel("Castropol", ["Russian (Kazak)"], true, 14),
                            new HomelandModel("Dalnîy", ["Russian (Kazak)"], true, 16),
                            new HomelandModel("Ovsyanka", ["English|French|Yujingyu", "Russian (Kazak)"], true, 18),
                            new HomelandModel("Tsitadel", ["Russian (Kazak)"], true, 20)
                        ],
                        _b["USAriadna"] = [
                            new HomelandModel("Mount Zion - The Wall", ["English (American)"], true, 2),
                            new HomelandModel("Jackson", ["English (American)"], false, 5),
                            new HomelandModel("Jefferson", ["Russian (Kazak)", "English (American)"], false, 8),
                            new HomelandModel("Lincoln", ["French", "English (American)"], false, 11),
                            new HomelandModel("Kennedy", ["English (American)"], true, 14),
                            new HomelandModel("Roosevelt", ["English (American)"], true, 17),
                            new HomelandModel("Washington", ["English (American)"], true, 20)
                        ],
                        _b["Antipodean Wilds/Outlands"] = [
                            new HomelandModel("Ariadna Exclusion Zone", ["English|French|Russian"], true, 7),
                            new HomelandModel("The South Mirror", ["English|French|Russian"], true, 14),
                            new HomelandModel("Tartary Outlands", ["Russian (Kazak)"], true, 19),
                            new HomelandModel("Antipodean Wilds", ["English|French|Russian"], false, 20) // TODO: roll tribe
                        ],
                        _b["Acontecimento"] = [
                            new HomelandModel("Aryavarta", ["Hindi|Punjabi", "Portuguese", "English"], false, 4),
                            new HomelandModel("Bomjesus", ["Portuguese|Spanish", "English"], true, 8),
                            new HomelandModel("Camões", ["Portuguese", "Spanish", "English"], false, 11),
                            new HomelandModel("Magalhães", ["Portuguese", "Spanish", "English"], false, 14),
                            new HomelandModel("Vishwa", ["Hindi|Punjabi|Portuguese", "English"], false, 17),
                            new HomelandModel("Minor Archipelagos", ["Hindi|Punjabi|Portuguese", "English"], false, 19),
                            new HomelandModel("Descoberta System", ["Hindi|Punjabi|Portuguese", "Spanish", "English"], false, 20)
                        ],
                        _b["Neoterra"] = [
                            new HomelandModel("Aquila", ["German|Italian", "Spanish", "English"], false, 4),
                            new HomelandModel("Gratia Archipelago", ["Hindi|Italian", "Spanish", "English"], false, 6),
                            new HomelandModel("Lux", ["English", "Spanish"], false, 10),
                            new HomelandModel("Pax", ["French|Greek|Italian|Portuguese", "Spanish", "English"], false, 15),
                            new HomelandModel("Solitudo Island", ["Hindi|Italian", "Spanish", "English"], false, 16),
                            new HomelandModel("Spes Archipelago", ["Italian|Portuguese|Tagalog|Spanish", "Hindi", "English"], false, 19),
                            new HomelandModel("Tecendur System", ["Hindi|Italian", "Spanish", "English"], false, 20),
                        ],
                        _b["Varuna"] = [
                            new HomelandModel("Atlantea Archipelago", ["Spanish", "Malay", "English"], false, 6),
                            new HomelandModel("Gurindam Archipelago", ["Tamil|Tagalog|Malay", "English"], true, 11),
                            new HomelandModel("Hawaki Archipelago", ["Māori", "Malay", "English"], true, 15),
                            new HomelandModel("Kamuri Kandam", ["Hindi|Malayalam", "Tamil", "English"], false, 18),
                            new HomelandModel("Lemuria", ["Malay|Portuguese|Tamil", "English"], false, 19),
                            new HomelandModel("Mitra System", ["Malay|Malayalam|Spanish", "Tagalog", "English"], false, 20),
                        ],
                        _b["Paradiso"] = [
                            new HomelandModel("Syldavia", ["Portuguese|Punjabi|Hindi", "Spanish", "English"], false, 8),
                            new HomelandModel("Gāyatrī", ["Portuguese|Spanish|Punjabi", "Hindi", "English"], false, 16),
                            new HomelandModel("Isles of Paradiso", ["Hindi|Spanish", "English"], true, 17),
                            new HomelandModel("Paradiso System", ["Hindi|Spanish", "English"], true, 20),
                        ],
                        _b["Human Edge"] = [
                            new HomelandModel("Asteroid Belts", ["Spanish", "English"], true, 6),
                            new HomelandModel("Trojans", ["Portugese|Hindi|Spanish", "English"], true, 14),
                            new HomelandModel("Heraclitus", ["Portuguese|Punjabi|Hindi", "Spanish", "English"], false, 16),
                            new HomelandModel("Livy", ["Portuguese|Tagalog|Hindi", "Spanish", "English"], false, 17),
                            new HomelandModel("Socrates", ["Tagalog|Hindi|Spanish|Yujingyu", "English"], false, 20),
                        ],
                        _b["Svalarheima"] = [
                            new HomelandModel("Arkhangelsk", ["English", "German", "SvalarNorse"], false, 5),
                            new HomelandModel("Nordkap", ["German|Spanish", "English", "SvalarNorse"], false, 8),
                            new HomelandModel("Solokov", ["German|Spanish", "English", "SvalarNorse"], false, 16),
                            new HomelandModel("Trollhättan", ["German|Spanish", "English", "SvalarNorse"], false, 19),
                            new HomelandModel("Epsilon Eridani System Orbitals", ["German|Spanish|Tagalog", "English", "SvalarNorse"], false, 20),
                        ],
                        _b
                    );
                    this._sissoluWaters = [
                        new HomelandModel("Atlantea Waters", ["Tetessom", "Spanish|English|Malay"], false, 5),
                        new HomelandModel("Gurindam Waters", ["Tetessom", "Tamil|Malayalam|Malay"], true, 9),
                        new HomelandModel("Hawaki Waters", ["Tetessom", "Maori|Malay"], true, 14),
                        new HomelandModel("Kumari Kandam Waters", ["Tetessom", "Tamil"], false, 17),
                        new HomelandModel("Lemurian Waters", ["Tetessom", "Malay|Spanish|English|Tamil"], false, 18),
                        new HomelandModel("Katallpeac Lilypad", ["Tetessom"], true, 20),
                    ];
                    var _a, _b;
                }
                BirthPlaces.prototype.getBirthPlaces = function (faction) {
                    if (faction === factions_5.Faction.Aleph) {
                        faction = factions_5.Faction.O12;
                    }
                    if (character_6.character.hasSource(sources_5.Source.PanOceania) &&
                        character_6.character.host === alienHosts_4.AlienHost.Helot) {
                        var homelands = this._birthPlaces[factions_5.Faction.PanOceania];
                        return homelands.filter(function (home) { return home.name === "Varuna"; });
                    }
                    return this._birthPlaces[faction];
                };
                BirthPlaces.prototype.generateBirthPlace = function (faction, apply) {
                    if (apply === void 0) { apply = false; }
                    if (faction === factions_5.Faction.Aleph) {
                        faction = factions_5.Faction.O12;
                    }
                    var roll = Math.floor(Math.random() * 20) + 1;
                    var candidates = this._birthPlaces[faction];
                    var birthPlace = null;
                    for (var i = 0; i < candidates.length; i++) {
                        var home = candidates[i];
                        if (roll <= home.roll) {
                            birthPlace = home;
                            break;
                        }
                    }
                    if (apply) {
                        if (birthPlace.languages) {
                            var n = birthPlace.languages.indexOf("Random");
                            while (n > -1) {
                                birthPlace.languages.splice(n, 1);
                                var lang = this.generateRandomLanguage(faction);
                                lang.forEach(function (l) {
                                    character_6.character.addLanguage(l);
                                });
                                n = birthPlace.languages.indexOf("Random");
                            }
                            birthPlace.languages.forEach(function (l) {
                                character_6.character.addLanguage(l);
                            });
                        }
                        if (birthPlace.rollSecondaryLanguage) {
                            character_6.character.addLanguage(this.generateSecondaryLanguage(faction));
                        }
                        if (birthPlace.rollHomeland &&
                            (character_6.character.hasSource(sources_5.Source.Ariadna) ||
                                character_6.character.hasSource(sources_5.Source.PanOceania))) {
                            roll = Math.floor(Math.random() * 20) + 1;
                            var homelands = void 0;
                            if (character_6.character.host === alienHosts_4.AlienHost.Helot) {
                                homelands = this._sissoluWaters;
                            }
                            else {
                                homelands = this._homelands[birthPlace.name];
                            }
                            for (var homeland in homelands) {
                                var home_1 = homelands[homeland];
                                if (roll <= home_1.roll) {
                                    for (var language = 0; language < home_1.languages.length; language++) {
                                        var l = home_1.languages[language];
                                        if (l.indexOf('|') === -1) {
                                            character_6.character.addLanguage(l);
                                        }
                                    }
                                    if (home_1.rollSecondaryLanguage) {
                                        character_6.character.addLanguage(this.generateSecondaryLanguage(faction));
                                    }
                                    character_6.character.homeland = home_1.name;
                                    break;
                                }
                            }
                        }
                    }
                    return birthPlace;
                };
                BirthPlaces.prototype.getBirthPlace = function (faction, id) {
                    if (faction === factions_5.Faction.Aleph) {
                        faction = factions_5.Faction.O12;
                    }
                    var places = this._birthPlaces[faction];
                    var result = null;
                    places.forEach(function (home) {
                        if (home.roll === id) {
                            result = home;
                        }
                    });
                    if (result) {
                        var homelands = this._homelands[result.name];
                        for (var homeland in homelands) {
                            var home = homelands[homeland];
                            if (home.name === character_6.character.homeland) {
                                for (var lang = 0; lang < home.languages.length; lang++) {
                                    var language = home.languages[lang];
                                    if (language.indexOf('|') > -1) {
                                        if (!result.languageOptions) {
                                            result.languageOptions = [];
                                        }
                                        (_a = result.languageOptions).push.apply(_a, language.split('|'));
                                    }
                                }
                                break;
                            }
                        }
                    }
                    if (result.languageOptions) {
                        result.languageOptions = result.languageOptions.filter(function (lang, index, self) {
                            return index === self.indexOf(lang) && !character_6.character.hasLanguage(lang);
                        });
                    }
                    return result;
                    var _a;
                };
                BirthPlaces.prototype.generateSissoluWaters = function () {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    for (var sw in this._sissoluWaters) {
                        var waters = this._sissoluWaters[sw];
                        if (waters.roll >= roll) {
                            return waters;
                        }
                    }
                };
                BirthPlaces.prototype.getSissoluWaters = function () {
                    return this._sissoluWaters;
                };
                BirthPlaces.prototype.getSissoluWater = function (id) {
                    return this._sissoluWaters.filter(function (w) { return w.roll === id; })[0];
                };
                BirthPlaces.prototype.getHomelands = function (birthplace) {
                    return this._homelands[birthplace];
                };
                BirthPlaces.prototype.generateHomeland = function (birthplace) {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    this._homelands[birthplace].forEach(function (home, i) {
                        if (home.roll <= roll) {
                            return home;
                        }
                    });
                    return null;
                };
                BirthPlaces.prototype.applyBirthPlace = function (birthPlace) {
                    birthPlace.attributes.forEach(function (attr) {
                        character_6.character.attributes[attr].value++;
                    });
                    if (character_6.character.homeland == null) {
                        if (birthPlace.rollHomeland && character_6.character.hasSource(sources_5.Source.Ariadna)) {
                            var roll = Math.floor(Math.random() * 20) + 1;
                            var homelands = this._homelands[birthPlace.name];
                            for (var homeland in homelands) {
                                var home = homelands[homeland];
                                if (roll <= home.roll) {
                                    for (var language = 0; language < home.languages.length; language++) {
                                        var l = home.languages[language];
                                        if (l.indexOf('|') === -1) {
                                            character_6.character.addLanguage(l);
                                        }
                                    }
                                    if (home.rollSecondaryLanguage) {
                                        character_6.character.addLanguage(this.generateSecondaryLanguage(character_6.character.heritage));
                                    }
                                    character_6.character.homeland = home.name;
                                    break;
                                }
                            }
                        }
                        if (birthPlace.languages) {
                            var n = birthPlace.languages.indexOf("Random");
                            while (n > -1) {
                                birthPlace.languages.splice(n, 1);
                                var lang = this.generateRandomLanguage(character_6.character.faction, true);
                                lang.forEach(function (l) {
                                    character_6.character.addLanguage(l);
                                });
                                n = birthPlace.languages.indexOf("Random");
                            }
                        }
                    }
                };
                BirthPlaces.prototype.applySissoluWaters = function (id) {
                    var waters = this._sissoluWaters.filter(function (w) { return w.roll === id; })[0];
                    character_6.character.addLanguage(waters.languages[0]);
                    if (waters.rollSecondaryLanguage) {
                        var secLang = this.generateSecondaryLanguage(factions_5.Faction.PanOceania);
                        if (!character_6.character.hasLanguage(secLang)) {
                            character_6.character.addLanguage(secLang);
                        }
                    }
                };
                BirthPlaces.prototype.generateRandomLanguage = function (faction, randomLanguageTable, ignoreDoubleRoll) {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    if (faction === factions_5.Faction.Aleph) {
                        faction = factions_5.Faction.O12;
                    }
                    if (faction === factions_5.Faction.Haqqislam || faction === factions_5.Faction.Nomads || faction === factions_5.Faction.MinorNation || faction === factions_5.Faction.O12 || randomLanguageTable) {
                        switch (roll) {
                            case 1: return ["Yujingyu"];
                            case 2: return ["Spanish"];
                            case 3: return ["English"];
                            case 4: return ["Hindi"];
                            case 5: return ["Arabic"];
                            case 6: return ["Portuguese"];
                            case 7: return ["Russian"];
                            case 8: return ["Japanese"];
                            case 9: return ["Punjabi"];
                            case 10: return ["German"];
                            case 11: return ["Javanese"];
                            case 12: return ["Malay"];
                            case 13: return ["Vietnamese"];
                            case 14: return ["Korean"];
                            case 15: return ["French"];
                            case 16: return ["Turkish"];
                            case 17: return ["Italian"];
                            case 18: return ["Thai"];
                            case 19: return ["Farsi"];
                            case 20:
                                if (!ignoreDoubleRoll) {
                                    return [this.generateRandomLanguage(faction, false, true)[0], this.generateRandomLanguage(faction, false, true)[0]];
                                }
                                else {
                                    return ["Spanish"];
                                }
                        }
                    }
                    else if (faction === factions_5.Faction.PanOceania) {
                        switch (roll) {
                            case 1:
                            case 2: return ["Spanish"];
                            case 3:
                            case 4: return ["English"];
                            case 5:
                            case 6: return ["Portuguese"];
                            case 7:
                            case 8: return ["German"];
                            case 9:
                            case 10: return ["Italian"];
                            case 11:
                            case 12: return ["French"];
                            case 13:
                            case 14: return ["Filipino"];
                            case 15:
                            case 16: return ["Hindi"];
                            case 17:
                            case 18: return ["Malay"];
                            case 19:
                            case 20: return this.generateRandomLanguage(faction, true, true);
                        }
                    }
                    else if (faction == factions_5.Faction.YuJing) {
                        switch (roll) {
                            case 1: return this.generateRandomLanguage(faction, true, true);
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6: return ["Yu Jing"];
                            case 7:
                            case 8: return ["Korean"];
                            case 9:
                            case 10: return ["Laotian"];
                            case 11:
                            case 12: return ["Thai"];
                            case 13:
                            case 14: return ["Mongolian"];
                            case 15:
                            case 16: return ["Ulighur"];
                            case 17:
                            case 18: return ["Cantonese"];
                            case 19:
                            case 20:
                                if (!ignoreDoubleRoll) {
                                    return [this.generateRandomLanguage(faction, false, true)[0], this.generateRandomLanguage(faction, false, true)[0]];
                                }
                                else {
                                    return ["Yu Jing"];
                                }
                        }
                    }
                    return [];
                };
                BirthPlaces.prototype.generateSecondaryLanguage = function (faction) {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    var candidates = this._birthPlaces[faction];
                    var birthPlace = null;
                    for (var i = 0; i < candidates.length; i++) {
                        var home = candidates[i];
                        if (roll <= home.roll) {
                            birthPlace = home;
                            break;
                        }
                    }
                    var n = birthPlace.languages.indexOf("Random");
                    while (n > -1) {
                        birthPlace.languages.splice(n, 1);
                        n = birthPlace.languages.indexOf("Random");
                    }
                    var languages = birthPlace.languages;
                    if (birthPlace.rollHomeland) {
                        languages = [];
                        roll = Math.floor(Math.random() * 20) + 1;
                        var homelands = this._homelands[birthPlace.name];
                        for (var homeland in homelands) {
                            var home_2 = homelands[homeland];
                            if (roll <= home_2.roll) {
                                for (var language = 0; language < home_2.languages.length; language++) {
                                    var l = home_2.languages[language];
                                    if (l.indexOf('|') > -1) {
                                        languages.push.apply(languages, l.split('|'));
                                    }
                                    else {
                                        languages.push(l);
                                    }
                                }
                                break;
                            }
                        }
                    }
                    roll = Math.floor(Math.random() * languages.length);
                    return languages[roll];
                };
                BirthPlaces.prototype.getCustomizationLanguages = function () {
                    var languages = [
                        "Arabic",
                        "English",
                        "Farsi",
                        "Filipino",
                        "French",
                        "German",
                        "Hindi",
                        "Italian",
                        "Japanese",
                        "Javanese",
                        "Korean",
                        "Malay",
                        "Portuguese",
                        "Punjabi",
                        "Russian",
                        "Spanish",
                        "Thai",
                        "Turkish",
                        "Vietnamese",
                        "Yujungyu",
                    ];
                    character_6.character.languages.forEach(function (lang) {
                        var n = languages.indexOf(lang);
                        if (n > -1) {
                            languages.splice(n, 1);
                        }
                    });
                    return languages;
                };
                return BirthPlaces;
            }());
            exports_11("BirthPlaces", BirthPlaces);
            exports_11("BirthPlacesHelper", BirthPlacesHelper = new BirthPlaces());
        }
    }
});
System.register("helpers/youthEvents", ["helpers/diceRoller", "helpers/factions", "helpers/socialClasses", "helpers/birthPlaces", "helpers/alienHosts", "common/character"], function(exports_12, context_12) {
    "use strict";
    var __moduleName = context_12 && context_12.id;
    var diceRoller_2, factions_6, socialClasses_2, birthPlaces_1, alienHosts_5, character_7;
    var YouthEventModel, CompositeYouthEventModel, YouthEvents, YouthEventsHelper;
    return {
        setters:[
            function (diceRoller_2_1) {
                diceRoller_2 = diceRoller_2_1;
            },
            function (factions_6_1) {
                factions_6 = factions_6_1;
            },
            function (socialClasses_2_1) {
                socialClasses_2 = socialClasses_2_1;
            },
            function (birthPlaces_1_1) {
                birthPlaces_1 = birthPlaces_1_1;
            },
            function (alienHosts_5_1) {
                alienHosts_5 = alienHosts_5_1;
            },
            function (character_7_1) {
                character_7 = character_7_1;
            }],
        execute: function() {
            YouthEventModel = (function () {
                function YouthEventModel(description, onApply) {
                    this._description = description;
                    this._onApply = onApply;
                }
                Object.defineProperty(YouthEventModel.prototype, "description", {
                    get: function () {
                        return this._description;
                    },
                    set: function (val) {
                        this._description = val;
                    },
                    enumerable: true,
                    configurable: true
                });
                YouthEventModel.prototype.apply = function () {
                    this._onApply();
                };
                return YouthEventModel;
            }());
            exports_12("YouthEventModel", YouthEventModel);
            CompositeYouthEventModel = (function (_super) {
                __extends(CompositeYouthEventModel, _super);
                function CompositeYouthEventModel(event1, event2) {
                    _super.call(this, "");
                    this._event1 = event1;
                    this._event2 = event2;
                }
                Object.defineProperty(CompositeYouthEventModel.prototype, "description", {
                    get: function () {
                        return this._event1.description + " & " + this._event2.description;
                    },
                    enumerable: true,
                    configurable: true
                });
                CompositeYouthEventModel.prototype.apply = function () {
                    if (this._event1.apply)
                        this._event1.apply();
                    if (this._event2.apply)
                        this._event2.apply();
                };
                return CompositeYouthEventModel;
            }(YouthEventModel));
            exports_12("CompositeYouthEventModel", CompositeYouthEventModel);
            YouthEvents = (function () {
                function YouthEvents() {
                }
                YouthEvents.prototype.generateEvent = function () {
                    var type = Math.floor(Math.random() * 20) + 1;
                    var roll = Math.floor(Math.random() * 6) + 1;
                    var event = this.getEvent(type, roll);
                    return event;
                };
                YouthEvents.prototype.getEvent = function (type, roll) {
                    var _this = this;
                    if (character_7.character.host === alienHosts_5.AlienHost.Dogface ||
                        character_7.character.host === alienHosts_5.AlienHost.Wulver) {
                        return this.getDogfaceOrWulverEvent(type, roll);
                    }
                    else if (character_7.character.host === alienHosts_5.AlienHost.Antipode) {
                        return this.getAntipodeEvent(type, roll);
                    }
                    switch (type) {
                        case 1:
                        case 2:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed perjury", function () { });
                                    case 2: return new YouthEventModel("Witnessed a murder", function () { });
                                    case 3: return new YouthEventModel("Witnessed police corruption", function () { });
                                    case 4: return new YouthEventModel("Witnessed assassination", function () { });
                                    case 5: return new YouthEventModel("Witnessed high level corruption", function () { });
                                    case 6: return new YouthEventModel("Witnessed a secret pregnancy", function () { });
                                }
                            }
                            break;
                        case 3:
                        case 4:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed embezzlement", function () { });
                                    case 2: return new YouthEventModel("Witnessed a violent crime", function () { });
                                    case 3: return new YouthEventModel("Witnessed long term abuse", function () { });
                                    case 4: return new YouthEventModel("Witnessed cybercrime", function () { });
                                    case 5: return new YouthEventModel("Witnessed backroom deals being made", function () { });
                                    case 6: return new YouthEventModel("Witnessed political corruption", function () { });
                                }
                            }
                            break;
                        case 5:
                        case 6:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Involved in an accident", function () { });
                                    case 2: return new YouthEventModel("Involved in a shooting", function () { });
                                    case 3: return new YouthEventModel("Involved in a transit disaster", function () { });
                                    case 4: return new YouthEventModel("Involved in police action", function () { });
                                    case 5: return new YouthEventModel("Involved in a scandal", function () { });
                                    case 6: return new YouthEventModel("Involved in mass arrests", function () { });
                                }
                            }
                            break;
                        case 7:
                        case 8:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Involved in a suicide", function () { });
                                    case 2: return new YouthEventModel("Involved in narcotics sale", function () { });
                                    case 3: return new YouthEventModel("Involved in Resurrection Lottery", function () { });
                                    case 4: return new YouthEventModel("Involved in faking a suicide", function () { });
                                    case 5: return new YouthEventModel("Involved in a cover up", function () { });
                                    case 6: return new YouthEventModel("Involved in smuggling", function () { });
                                }
                            }
                            break;
                        case 9:
                        case 10:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Discovered your religion", function () { });
                                    case 2: return new YouthEventModel("Discovered a suicide", function () { });
                                    case 3: return new YouthEventModel("Discovered a fandom", function () { });
                                    case 4: return new YouthEventModel("Discovered a secret", function () { });
                                    case 5: return new YouthEventModel("Discovered an infiltration", function () { });
                                    case 6: return new YouthEventModel("Discovered elite hypocrisy", function () { });
                                }
                            }
                            break;
                        case 11:
                        case 12:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Discovered a family secret", function () { });
                                    case 2: return new YouthEventModel("Discovered a body", function () { });
                                    case 3: return new YouthEventModel("Discovered a valuable secret", function () { });
                                    case 4: return new YouthEventModel("Discovered sexual attraction", function () { });
                                    case 5: return new YouthEventModel("Discovered personality tampering", function () { });
                                    case 6: return new YouthEventModel("Discovered a scandal", function () { });
                                }
                            }
                            break;
                        case 13:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: " + diceRoller_2.DiceRoller.rollSpecial(6, 1).hits + " Siblings", function () { });
                                    case 2: return new YouthEventModel("Family Change: parents killed", function () { });
                                    case 3: return new YouthEventModel("Family Change: parent walks out", function () { });
                                    case 4: return new YouthEventModel("Family Change: kidnapped", function () { });
                                    case 5: return new YouthEventModel("Family Change: family member resurrected", function () { });
                                    case 6: return new YouthEventModel("Family Change: population relocation", function () { });
                                }
                            }
                            break;
                        case 14:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: divorce", function () { });
                                    case 2: return new YouthEventModel("Family Change: sibling killed at a young age", function () { });
                                    case 3: return new YouthEventModel("Family Change: gained an extended family", function () { });
                                    case 4: return new YouthEventModel("Family Change: parents incarcerated", function () { });
                                    case 5: return new YouthEventModel("Family Change: family member's Cube corrupted", function () { });
                                    case 6: return new YouthEventModel("Family Change: moved to a new planet", function () { });
                                }
                            }
                            break;
                        case 15:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Media Fad: joined a popular movement", function () { });
                                    case 2: return new YouthEventModel("Media Fad: joined a radical movement", function () { });
                                    case 3: return new YouthEventModel("Media Fad: got involved in life-streaming", function () { });
                                    case 4: return new YouthEventModel("Media Fad: established Arachne nodes", function () { });
                                    case 5: return new YouthEventModel("Media Fad: Maya addiction", function () { });
                                    case 6: return new YouthEventModel("Media Fad: appeared on a popular Maya broadcast", function () { });
                                }
                            }
                            break;
                        case 16:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Succumbed to propaganda", function () { });
                                    case 2: return new YouthEventModel("Succumbed to social exclusion", function () { });
                                    case 3: return new YouthEventModel("Succumbed to a scam", function () { });
                                    case 4: return new YouthEventModel("Succumbed to personality tampering", function () { });
                                    case 5: return new YouthEventModel("Succumbed to boredom", function () { });
                                    case 6: return new YouthEventModel("Succumbed to brainwashing", function () { });
                                }
                            }
                            break;
                        case 17:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Social Contacts: escaped the neighbourhood", function () { });
                                    case 2: return new YouthEventModel("Social Contacts: had brush with opposite social class", function () { });
                                    case 3: return new YouthEventModel("Social Contacts: gained enemy (" + factions_6.FactionsHelper.getFaction(factions_6.FactionsHelper.generateFaction(false, true)).name + ")", function () { });
                                    case 4: return new YouthEventModel("Social Contacts: gained contact (" + factions_6.FactionsHelper.getFaction(factions_6.FactionsHelper.generateFaction(false, true)).name + ")", function () { });
                                    case 5: return new YouthEventModel("Social Contacts: gained mentor (" + factions_6.FactionsHelper.getFaction(factions_6.FactionsHelper.generateFaction(false, true)).name + ")", function () { });
                                    case 6: return new YouthEventModel("Social Contacts: joined Submondo faction", function () { });
                                }
                            }
                            break;
                        case 18:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Gained a one asset debt: You owe someone a debt worth one Asset", function () { });
                                    case 2: return new YouthEventModel("Cube destruction: The Cube used to store your personality has been destroyed. You'll begin play without a Cube.", function () { });
                                    case 3: return new YouthEventModel("Cube theft: Your Cube or the data on your Cube was stolen. Who took it? Do they still have it? What have they done with it?", function () { });
                                    case 4: return new YouthEventModel("Changed social class: During your youth, your family experienced a shift in their economic status (" + socialClasses_2.SocialClassesHelper.getSocialClass(this.getNewSocialClass()).name + ")", function () { _this.changeSocialClass(); });
                                    case 5: return new YouthEventModel("Gain one asset:  You've gained one additional Asset", function () { character_7.character.assets++; });
                                    case 6: return new YouthEventModel("Defection! You've switched allegiance to a new faction (" + factions_6.FactionsHelper.getFaction(this.getNewFaction()).name + ")", function () { _this.defect(); });
                                }
                            }
                            break;
                        case 19:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Learned a new language (" + this.getNewLanguage() + ")", function () { _this.learnLanguage(); });
                                    case 2: return this.blackmailMaterial();
                                    case 3: return new YouthEventModel("Biological/Chemical weapons: You were exposed to some form of biological weapon. Reduce one attribute of your choice by one point.", function () { });
                                    case 4: return new YouthEventModel("Radical biomodification: You gain a Cosmetic Augmentation 3 (3 bonus Momentum on tests based on appearance or social interaction, but increase repercussion range by +3 outside of the target subculture. Describe how your body has been transformed.", function () { });
                                    case 5: return this.seriousGeneticIllness();
                                    case 6: return new YouthEventModel("Died! Your character died and was resurrected.", function () { character_7.character.applyDeath(); });
                                }
                            }
                            break;
                        case 20:
                            {
                                var roll1 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                var roll2 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                return new CompositeYouthEventModel(roll1, roll2);
                            }
                    }
                    return null;
                };
                YouthEvents.prototype.getDetailView = function (event) {
                    return (event.description.indexOf("Biological/Chemical weapons") > -1 ||
                        event.description.indexOf("Died!") > -1);
                };
                YouthEvents.prototype.getDogfaceOrWulverEvent = function (type, roll) {
                    var _this = this;
                    switch (type) {
                        case 1:
                        case 2:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Survived an Antipode assault", function () { });
                                    case 2: return new YouthEventModel("Survived a wild animal attack", function () { });
                                    case 3: return new YouthEventModel("Survived getting stranded", function () { });
                                    case 4: return new YouthEventModel("Survived a natural disaster", function () { });
                                    case 5: return new YouthEventModel("Survived a border skirmish", function () { });
                                    case 6: return new YouthEventModel("Survived severe drought/famine", function () { });
                                }
                            }
                            break;
                        case 3:
                        case 4:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Survived kidnapping", function () { });
                                    case 2: return new YouthEventModel("Survived sabotage", function () { });
                                    case 3: return new YouthEventModel("Survived violent riots", function () { });
                                    case 4: return new YouthEventModel("Survived an accident", function () { });
                                    case 5: return new YouthEventModel("Survived a shooting", function () { });
                                    case 6: return new YouthEventModel("Survived a Submondo raid", function () { });
                                }
                            }
                            break;
                        case 5:
                        case 6:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed perjury", function () { });
                                    case 2: return new YouthEventModel("Witnessed a murder", function () { });
                                    case 3: return new YouthEventModel("Witnessed assassination", function () { });
                                    case 4: return new YouthEventModel("Witnessed political corruption", function () { });
                                    case 5: return new YouthEventModel("Witnessed a violent crime", function () { });
                                    case 6: return new YouthEventModel("Witnessed a long-term abuse", function () { });
                                }
                            }
                            break;
                        case 7:
                        case 8:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed betrayal", function () { });
                                    case 2: return new YouthEventModel("Witnessed bigotry", function () { });
                                    case 3: return new YouthEventModel("Witnessed an Antipode attack", function () { });
                                    case 4: return new YouthEventModel("Witnessed hypocrisy", function () { });
                                    case 5: return new YouthEventModel("Witnessed selfless bravery", function () { });
                                    case 6: return new YouthEventModel("Witnessed heroic sacrifice", function () { });
                                }
                            }
                            break;
                        case 9:
                        case 10:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Involved in a cover-up", function () { });
                                    case 2: return new YouthEventModel("Involved in smuggling", function () { });
                                    case 3: return new YouthEventModel("Involved in amateur Dog-Bowl", function () { });
                                    case 4: return new YouthEventModel("Involved in Dog Nation protests", function () { });
                                    case 5: return new YouthEventModel("Involved in charity work", function () { });
                                    case 6: return new YouthEventModel("Involved in gang activity", function () { });
                                }
                            }
                            break;
                        case 11:
                        case 12:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Discovered religion", function () { });
                                    case 2: return new YouthEventModel("Discovered scientific curiosity", function () { });
                                    case 3: return new YouthEventModel("Discovered artistic talent", function () { });
                                    case 4: return new YouthEventModel("Discovered sexual attraction", function () { });
                                    case 5: return new YouthEventModel("Discovered a dead body", function () { });
                                    case 6: return new YouthEventModel("Discovered archeological ruins", function () { });
                                }
                            }
                            break;
                        case 13:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: parents (re)marries", function () { });
                                    case 2: return new YouthEventModel("Family Change: parent(s) disappear", function () { });
                                    case 3: return new YouthEventModel("Family Change: parent(s) killed", function () { });
                                    case 4: return new YouthEventModel("Family Change: parent walks out", function () { });
                                    case 5: return new YouthEventModel("Family Change: parents incarcerated", function () { });
                                    case 6: return new YouthEventModel("Family Change: parent(s) sent to front", function () { });
                                }
                            }
                            break;
                        case 14:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: Wulver sibling born", function () { });
                                    case 2: return new YouthEventModel("Family Change: Dogface sibling born", function () { });
                                    case 3: return new YouthEventModel("Family Change: adopted sibling", function () { });
                                    case 4: return new YouthEventModel("Family Change: " + diceRoller_2.DiceRoller.rollSpecial(8, 1).hits + " new Siblings", function () { });
                                    case 5: return new YouthEventModel("Family Change: divorce", function () { });
                                    case 6: return new YouthEventModel("Family Change: moved to new nation", function () { });
                                }
                            }
                            break;
                        case 15:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Succumbed to Galactic propaganda", function () { });
                                    case 2: return new YouthEventModel("Succumbed to toxic nationalism", function () { });
                                    case 3: return new YouthEventModel("Succumbed to despair", function () { });
                                    case 4: return new YouthEventModel("Succumbed to mental illness", function () { });
                                    case 5: return new YouthEventModel("Succumbed to peer pressure", function () { });
                                    case 6: return new YouthEventModel("Succumbed to loneliness", function () { });
                                }
                            }
                            break;
                        case 16:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Social Contacts: Made a friend in opposite social class", function () { });
                                    case 2: return new YouthEventModel("Social Contacts: Gained mentor (" + birthPlaces_1.BirthPlacesHelper.generateBirthPlace(factions_6.Faction.Ariadna, false).name + ")", function () { });
                                    case 3: return new YouthEventModel("Social Contacts: Gained contact (" + birthPlaces_1.BirthPlacesHelper.generateBirthPlace(factions_6.Faction.Ariadna, false).name + ")", function () { });
                                    case 4: return new YouthEventModel("Social Contacts: Galactic contact (" + factions_6.FactionsHelper.getFaction(factions_6.FactionsHelper.generateFaction(false, true)).name + ")", function () { });
                                    case 5: return new YouthEventModel("Social Contacts: Submondo contact", function () { });
                                    case 6: return new YouthEventModel("Social Contacts: Mercenary contact", function () { });
                                }
                            }
                            break;
                        case 17:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Entrusted with an heirloom", function () { });
                                    case 2: return new YouthEventModel("Entrusted with a commendation", function () { });
                                    case 3: return new YouthEventModel("Entrusted with a task", function () { });
                                    case 4: return new YouthEventModel("Entrusted with a legacy", function () { });
                                    case 5: return new YouthEventModel("Entrusted with a secret", function () { });
                                    case 6: return new YouthEventModel("Entrusted with a Cube", function () { });
                                }
                            }
                            break;
                        case 18:
                            {
                                switch (roll) {
                                    case 1:
                                    case 2: return new YouthEventModel("Gained a 1 Asset debt", function () { });
                                    case 3: return new YouthEventModel("Gained a Cube - no strings", function () { });
                                    case 4: return new YouthEventModel("Gained a Cube - strings", function () { });
                                    case 5: return new YouthEventModel("Gained a " + diceRoller_2.DiceRoller.rollSpecial(3, 0).hits + " Asset debt", function () { });
                                    case 6: return new YouthEventModel("Gained a " + diceRoller_2.DiceRoller.rollSpecial(5, 0).hits + " Asset debt", function () { });
                                }
                            }
                            break;
                        case 19:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Learned a Galactic language (" + this.getNewLanguage() + ")", function () { _this.learnLanguage(); });
                                    case 2: return new YouthEventModel("Learned an Ariadnan language (" + this.learnFactionLanguage(factions_6.Faction.Ariadna) + ")", function () { _this.learnLanguage(); });
                                    case 3: return this.blackmailMaterial();
                                    case 4: return this.blackmailAriadnan();
                                    case 5: return this.seriousGeneticIllness();
                                    case 6: return this.vigorPoison(5, 1);
                                }
                            }
                            break;
                        case 20:
                            {
                                var roll1 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                var roll2 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                return new CompositeYouthEventModel(roll1, roll2);
                            }
                    }
                    return null;
                };
                YouthEvents.prototype.getAntipodeEvent = function (type, roll) {
                    var _this = this;
                    switch (type) {
                        case 1:
                        case 2:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Survived an Ariadnan assault", function () { });
                                    case 2: return new YouthEventModel("Survived a wild animal attack", function () { });
                                    case 3: return new YouthEventModel("Survived getting stranded", function () { });
                                    case 4: return new YouthEventModel("Survived a natural disaster", function () { });
                                    case 5: return new YouthEventModel("Survived a border skirmish", function () { });
                                    case 6: return new YouthEventModel("Survived severe drought/famine", function () { });
                                }
                            }
                            break;
                        case 3:
                        case 4:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Survived infighting", function () { });
                                    case 2: return new YouthEventModel("Survived Ariadnan sabotage", function () { });
                                    case 3: return new YouthEventModel("Survived a Warlord coup", function () { });
                                    case 4: return new YouthEventModel("Survived an accident", function () { });
                                    case 5: return new YouthEventModel("Survived an excursion to Ariadna", function () { });
                                    case 6: return new YouthEventModel("Survived Ariadnans fighting galactics", function () { });
                                }
                            }
                            break;
                        case 5:
                        case 6:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed a kidnapping", function () { });
                                    case 2: return new YouthEventModel("Witnessed a murder", function () { });
                                    case 3: return new YouthEventModel("Witnessed broken vows", function () { });
                                    case 4: return new YouthEventModel("Witnessed Mind-Shock", function () { });
                                    case 5: return new YouthEventModel("Witnessed despair", function () { });
                                    case 6: return new YouthEventModel("Witnessed indescribable beauty", function () { });
                                }
                            }
                            break;
                        case 7:
                        case 8:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Witnessed betrayal", function () { });
                                    case 2: return new YouthEventModel("Witnessed bigotry", function () { });
                                    case 3: return new YouthEventModel("Witnessed a Galactic attack", function () { });
                                    case 4: return new YouthEventModel("Witnessed hypocrisy", function () { });
                                    case 5: return new YouthEventModel("Witnessed selfless bravery", function () { });
                                    case 6: return new YouthEventModel("Witnessed heroic sacrifice", function () { });
                                }
                            }
                            break;
                        case 9:
                        case 10:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Involved in a raid", function () { });
                                    case 2: return new YouthEventModel("Involved in an attack", function () { });
                                    case 3: return new YouthEventModel("Involved in keeping a secret", function () { });
                                    case 4: return new YouthEventModel("Involved in spying on Ariadnans", function () { });
                                    case 5: return new YouthEventModel("Involved in religious rites", function () { });
                                    case 6: return new YouthEventModel("Involved in a coup", function () { });
                                }
                            }
                            break;
                        case 11:
                        case 12:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Discovered religion", function () { });
                                    case 2: return new YouthEventModel("Discovered a stray human", function () { });
                                    case 3: return new YouthEventModel("Discovered artistic talent", function () { });
                                    case 4: return new YouthEventModel("Discovered sexual attraction", function () { });
                                    case 5: return new YouthEventModel("Discovered a body", function () { });
                                    case 6: return new YouthEventModel("Discovered archeological ruins", function () { });
                                }
                            }
                            break;
                        case 13:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: parental Trinary dissolves", function () { });
                                    case 2: return new YouthEventModel("Family Change: parental Trinary abandons you", function () { });
                                    case 3: return new YouthEventModel("Family Change: parental Trinary killed", function () { });
                                    case 4: return new YouthEventModel("Family Change: parental Trinary suffers Mind-Shock", function () { });
                                    case 5: return new YouthEventModel("Family Change: parental Trinary kidnapped", function () { });
                                    case 6: return new YouthEventModel("Family Change: parental Trinary goes missing", function () { });
                                }
                            }
                            break;
                        case 14:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Family Change: one parent sires a Dogface", function () { });
                                    case 2: return new YouthEventModel("Family Change: parental Trinary sires new litter", function () { });
                                    case 3: return new YouthEventModel("Family Change: littermate dies", function () { });
                                    case 4: return new YouthEventModel("Family Change: littermate can't form Trinary", function () { });
                                    case 5: return new YouthEventModel("Family Change: littermate kidnapped", function () { });
                                    case 6: return new YouthEventModel("Family Change: littermate returns in Assault Pack", function () { });
                                }
                            }
                            break;
                        case 15:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Succumbed to illness", function () { });
                                    case 2: return new YouthEventModel("Succumbed to savage urges", function () { });
                                    case 3: return new YouthEventModel("Succumbed to despair", function () { });
                                    case 4: return new YouthEventModel("Succumbed to mental illness", function () { });
                                    case 5: return new YouthEventModel("Succumbed to xenophobia", function () { });
                                    case 6: return new YouthEventModel("Succumbed to loneliness", function () { });
                                }
                            }
                            break;
                        case 16:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Your First Trinary: made a friend in Ariadna (" + birthPlaces_1.BirthPlacesHelper.generateBirthPlace(factions_6.Faction.Ariadna, false).name + ")", function () { });
                                    case 2: return new YouthEventModel("Your First Trinary: distinguished itself during a hunt", function () { });
                                    case 3: return new YouthEventModel("Your First Trinary: cannot agree on anything", function () { });
                                    case 4: return new YouthEventModel("Your First Trinary: captured a human", function () { });
                                    case 5: return new YouthEventModel("Your First Trinary: created notable artwork", function () { });
                                    case 6: return new YouthEventModel("Your First Trinary: was barely sapient", function () { });
                                }
                            }
                            break;
                        case 17:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Your First Trinary: was paranoid", function () { });
                                    case 2: return new YouthEventModel("Your First Trinary: longed for adventure", function () { });
                                    case 3: return new YouthEventModel("Your First Trinary: fears change", function () { });
                                    case 4: return new YouthEventModel("Your First Trinary: continues a great legacy", function () { });
                                    case 5: return new YouthEventModel("Your First Trinary: bears a secret memory", function () { });
                                    case 6: return new YouthEventModel("Your First Trinary: rejected you", function () { });
                                }
                            }
                            break;
                        case 18:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Gained 2 Assets", function () { character_7.character.assets += 2; });
                                    case 2: return new YouthEventModel("Gained 1 Asset", function () { character_7.character.assets++; });
                                    case 3:
                                    case 4: return this.vigorPoison(1, 0);
                                    case 5: return new YouthEventModel("You spent some time in the Nomad faction. You have a contact/enemy in that faction and learned a new language (" + this.learnFactionLanguage(factions_6.Faction.Nomads) + ")", function () { _this.learnLanguage(); });
                                    case 6: return new YouthEventModel("You spent some time in the Ariadna faction. You have a contact/enemy in that faction and learned a new language (" + this.learnFactionLanguage(factions_6.Faction.Ariadna) + ")", function () { _this.learnLanguage(); });
                                }
                            }
                            break;
                        case 19:
                            {
                                switch (roll) {
                                    case 1: return new YouthEventModel("Learned an Ariadnan language (" + this.learnFactionLanguage(factions_6.Faction.Ariadna) + ")", function () { _this.learnLanguage(); });
                                    case 2: return new YouthEventModel("Learned a Galactic language (" + this.getNewLanguage() + ")", function () { _this.learnLanguage(); });
                                    case 3: return this.vigorPoison(2, 0);
                                    case 4: return this.blackmailAriadnan();
                                    case 5: return this.seriousGeneticIllness();
                                    case 6: return this.vigorPoison(4, 1);
                                }
                            }
                            break;
                        case 20:
                            {
                                var roll1 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                var roll2 = this.getEvent(Math.floor(Math.random() * 19) + 1, Math.floor(Math.random() * 6) + 1);
                                return new CompositeYouthEventModel(roll1, roll2);
                            }
                    }
                    return null;
                };
                YouthEvents.prototype.changeSocialClass = function () {
                    var event = character_7.character.youthEvent;
                    var s = event.description.indexOf("(") + 1;
                    var e = event.description.indexOf(")");
                    var cls = event.description.substr(s, e - s);
                    var soc = socialClasses_2.SocialClassesHelper.getSocialClassByName(cls);
                    character_7.character.socialClass = soc;
                    var socCls = socialClasses_2.SocialClassesHelper.getSocialClass(soc);
                    character_7.character.earnings = socCls.earnings;
                };
                YouthEvents.prototype.getNewSocialClass = function () {
                    var newSocialClass = socialClasses_2.SocialClassesHelper.generateSocialClass();
                    while (character_7.character.socialClass === newSocialClass) {
                        newSocialClass = socialClasses_2.SocialClassesHelper.generateSocialClass();
                    }
                    return newSocialClass;
                };
                YouthEvents.prototype.defect = function () {
                    var event = character_7.character.youthEvent;
                    var start = event.description.indexOf("(") + 1;
                    var end = event.description.indexOf(")");
                    var fac = event.description.substring(start, end);
                    var faction = factions_6.FactionsHelper.getFactionByName(fac);
                    character_7.character.heritage = character_7.character.faction;
                    character_7.character.faction = faction;
                };
                YouthEvents.prototype.getNewFaction = function () {
                    var newFaction = character_7.character.faction;
                    while (character_7.character.faction === newFaction) {
                        newFaction = factions_6.FactionsHelper.generateFaction(false, true);
                    }
                    return newFaction;
                };
                YouthEvents.prototype.learnLanguage = function () {
                    var e = character_7.character.youthEvent;
                    var start = e.description.indexOf("(") + 1;
                    var end = e.description.indexOf(")");
                    var lang = e.description.substr(start, end - start);
                    character_7.character.addLanguage(lang);
                };
                YouthEvents.prototype.learnFactionLanguage = function (faction) {
                    return birthPlaces_1.BirthPlacesHelper.generateSecondaryLanguage(faction);
                };
                YouthEvents.prototype.getNewLanguage = function () {
                    var newLanguage = birthPlaces_1.BirthPlacesHelper.generateRandomLanguage(character_7.character.faction, true, true);
                    while (character_7.character.hasLanguage(newLanguage[0])) {
                        newLanguage = birthPlaces_1.BirthPlacesHelper.generateRandomLanguage(character_7.character.faction, true, true);
                    }
                    return newLanguage[0];
                };
                YouthEvents.prototype.blackmailMaterial = function () {
                    var faction1 = factions_6.FactionsHelper.generateFaction(false, true);
                    var faction2 = factions_6.FactionsHelper.generateFaction(false, true);
                    while (faction2 === faction1) {
                        faction2 = factions_6.FactionsHelper.generateFaction(false, true);
                    }
                    var faction1Name = factions_6.FactionsHelper.getFaction(faction1).name;
                    var faction2Name = factions_6.FactionsHelper.getFaction(faction2).name;
                    return new YouthEventModel("Gained Blackmail Material: You have been given proof that the " + faction1Name + " faction has committed misdeeds against the " + faction2Name + " faction. Either party will grant a favour for the evidence.", function () { });
                };
                YouthEvents.prototype.blackmailAriadnan = function () {
                    var faction1 = birthPlaces_1.BirthPlacesHelper.generateBirthPlace(factions_6.Faction.Ariadna, false);
                    var faction2 = factions_6.FactionsHelper.generateFaction(false, true);
                    return new YouthEventModel("Gained Blackmail Material: You have been given proof that a party from " + faction1.name + " has committed misdeeds against the " + factions_6.FactionsHelper.getFaction(faction2).name + " faction. Either party will grant a favour for the evidence.", function () { });
                };
                YouthEvents.prototype.seriousGeneticIllness = function () {
                    var cost = diceRoller_2.DiceRoller.rollSpecial(5, 5);
                    var numAttributesToDecrease = 1 + cost.special;
                    return new YouthEventModel("Serious Genetic Illness: You suffer from some form of serious genetic illness. Reduce " + numAttributesToDecrease + " attributes of your choice by one point. A cure may be possible, but it will cost " + cost.hits + " Assets.", function () { });
                };
                YouthEvents.prototype.vigorPoison = function (dice, bonus) {
                    var _this = this;
                    var cost = diceRoller_2.DiceRoller.rollSpecial(4, 4);
                    return new YouthEventModel("You were badly poisoned. You gain Fatigued. A cure exists, but it costs " + cost.hits + " Assets.", function () { _this.applyVigorPoison(dice, bonus); });
                };
                YouthEvents.prototype.applyVigorPoison = function (dice, bonus) {
                    var reduction = diceRoller_2.DiceRoller.rollSpecial(dice, bonus);
                    var vigorReduction = Math.max(0, 6 - reduction.hits);
                    character_7.character.vigourReduction -= vigorReduction;
                    character_7.character.resolveReduction += reduction.special;
                };
                return YouthEvents;
            }());
            exports_12("YouthEvents", YouthEvents);
            exports_12("YouthEventsHelper", YouthEventsHelper = new YouthEvents());
        }
    }
});
System.register("helpers/careerEvents", ["common/character", "common/eventModel", "helpers/factions", "helpers/careers", "helpers/attributes", "helpers/birthPlaces", "helpers/alienHosts", "helpers/diceRoller", "helpers/sources"], function(exports_13, context_13) {
    "use strict";
    var __moduleName = context_13 && context_13.id;
    var character_8, eventModel_2, factions_7, careers_2, attributes_5, birthPlaces_2, alienHosts_6, diceRoller_3, sources_6;
    var CareerEventModel, CareerEvents, CareerEventsHelper;
    return {
        setters:[
            function (character_8_1) {
                character_8 = character_8_1;
            },
            function (eventModel_2_1) {
                eventModel_2 = eventModel_2_1;
            },
            function (factions_7_1) {
                factions_7 = factions_7_1;
            },
            function (careers_2_1) {
                careers_2 = careers_2_1;
            },
            function (attributes_5_1) {
                attributes_5 = attributes_5_1;
            },
            function (birthPlaces_2_1) {
                birthPlaces_2 = birthPlaces_2_1;
            },
            function (alienHosts_6_1) {
                alienHosts_6 = alienHosts_6_1;
            },
            function (diceRoller_3_1) {
                diceRoller_3 = diceRoller_3_1;
            },
            function (sources_6_1) {
                sources_6 = sources_6_1;
            }],
        execute: function() {
            CareerEventModel = (function (_super) {
                __extends(CareerEventModel, _super);
                function CareerEventModel(base, onApply) {
                    _super.call(this, base.event, base.trait, base.effect, base.detailView);
                    this.onApply = onApply;
                }
                return CareerEventModel;
            }(eventModel_2.EventModel));
            exports_13("CareerEventModel", CareerEventModel);
            CareerEvents = (function () {
                function CareerEvents() {
                }
                CareerEvents.prototype.generateEvent = function () {
                    var event = null;
                    var table = Math.floor(Math.random() * 6) + 1;
                    var ev = Math.floor(Math.random() * 19) + 1;
                    if (character_8.character.host === alienHosts_6.AlienHost.Antipode && character_8.character.faction === factions_7.Faction.Ariadna && character_8.character.hasSource(sources_6.Source.Ariadna)) {
                        event = this.rollOnAntipodeTable(ev, character_8.character.isUnemployed());
                        event.table = "Antipode";
                        event.eventNumber = ev;
                        return event;
                    }
                    if (character_8.character.faction === factions_7.Faction.Ariadna && character_8.character.hasSource(sources_6.Source.Ariadna)) {
                        switch (table) {
                            case 1:
                            case 2:
                            case 3:
                                if (character_8.character.isDogBlooded()) {
                                    event = this.rollOnDogfaceAndWulverTable(ev, character_8.character.isUnemployed());
                                    event.table = "Dog-Blooded";
                                    event.eventNumber = ev;
                                }
                                else {
                                    event = this.rollOnAriadnaTable(ev, character_8.character.isUnemployed());
                                    event.table = "Ariadna";
                                    event.eventNumber = ev;
                                }
                                break;
                            case 4:
                                event = this.rollOnTableA(ev, character_8.character.isUnemployed());
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev, character_8.character.isUnemployed());
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev, character_8.character.isUnemployed());
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else if (character_8.character.faction === factions_7.Faction.Haqqislam && character_8.character.hasSource(sources_6.Source.Haqqislam)) {
                        switch (table) {
                            case 1:
                            case 2:
                            case 3:
                                event = this.rollOnHaqqislamTable(ev, character_8.character.isUnemployed());
                                event.table = "Haqqislam";
                                event.eventNumber = ev;
                                break;
                            case 4:
                                event = this.rollOnTableA(ev, character_8.character.isUnemployed());
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev, character_8.character.isUnemployed());
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev, character_8.character.isUnemployed());
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else if (character_8.character.faction === factions_7.Faction.PanOceania && character_8.character.hasSource(sources_6.Source.PanOceania)) {
                        switch (table) {
                            case 1:
                            case 2:
                            case 3:
                                event = this.rollOnPanOceaniaTable(ev, character_8.character.isUnemployed());
                                event.table = "PanOceania";
                                event.eventNumber = ev;
                                break;
                            case 4:
                                event = this.rollOnTableA(ev, character_8.character.isUnemployed());
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev, character_8.character.isUnemployed());
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev, character_8.character.isUnemployed());
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else {
                        switch (table) {
                            case 1:
                            case 2:
                                event = this.rollOnTableA(ev, character_8.character.isUnemployed());
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 3:
                            case 4:
                                event = this.rollOnTableB(ev, character_8.character.isUnemployed());
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 5:
                            case 6:
                                event = this.rollOnTableC(ev, character_8.character.isUnemployed());
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    return event;
                };
                CareerEvents.prototype.getEvents = function () {
                    var events = {};
                    if (character_8.character.host === alienHosts_6.AlienHost.Antipode && character_8.character.hasSource(sources_6.Source.Ariadna)) {
                        events["Antipode"] = [];
                        for (var i = 1; i < 20; i++) {
                            var ev = this.rollOnAntipodeTable(i, character_8.character.isUnemployed());
                            ev.table = "Antipode";
                            events["Antipode"].push(ev);
                        }
                    }
                    else if (character_8.character.faction === factions_7.Faction.Ariadna && character_8.character.hasSource(sources_6.Source.Ariadna)) {
                        if (character_8.character.isDogBlooded()) {
                            events["Dog-Blooded"] = [];
                            for (var i = 1; i < 20; i++) {
                                var ev = this.rollOnDogfaceAndWulverTable(i, character_8.character.isUnemployed());
                                ev.table = "Dog-Blooded";
                                events["Dog-Blooded"].push(ev);
                            }
                        }
                        else {
                            events["Ariadna"] = [];
                            for (var i = 1; i < 20; i++) {
                                var ev = this.rollOnAriadnaTable(i, character_8.character.isUnemployed());
                                ev.table = "Ariadna";
                                events["Ariadna"].push(ev);
                            }
                        }
                    }
                    else if (character_8.character.faction === factions_7.Faction.Haqqislam && character_8.character.hasSource(sources_6.Source.Haqqislam)) {
                        events["Haqqislam"] = [];
                        for (var i = 1; i < 20; i++) {
                            var ev = this.rollOnHaqqislamTable(i, character_8.character.isUnemployed());
                            ev.table = "Haqqislam";
                            events["Haqqislam"].push(ev);
                        }
                    }
                    events["A"] = [];
                    events["B"] = [];
                    events["C"] = [];
                    for (var i = 1; i < 20; i++) {
                        var ev = this.rollOnTableA(i, character_8.character.isUnemployed());
                        ev.table = "A";
                        events["A"].push(ev);
                    }
                    for (var i = 1; i < 20; i++) {
                        var ev = this.rollOnTableB(i, character_8.character.isUnemployed());
                        ev.table = "B";
                        events["B"].push(ev);
                    }
                    for (var i = 1; i < 20; i++) {
                        var ev = this.rollOnTableC(i, character_8.character.isUnemployed());
                        ev.table = "C";
                        events["C"].push(ev);
                    }
                    return events;
                };
                CareerEvents.prototype.rollOnTableA = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1: {
                            var cost = 10 + diceRoller_3.DiceRoller.rollSpecial(5, 0).hits;
                            return new CareerEventModel(new eventModel_2.EventModel("You develop a rare genetic disorder or are afflicted by a genomic toxin. Your genetic order reduces your maximum Vigour by 1. The treatment required to cure your condition will cost " + cost + " assets.", "", "You develop a rare genetic disorder or are afflicted by a genomic toxin. Your genetic order reduces your maximum Vigour by 1. The treatment required to cure your condition will cost " + cost + " assets."), function () {
                                character_8.character.vigourReduction++;
                            });
                        }
                        case 2:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("Both the authorities and organised crime are hunting for you. What do you know, or what have you got that they want? know, or what have you got that they want? Gain both a criminal enemy and a police enemy. You must pass an Average(D1) hazard test for your current career or you are Fired.", "", "Both the authorities and organised crime are hunting for you. What do you know, or what have you got that they want? know, or what have you got that they want? You have a criminal enemy and a police enemy.", "HazardTestOrFired"));
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("You are on the run. Who is after you, and why?", "Hunted", "You are on the run. Who is after you, and why?"));
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("You’ve accrued the enmity of a powerful enemy. They might be a district authority, well-connected ex-lover, or a jealous colleague.", "Persecuted", "You’ve accrued the enmity of a powerful enemy. They might be a district authority, well-connected ex-lover, or a jealous colleague."));
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("An old debt has caught up with you. Who is it to, and what will happen if you do not pay? Gain a conflict with an organization. You have a 20 asset debt that must be paid off with that organisation. Once it is paid, the conflict is removed. This debt does not prevent you from using earnings to make purchases.", "Conflict with an Organization", "An old debt has caught up with you. Who is it to, and what will happen if you do not pay? You have a conflict with an organization. You have a 20 asset debt that must be paid off with that organisation. Once it is paid, the conflict is removed. This debt does not prevent you from using earnings to make purchases."));
                        case 6:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You’re involved in a serious crime. Guilty or not, you are sentenced to hard labour and lose your job. Add 1-6 years to your age. You are Fired and gain a Criminal Record.", "", "You’re involved in a serious crime. Guilty or not, you are sentenced to hard labour and lose your job. You are Fired and gain a Criminal Record.", "CriminalRecord|Fired"), function () {
                                character_8.character.age += Math.floor(Math.random() * 6) + 1;
                                character_8.character.hasCriminalRecord = true;
                            });
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You develop a fierce rivalry with someone in your organisation or faction. Gain a character trait describing your rivalry or its consequences.", "Fierce Rivalry", "You develop a fierce rivalry with someone in your organisation or faction. Gain a character trait describing your rivalry or its consequences."));
                        case 8:
                            {
                                var faction = factions_7.FactionsHelper.generateFaction(false, true);
                                var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                                return new CareerEventModel(new eventModel_2.EventModel("You have an affair with someone wealthy, but it ends poorly. Was it your fault? Gain an enemy in the " + factionName + " faction.", "Wealthy Ex-Lover", "You have an affair with someone wealthy, but it ends poorly. Was it your fault? You have an enemy in the " + factionName + " faction."));
                            }
                        case 9:
                            {
                                var faction = factions_7.FactionsHelper.generateFaction(false, true);
                                var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                                var debt = Math.floor(Math.random() * 6) + 1;
                                return new CareerEventModel(new eventModel_2.EventModel("You are called in for questioning by the authorities. What do they want to know? They let you go, but on what condition? Gain a debt worth " + debt + " assets to the " + factionName + " faction.", "", "You are called in for questioning by the authorities. What do they want to know? They let you go, but on what condition? You have a debt worth " + debt + " assets to the " + factionName + " faction."));
                            }
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("You gain a criminal record. What happened? Are you guilty or innocent?", "", "You gain a criminal record. What happened? Are you guilty or innocent?", "CriminalRecord"), function () {
                                character_8.character.hasCriminalRecord = true;
                            });
                        case 11: {
                            var location = diceRoller_3.DiceRoller.rollHitLocation();
                            return new CareerEventModel(new eventModel_2.EventModel("You are injured in a shooting accident. What were you doing? Who shot you? You have a gunshot wound that has not healed well in your " + location + ".", "Old Wound", "You are injured in a shooting accident. What were you doing? Who shot you? You have a gunshot wound that has not healed well in your " + location + "."));
                        }
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("Someone has been keeping an eye on you. They always seem to be there when you look around. What do you think they are interested in? Who are they?", "Under Surveillance", "Someone has been keeping an eye on you. They always seem to be there when you look around. What do you think they are interested in? Who are they?"));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("You become tangled up in a plot being run by a rival faction. What do you do for them? Why do you do it? You must pass a Challenging (D2) hazard test for your current career or you gain a Criminal Record.", "", "You become tangled up in a plot being run by a rival faction. What do you do for them? Why do you do it?", "HazardTestOrCriminalRecord"));
                        case 14:
                            return new CareerEventModel(new eventModel_2.EventModel("They are on to you! Who are they and what have you done?", "Paranoia", "They are on to you! Who are they and what have you done?"));
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("Someone you know is a criminal, but you cannot turn him or her in. What hold do they have over you?", "Blackmailed", "Someone you know is a criminal, but you cannot turn him or her in. What hold do they have over you?"));
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("Whatever you did, and it was bad, you’ve paid for it now — but they will not give up. Gain a character trait describing your nemesis.", "Nemesis", "Whatever you did, and it was bad, you’ve paid for it now — but they will not give up."));
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You volunteered to take part in a secret medical experiment which succeeded. Well, almost. You may roll an aging test to regain an Infinity Point once per session.", "Curse of the Mayfly", "You volunteered to take part in a secret medical experiment which succeeded. Well, almost. You may roll an aging test to regain an Infinity Point once per session."));
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are Fired. What did you do?", "", "You are Fired. What did you do?", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("While doing your job, you are killed. What happened? Your character died and was resurrected.", "", "While doing your job, you are killed. What happened? Your character died and was resurrected.", "Resurrection"), function () {
                                character_8.character.applyDeath();
                            });
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You are suffering from the Chinese Curse: May you live in interesting times! You gain three career events for this career phase.", "", "", "ChineseCurse"));
                    }
                    return null;
                };
                CareerEvents.prototype.rollOnTableB = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("You are dating a wealthy and generous person. Increase Earnings Rating by one (to a maximum of six) whilst they are still in love with you, but they are very demanding or vulnerable.", "Vulnerable Lover", "You are dating a wealthy and generous person. Increase Earnings Rating by one (to a maximum of six) whilst they are still in love with you, but they are very demanding or vulnerable."), function () {
                                character_8.character.earnings = Math.min(character_8.character.earnings + 1, 6);
                            });
                        case 2:
                            return new CareerEventModel(new eventModel_2.EventModel("You are forced to evacuate. What is the threat? Where do you have to go? Immediately spend 5 assets or gain the trait Homeless.", "", "You are forced to evacuate. What is the threat? Where do you have to go?", "Homeless"));
                        case 3: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            while (faction === character_8.character.faction) {
                                faction = factions_7.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You foil some form of nefarious plot on your own (or with the help of your friends). Why didn’t you go to the authorities? Gain an enemy in the " + factionName + " faction. Gain 5 assets in ‘liberated’ equipment.", "", "You foil some form of nefarious plot on your own (or with the help of your friends). Why didn’t you go to the authorities? Gain an enemy in the " + factionName + " faction."), function () {
                                character_8.character.addEquipment("5 assets worth of liberated equipment from the " + factionName + " faction.");
                            });
                        }
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a serious natural disaster.", "Nightmares", "You survive a serious natural disaster."));
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("You are remembered in the will of a relative. Who died? What were your feelings for them? Gain 2 Assets.", "", "You are remembered in the will of a relative. Who died? What were your feelings for them?"), function () {
                                character_8.character.assets += 2;
                            });
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("You help solve a serious crime. Gain a favour with a senior figure in either law enforcement or the intelligence community in your faction.", "", "You help solve a serious crime. You have earned a favour from a senior figure in either law enforcement or the intelligence community in your faction."));
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You discover that you have a talent for something you’d never considered trying before. What happened? Why do you love it? Gain 1 rank of training in a skill you currently have no training in.", "", "You discover that you have a talent for something you’d never considered trying before. What happened? Why do you love it?", "IncreaseUntrained"));
                        case 8:
                            return new CareerEventModel(new eventModel_2.EventModel("You are scouted by an unexpected employer. If you hazard your next career, reduce the difficulty of the hazard test by two steps. If you stay in your current career or roll randomly, increase your Earnings Rating by one.", "", "You are scouted by an unexpected employer."), function () {
                                character_8.character.hazardDecrease = 2;
                            });
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You discover that your friend is a traitor working for a rival faction. The authorities request your help in arresting them. If you cooperate with the authorities, gain 5 assets as a reward. If you help your friend, you gain a contact in a random faction but you must make an Average (D1) hazard test in your current career or gain a Criminal Record.", "", "You discover that your friend is a traitor working for a rival faction. The authorities request your help in arresting them.", "HelpFriend"));
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("You stumbled on a previously unknown alien ruin (possibly while on vacation). You found something before you got out. What was it? Gain an item worth 10 Assets.", "", "You stumbled on a previously unknown alien ruin (possibly while on vacation). You found something before you got out. What was it?"), function () {
                                character_8.character.assets += 10;
                            });
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("Your lucky day! Something paid off — a lottery ticket, a risky business venture, or a hard won contract. Gain 5 Assets.", "", "Your lucky day! Something paid off — a lottery ticket, a risky business venture, or a hard won contract."), function () {
                                character_8.character.assets += 5;
                            });
                        case 12: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You save someone from a terrible accident. Gain an ally in the " + factionName + " faction.", "", "You save someone from a terrible accident. You have an ally in the " + factionName + " faction."));
                        }
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("You achieve notoriety or fame as a minor Maya star. You gain 1 bonus Momentum on successful Social tests, but all Stealth tests are increased in difficulty by one step in situations where being recognised would cause you a problem.", "", "You achieve notoriety or fame as a minor Maya star. You gain 1 bonus Momentum on successful Social tests, but all Stealth tests are increased in difficulty by one step in situations where being recognised would cause you a problem."));
                        case 14:
                            return new CareerEventModel(new eventModel_2.EventModel("Your Cube experiences a malfunction in which its input is fed back into your brain. You’ll need a completely new Cube to solve the problem.", "Cube Echoes", "Your Cube experiences a malfunction in which its input is fed back into your brain. You’ll need a completely new Cube to solve the problem."));
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("A pseudo-AI personality you’ve had since childhood begins to degrade, but you can’t bear to part with it. The pseudo-AI provides one momentum to Education tests, but the GM can use it as a trait when purchasing complications that are related to the outcome of the test.", "Pseudo-AI", "A pseudo-AI personality you’ve had since childhood begins to degrade, but you can’t bear to part with it. The pseudo-AI provides one momentum to Education tests, but the GM can use it as a trait when purchasing complications that are related to the outcome of the test."));
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("You join a new religion. What prompted your conversion? What article of faith is most important to you in your new belief? Gain a character trait describing your religion or religious experience.", "New Religion", "You join a new religion. What prompted your conversion? What article of faith is most important to you in your new belief? Gain a character trait describing your religion or religious experience."));
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You volunteered to take part in a secret medical experiment that succeeded. Well, almost. Gain a talent in a talent tree of your choice and describe how you can do this as a result of the experiment. However, sometimes you lose the plot or wake up in strange places.", "Experimental Subject", "You volunteered to take part in a secret medical experiment that succeeded. Well, almost. Gain a talent in a talent tree of your choice and describe how you can do this as a result of the experiment. However, sometimes you lose the plot or wake up in strange places.", "SelectTalent"));
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("A co-worker frames you for something they did. You are Fired.", "", "A co-worker frames you for something they did. You are Fired.", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("You are violently killed. What happened? Who killed you? Your character died and was resurrected.", "", " You are violently killed. What happened? Who killed you? Your character died and was resurrected.", "Resurrection"), function () {
                                character_8.character.applyDeath();
                            });
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You are suffering from the Chinese Curse: May you live in interesting times! You gain three career events for this career phase.", "", "", "ChineseCurse"));
                    }
                    return null;
                };
                CareerEvents.prototype.rollOnTableC = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("A family member tells you a dark family secret. What has been hidden from you for all these years? Gain a character trait related to your family’s secret.", "Family Secret", "A family member tells you a dark family secret. What has been hidden from you for all these years? Gain a character trait related to your family’s secret."));
                        case 2:
                            return new CareerEventModel(new eventModel_2.EventModel("You receive exotic cosmetic surgery. What do you look like now? Do you have tapered ears? Lizard scales? A prehensile tail? Gain a character trait describing your new look. And 3 Assets worth of cosmetic biomodifications.", "Exotic Cosmetic Surgery", "You receive exotic cosmetic surgery. What do you look like now? Do you have tapered ears? Lizard scales? A prehensile tail? Gain a character trait describing your new look."), function () {
                                character_8.character.equipment.push("3 Assets worth of cosmetic biomodifications");
                            });
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("The building you call home burns down. You lose 5 Assets.", "Homeless", "The building you call home burns down."), function () {
                                character_8.character.assets = Math.max(character_8.character.assets - 5, 0);
                            });
                        case 4:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("Your employer hits a slump and is struggling to make ends meet. You can either agree to a pay cut (reduce your Earnings Rating by 1) or you can choose to make a Challenging (D2) hazard test for your current career. If you fail the test, you are Fired. But if you succeed, your Earnings Rating is unchanged as you swap to a new employer.", "", "Your employer hits a slump and is struggling to make ends meet.", "HazardTestOrReduceEarnings"));
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("You’re betrayed by someone you trust. Who was it? What did they do to you?", "Untrusting", "You’re betrayed by someone you trust. Who was it? What did they do to you?"));
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("You have survived a Combined Army attack. Where were you? What form did the attack take?", "Shell Shocked", "You have survived a Combined Army attack. Where were you? What form did the attack take?"));
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You get enrolled in an advanced training program at your job (possibly experimental or cybernetic in nature). Gain 1 rank in the elective skill from your current career that you did NOT choose to advance during this career phase.", "", "You get enrolled in an advanced training program at your job (possibly experimental or cybernetic in nature).", "IncreaseSkippedElective"));
                        case 8: {
                            var faction = factions_7.FactionsHelper.generateFaction(true, true);
                            var planet = birthPlaces_2.BirthPlacesHelper.generateBirthPlace(faction);
                            while (planet.name === character_8.character.birthPlace) {
                                faction = factions_7.FactionsHelper.generateFaction(true, true);
                                planet = birthPlaces_2.BirthPlacesHelper.generateBirthPlace(faction);
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are recruited or selected to travel to " + planet.name + " in order to continue your career.", "Mudhopper", "You are recruited or selected to travel to " + planet.name + " in order to continue your career."));
                        }
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("A family member is in desperate financial need and they come to you for help. How bad is it and how did they get into this situation? Gain a debt worth 10 Assets.", "Disowned", "A family member is in desperate financial need and they come to you for help. How bad is it and how did they get into this situation? You have a debt worth 10 Assets."));
                        case 10: {
                            var languages_1 = [];
                            var num = Math.floor(Math.random() * 6) + 1;
                            for (var i = 0; i < num; i++) {
                                var lang = birthPlaces_2.BirthPlacesHelper.generateRandomLanguage(character_8.character.faction, true, true)[0];
                                if (character_8.character.languages.indexOf(lang) > -1) {
                                    i--;
                                    continue;
                                }
                                else {
                                    languages_1.push(lang);
                                }
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are sent out into the field as a roving specialist (either in person or through immersive VR). Where do you go? What do you experience? Gain " + num + " languages.", "", "You are sent out into the field as a roving specialist (either in person or through immersive VR). Where do you go? What do you experience?"), function () {
                                languages_1.forEach(function (lang) {
                                    character_8.character.addLanguage(lang);
                                });
                            });
                        }
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("A family member is murdered. Who was killed? Do you know who did it? And, if so, why?", "Thirst for Vengeance", "A family member is murdered. Who was killed? Do you know who did it? And, if so, why?"));
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You are one of the only survivors when a ship you were travelling on broke down or crashed, and rescue was a long time coming. Add one year to your age.", "Space Sickness", "You are one of the only survivors when a ship you were travelling on broke down or crashed, and rescue was a long time coming."), function () {
                                character_8.character.age++;
                            });
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("You earn a big promotion. Increase Earnings Rating by one.", "", "You earn a big promotion."), function () {
                                character_8.character.earnings++;
                            });
                        case 14: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("Your childhood friend moves back home. It’s great to see them again, but they’re acting strangely. Gain an ally from the " + factionName + " faction.", "", "Your childhood friend moves back home. It’s great to see them again, but they’re acting strangely. You have gained an ally from the " + factionName + " faction."));
                        }
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("You thought that you’d gotten away with the crime you committed ten years ago, but new evidence has been discovered. Gain a Criminal Record.", "", "You thought that you’d gotten away with the crime you committed ten years ago, but new evidence has been discovered. You gain a Criminal Record.", "CriminalRecord"));
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("Due to what’s claimed to be a clerical error, your stored personality back-up is placed in a Lhost. Your IQ-doppelganger disappears before the error can be corrected.", "IQ-Doppleganger", "Due to what’s claimed to be a clerical error, your stored personality back-up is placed in a Lhost. Your IQ-doppelganger disappears before the error can be corrected."));
                        case 17: {
                            var attribute_1 = Math.floor(Math.random() * character_8.character.attributes.length) + 1;
                            var attr = attributes_5.Attribute[attribute_1];
                            return new CareerEventModel(new eventModel_2.EventModel("You volunteered to take part in a secret medical experiment. It failed. Reduce " + attr + " by 1 point.", "", "You volunteered to take part in a secret medical experiment. It failed."), function () {
                                character_8.character.attributes[attribute_1].value--;
                            });
                        }
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You show up for work one day and your employer is gone. The office is empty. Nobody is there. What happened? You are Fired.", "Surrounded by Conspiracy", "You show up for work one day and your employer is gone. The office is empty. Nobody is there. What happened? You are Fired.", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("Your death is a famous event. How did it happen? Why is it so well known? Your character died and was resurrected. You gain 1 bonus Momentum on successful Social tests, but all Stealth tests are increased in difficulty by one step in situations where being recognised would cause you a problem.", "", "Your death is a famous event. How did it happen? Why is it so well known? Your character died and was resurrected. You gain 1 bonus Momentum on successful Social tests, but all Stealth tests are increased in difficulty by one step in situations where being recognised would cause you a problem.", "Resurrection"), function () {
                                character_8.character.applyDeath();
                            });
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You are suffering from the Chinese Curse: May you live in interesting times! You gain three career events for this career phase.", "", "", "ChineseCurse"));
                    }
                    return null;
                };
                CareerEvents.prototype.rollOnAriadnaTable = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("Your work carries you to a different Ariadnan nation. Why did that go as well — or as poorly — as it did? Choose a different homeland.", "A Different Home", "Your work carries you to a different Ariadnan nation. Why did that go as well — or as poorly — as it did?", "SelectHomeland"));
                        case 2:
                            return new CareerEventModel(new eventModel_2.EventModel("Bureau Toth brings you in for questioning. What do they want to know? They let you go, but under what condition?", "On the Watchlist", "Bureau Toth brings you in for questioning. What do they want to know? They let you go, but under what condition?"));
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("An Antipode attack demolishes your place of business, leaving it in shambles. You may not repeat or extend this career unless you lose 1 Earnings.", "Harried", "An Antipode attack demolishes your place of business, leaving it in shambles.", "PayToContinue"));
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("When everything went to hell, through sheer stubbornness, you somehow kept it together.", "Ariadnan Grit", "When everything went to hell, through sheer stubbornness, you somehow kept it together."));
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("While out hiking, you stumble on to some interesting ruins.", "Amateur Archaeologist", "While out hiking, you stumble on to some interesting ruins."));
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("Your employer is incredibly enthusiastic for an offworld technological solution. How does it end in disaster? And why does it leave you suspicious of advanced technology?", "Luddite", "Your employer is incredibly enthusiastic for an offworld technological solution. How does it end in disaster? And why does it leave you suspicious of advanced technology?"));
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You are the 'lucky winner' of a transfer to the front line.", "Unwanted Draft", "You are the 'lucky winner' of a transfer to the front line."));
                        case 8: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName_1 = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You save a tourist from a horrible fate. Gain an ally in the " + factionName_1 + " faction.", "", "You save a tourist from a horrible fate. Gain an ally in the " + factionName_1 + " faction."));
                        }
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You find yourself caught in between a Dog Nation protest, and police forces. Why do people think you put the protesters 'in their place'? And what did you actually mean to do? Your new reputation precedes you; gain an additional point of momentum on Leadership tests.", "Wolfsbane", "You find yourself caught in between a Dog Nation protest, and police forces. Why do people think you put the protesters 'in their place'? And what did you actually mean to do? Your new reputation precedes you; gain an additional point of momentum on Leadership tests."));
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("You agree to let some Nomad 'friends' Install a Cube for you  This goes shockingly well.", "", "You agree to let some Nomad 'friends' Install a Cube for you  This goes shockingly well."));
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("You agree to let some Nomad 'friends' Install a Cube for you Unsurprisingly, this ends poorly. All Infowar attacks deal you an extra 1[CD] damage.", "", "You agree to let some Nomad 'friends' Install a Cube for you Unsurprisingly, this ends poorly. All Infowar attacks deal you an extra 1[CD] damage."));
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You grow close to a Dog-Bowl player. What's the nature of your relationship?", "Dog-Blooded Relation", "You grow close to a Dog-Bowl player. What's the nature of your relationship?"));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("Somehow, you find yourself in a duel. What brought this on? And what did it cost to succeed?", "Duelling Scars", "Somehow, you find yourself in a duel. What brought this on? And what did it cost to succeed?"));
                        case 14: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            if (faction === factions_7.Faction.Ariadna) {
                                var birthplace = birthPlaces_2.BirthPlacesHelper.generateBirthPlace(faction);
                                var homeland = birthPlaces_2.BirthPlacesHelper.generateHomeland(birthplace.name);
                                if (homeland) {
                                    factionName += " (" + homeland.name + ")";
                                }
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("Someone you were close to (" + factionName + ") dies in an attack. Who was behind it? And what do you plan to do about it?", "Lost Friend", "Someone you were close to (" + factionName + ") dies in an attack. Who was behind it? And what do you plan to do about it?"));
                        }
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("You foiled an act of Galactic sabotage. Increase your Earnings by one for your act of balance sheet-friendly heroism.", "Patriotism", "You foiled an act of Galactic sabotage."), function () { character_8.character.earnings++; });
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("A disaster occurs; you grit your teeth and keep going. You gain one Life Point.", "True Grit", "A disaster occurs; you grit your teeth and keep going."), function () { character_8.character.lifePoints++; });
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You are scouted by an unlikely employer. You may hazard your next career, even if you don’t meet the Faction or Homeland prerequisite.", "", "You are scouted by an unlikely employer."), function () { character_8.character.ignoreHazardRequirements = true; });
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are fired. What did you do, and why was it worth it?", "Fired Relief", "You are fired. What did you do, and why was it worth it?", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("You were killed, fighting for offworld employers. At least, that's the official story — only you know what really happened.", "Officially Dead", "You were killed, fighting for offworld employers. At least, that's the official story — only you know what really happened.", "Resurrection"));
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You’ve got the Devil’s Own Luck. Interesting Times ahead. You gain three career events for this career phase.", "", "", "ChineseCurse"));
                    }
                };
                CareerEvents.prototype.rollOnAntipodeTable = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("Your Trinary link is violently severed. While in Mind-Shock, you’re taken in by a group of humans who nurse you back to health, though their reasons are hardly benevolent. You must take Assault Pack Member as your next career.", "", "Your Trinary link is violently severed. While in Mind-Shock, you’re taken in by a group of humans who nurse you back to health, though their reasons are hardly benevolent."), function () { character_8.character.firstCareer = careers_2.Career.AssaultPackMember; });
                        case 2: {
                            var location = diceRoller_3.DiceRoller.rollHitLocation();
                            return new CareerEventModel(new eventModel_2.EventModel("You are injured in a shooting accident. What were you doing? Who shot you? You have a gunshot wound that has not healed well in your " + location + ".", "Old Wound", "You are injured in a shooting accident. What were you doing? Who shot you? You have a gunshot wound that has not healed well in your " + location + "."));
                        }
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("You’ve been singled out as a problem by a group intent on solving you.", "Priority Target", "You’ve been singled out as a problem by a group intent on solving you."));
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("A Rodinan strike force deploys makeshift biological weapons at you. You survive, but it’s difficult to think straight. Reduce your Intelligence by 1.", "", "A Rodinan strike force deploys makeshift biological weapons at you. You survive, but it’s difficult to think straight."), function () { character_8.character.attributes[attributes_5.Attribute.Intelligence].value--; });
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("A USAriadnan strike force shells your den. You make it out alive, but your hearing is permanently damaged. Increase the difficulty of all Observation tests based on hearing by +1.", "", "A USAriadnan strike force shells your den. You make it out alive, but your hearing is permanently damaged. Increase the difficulty of all Observation tests based on hearing by +1."));
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("A Merovingian strike force attacks with experimental tranquilizers. You survive, but you’re still a little drowsy. Increase the difficulty of Surprise tests by +1.", "Sleepy", "A Merovingian strike force attacks with experimental tranquilizers. You survive, but you’re still a little drowsy. Increase the difficulty of Surprise tests by +1."));
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("A Caledonian strike force attacks; it’s a bloody mess.", "Scarred", "A Caledonian strike force attacks; it’s a bloody mess."));
                        case 8:
                            return new CareerEventModel(new eventModel_2.EventModel("You accidentally save a tourist from a horrible fate. Little did you know, they were Mayacasting at the time.", "Entirely Misunderstood", "You accidentally save a tourist from a horrible fate. Little did you know, they were Mayacasting at the time."));
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You encounter another tribe’s shaman, and something just clicks. Do you convert? And what article of faith spoke to you?", "Religious/Spiritual Experience", "You encounter another tribe’s shaman, and something just clicks. Do you convert? And what article of faith spoke to you?"));
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("Outside of your Trinary, no one knows what you did. What did you do?", "Paranoid", "Outside of your Trinary, no one knows what you did. What did you do?"));
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("You encounter a Dogface in battle; they feel impossibly familiar.", "Vengeful Progeny", "You encounter a Dogface in battle; they feel impossibly familiar."));
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You solved a puzzle that stumped your peers. Gain the Analysis talent: Pattern Recognition or another Analysis talent you meet the prerequisites for.", "", "You solved a puzzle that stumped your peers.", "SelectTalentAnalysis"));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a terrible accident, but you’re not quite the same afterwards. Reduce your Agility, Brawn, or Coordination by 1.", "", "You survive a terrible accident, but you’re not quite the same afterwards.", "ReduceAttributeAgility|Brawn|Coordination"));
                        case 14:
                            return new CareerEventModel(new eventModel_2.EventModel("They say you can’t teach an old dog new tricks; you learn one anyway. Gain 1 rank of training in a skill you currently have no training in.", "", "They say you can’t teach an old dog new tricks; you learn one anyway.", "IncreaseUntrained"));
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a terrible accident... barely. Reduce your Vigour by 2.", "", "You survive a terrible accident... barely."), function () { character_8.character.vigourReduction += 2; });
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("You easily survive a terrible accident; you feel invincible.", "Overconfident", "You easily survive a terrible accident; you feel invincible."));
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You discover a human language that actually works for you.", "", "You discover a human language that actually works for you.", "LearnLanguage"));
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("After what you did, your pack could no longer stomach the sight of you. You are fired.", "Unfriended", "After what you did, your pack could no longer stomach the sight of you.", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("After what happened, the rest of the pack thinks you’re cursed; they might not be wrong. Reduce your Infinity Point refresh rate (min 0).", "", "After what happened, the rest of the pack thinks you’re cursed; they might not be wrong."), function () { character_8.character.infinityPoints = Math.max(0, character_8.character.infinityPoints - 1); });
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("It seems you’re Destined for Greatness; what comes next may not be pleasant, but it will at least be interesting.", "", "It seems you’re Destined for Greatness; what comes next may not be pleasant, but it will at least be interesting.", "ChineseCurse"));
                    }
                };
                CareerEvents.prototype.rollOnDogfaceAndWulverTable = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("Your work carries you to a different Ariadnan nation. Why did that go as well — or as poorly — as it did? Choose a nation besides your own.", "Relation to Another Nation", "Your work carries you to a different Ariadnan nation. Why did that go as well — or as poorly — as it did?", "SelectHomeland"));
                        case 2: {
                            var faction = factions_7.FactionsHelper.getFaction(factions_7.FactionsHelper.generateFaction(false, true)).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You and an offworlder discover a shared interest, and bond immediately. Gain an ally in the " + faction + " faction.", "", "You and an offworlder discover a shared interest, and bond immediately. Gain an ally in the " + faction + " faction."));
                        }
                        case 3:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You catch your superior embezzling. You are fired the next morning.", "Relieved of Duty", "You catch your superior embezzling. You are fired the next morning.", "Fired"));
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("Some people have good luck. Others have bad luck. You, it seems, have luck. Gain 1 Life Point, but increase your complication range by +1 on Action Scene skill tests.", "", "Increase your complication range by +1 on Action Scene skill tests."), function () { character_8.character.lifePoints++; });
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("Your co-workers routinely decide to dump their work on you. To their surprise, you handle it with ease. Gain 1 rank of training in the elective skill you didn’t select for this career.", "", "Your co-workers routinely decide to dump their work on you. To their surprise, you handle it with ease.", "IncreaseSkippedElective"));
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("Despite being cut-off for weeks, you endure whatever the storm throws at you. Gain the Resistance talent: Sturdy, or another Resistance talent you meet the prerequisites for.", "", "Despite being cut-off for weeks, you endure whatever the storm throws at you.", "SelectTalentResistance"));
                        case 7: {
                            var faction = factions_7.FactionsHelper.getFaction(factions_7.FactionsHelper.generateFaction(false, true)).name;
                            return new CareerEventModel(new eventModel_2.EventModel("Your whirlwind romance turns out to be part of a Galactic spy\u2019s mission. Gain a contact in the " + faction + " faction.", "", "Your whirlwind romance turns out to be part of a Galactic spy\u2019s mission. Gain a contact in the " + faction + " faction."));
                        }
                        case 8:
                            return new CareerEventModel(new eventModel_2.EventModel("You save a tourist from a horrible fate. Little did you know, they were Mayacasting at the time.", "Unlikely Hero", "You save a tourist from a horrible fate. Little did you know, they were Mayacasting at the time."));
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You encounter a Galactic missionary, and something just clicks. Do you convert? And what article of faith spoke to you?", "Religious/Spiritual Experience", "You encounter a Galactic missionary, and something just clicks. Do you convert? And what article of faith spoke to you?"));
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("A distant relative passes, bequeathing you their treasures — some of which are even interesting — and their debts. Gain 10 doses of painkillers, 2 tiny Pets, a USAriadnan Entrenching tool, 2 Assets worth of Teseum, and debts worth 5 Assets.", "", "A distant relative passes, bequeathing you their treasures — some of which are even interesting — and their debts. You have a 5 Asset debt."), function () {
                                character_8.character.addEquipment("Painkillers (10 doses)");
                                character_8.character.addEquipment("2 tiny Pets");
                                character_8.character.addEquipment("USAriadnan Entrenching Tool");
                                character_8.character.assets += 2;
                            });
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("Desperate to prove yourself, you turn to stimulants to help you keep the pace. It works — sort of — but the cost is real. You can reduce the difficulty of hazarding your next career by 1. Also, choose a drug — you begin play at that drug's addiction threshold.", "", "Desperate to prove yourself, you turn to stimulants to help you keep the pace. It works — sort of — but the cost is real.", "Rockstar"), function () { character_8.character.hazardDecrease++; });
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You come home one night, and your partner is gone, leaving no notice, but taking their belongings with them.", "Abandoned By Love", "You come home one night, and your partner is gone, leaving no notice, but taking their belongings with them."));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a terrible accident, but you can’t get it out of your head. Reduce your Resolve by 2.", "", "You survive a terrible accident, but you can’t get it out of your head."), function () { character_8.character.resolveReduction += 2; });
                        case 14:
                            return new CareerEventModel(new eventModel_2.EventModel("They say you can’t teach an old dog new tricks; you learn one anyway. Gain 1 rank of training in a skill you currently have no training in.", "", "They say you can’t teach an old dog new tricks; you learn one anyway.", "IncreaseUntrained"));
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a terrible accident... barely. Reduce your Vigour by 2.", "", "You survive a terrible accident... barely."), function () { character_8.character.vigourReduction += 2; });
                        case 16:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are fired. What did you do?", "", "You are fired. What did you do?", "Fired"));
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You discover a language that’s far easier to speak.", "", "You discover a language that’s far easier to speak.", "LearnLanguage"));
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are fired for no apparent reason; local news coverage is surprisingly sympathetic. You are fired. You may reduce the difficulty of hazarding your next career by 1. ", "Relieved of Duty", "You are fired for no apparent reason; local news coverage is surprisingly sympathetic."), function () { character_8.character.hazardDecrease++; });
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("You survive a terrible accident, but you’re not quite the same afterwards. Reduce three attributes of your choice by 1 each.", "", "You survive a terrible accident, but you’re not quite the same afterwards.", "ReduceAttributes3"));
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You’ve got the Devil’s Own Luck. Interesting Times ahead.", "", "You’ve got the Devil’s Own Luck. Interesting Times ahead.", "ChineseCurse"));
                    }
                };
                CareerEvents.prototype.rollOnHaqqislamTable = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("An old mentor puts in a good word for you. Were there strings attached? You may hazard your next career, even if you don't meet the faction or other prerequisites.", "", "An old mentor puts in a good word for you. Were there strings attached?"), function () { character_8.character.ignoreHazardRequirements = true; });
                        case 2:
                            return new CareerEventModel(new eventModel_2.EventModel("Muhafiz Agents followed you home one night. What did they think you know? Do you?", "On the Watchlist", "Muhafiz Agents followed you home one night. What did they think you know? Do you?"));
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("You’re forced to choose between your ideals and keeping your job. Either become Fired or reduce your Status by 1.", "Idealistic Choice", "You’re forced to choose between your ideals and keeping your job.", "PayStatusToContinue" // TODO
                            ));
                        case 4:
                            return new CareerEventModel(new eventModel_2.EventModel("You stepped in to mediate a conflict before it turned violent. Gain 1 rank in Psychology.", "", "You stepped in to mediate a conflict before it turned violent.", "IncreasePsychology"));
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("During a midnight visit to Medina’s coffeehouses, you played a competitive game of dominoes with a kindly older man. As he leaves, the barista looks like they’ve seen a ghost. If you attempt to hazard the Hassassin Fiday or Exemplar careers, reduce the difficulty by 1. If you choose to stay in your current career, increase your Status by 1.", "", "During a midnight visit to Medina’s coffeehouses, you played a competitive game of dominoes with a kindly older man. As he leaves, the barista looks like they’ve seen a ghost."), function () {
                                character_8.character.hassassinEvent = true;
                            });
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("You spend so much time on caravanserai it starts to feel like home. You may choose the Trader or Caravaner career as your next career without making a hazard test.", "", "You spend so much time on caravanserai it starts to feel like home."), function () {
                                character_8.character.freeCareers.push(careers_2.Career.Trader);
                                character_8.character.freeCareers.push(careers_2.Career.Caravaner);
                            });
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You develop a rivalry with another Haqqislamite. Is it friendly? Deadly serious? What does your rival want?", "Rivalry", "You develop a rivalry with another Haqqislamite. Is it friendly? Deadly serious? What does your rival want?"));
                        case 8: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You save a health tourist from a costly, serpent-related mistake. Gain an ally in the " + factionName + " faction.", "", "You save a health tourist from a costly, serpent-related mistake. Gain an ally in the " + factionName + " faction."));
                        }
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You embrace the faith’s teachings wholeheartedly. Some would say a little too much. You may choose Hassassin Fiday or Exemplar as your next career without making a hazard test.", "Zealot", "You embrace the faith’s teachings wholeheartedly. Some would say a little too much."), function () {
                                character_8.character.freeCareers.push(careers_2.Career.HassassinFidayHaqqislam);
                                character_8.character.freeCareers.push(careers_2.Career.HassassinExemplar);
                            });
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("While on a solitary desert pilgrimage, you happen across a prominent figure in a bad way; your quick thinking and natural knowledge saves their life. Gain 1 rank in Survival. You may select the Akbar Doctor career without making a hazard test.", "", "While on a solitary desert pilgrimage, you happen across a prominent figure in a bad way; your quick thinking and natural knowledge saves their life.", "IncreaseSurvival"), function () { character_8.character.freeCareers.push(careers_2.Career.AkbarDoctor); });
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("You participate in the Ocean of Fire race. Gain 1 rank in either Animal Handling or Pilot.", "", "You participate in the Ocean of Fire race.", "IncreaseAnimal Handling|Pilot"));
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You’re caught in the middle of a three-way grey market espionage tangle; someone needs to take the fall. You must pass a hazard test or become Fired.", "", "You’re caught in the middle of a three-way grey market espionage tangle; someone needs to take the fall.", "HazardTestOrFired"));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("A Silk Lord bequeaths you a portion of their wealth. Are you related? If not, why have they chosen you? Gain 5 assets.", "", "A Silk Lord bequeaths you a portion of their wealth. Are you related? If not, why have they chosen you?"), function () { character_8.character.assets += 5; });
                        case 14: {
                            var assets_1 = diceRoller_3.DiceRoller.rollSpecial(4, 0).hits;
                            return new CareerEventModel(new eventModel_2.EventModel("Travelling on the Silk Route maglev, your train is ambushed in the Azar Desert. The fighting is brief, but intense. Your Vigour is reduced by 1 while you recover. You gain " + assets_1 + " assets has hazard pay.", "", "Travelling on the Silk Route maglev, your train is ambushed in the Azar Desert. The fighting is brief, but intense."), function () {
                                character_8.character.vigourReduction++;
                                character_8.character.assets += assets_1;
                            });
                        }
                        case 15: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("Walking through Khadijah\u2019s Garden of Dreaming Pillars, you chance across a secret meeting. What was it? You gain a rival in the " + factionName + " faction. Lose 3 assets as they extract a modicum of financial revenge on you.", "", "Walking through Khadijah\u2019s Garden of Dreaming Pillars, you chance across a secret meeting. What was it? You gain a rival in the " + factionName + " faction."), function () { character_8.character.assets = Math.max(0, character_8.character.assets - 3); });
                        }
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("You volunteered for experimental medical treatments. They went well. Increase your Vigour by 1.", "", "You volunteered for experimental medical treatments. They went well."), function () { character_8.character.vigourReduction--; });
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You volunteered for experimental medical treatments. They went badly. Decrease your Vigour by 1.", "", "You volunteered for experimental medical treatments. They went badly."), function () { character_8.character.vigourReduction++; });
                        case 18:
                            if (isUnemployed) {
                                return this.generateEvent();
                            }
                            return new CareerEventModel(new eventModel_2.EventModel("You are fired. What did you do? Why did you feel you had to do it?", "Fired", "You are fired. What did you do? Why did you feel you had to do it?", "Fired"));
                        case 19:
                            if (character_8.character.isAlMustaslaha()) {
                                return new CareerEventModel(new eventModel_2.EventModel("You were murdered, or so the perpetrator thought. On the brink of death you are returned to life. Who was blamed for this, and who do you hold responsible?", "Murdered", "You were murdered, or so the perpetrator thought. On the brink of death you are returned to life. Who was blamed for this, and who do you hold responsible?"), function () {
                                    character_8.character.vigourReduction += 2;
                                    character_8.character.resolveReduction--;
                                });
                            }
                            else {
                                return new CareerEventModel(new eventModel_2.EventModel("You are murdered. Who was blamed for this, and who do you hold responsible? Your character died and was Resurrected.", "Murdered", "You are murdered. Who was blamed for this, and who do you hold responsible?", "Resurrection"));
                            }
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("If you see the Lion’s Teeth, don’t assume that it’s smiling. And right now, you’re seeing a lot of teeth.", "", "", "ChineseCurse"));
                    }
                };
                CareerEvents.prototype.rollOnPanOceaniaTable = function (roll, isUnemployed) {
                    switch (roll) {
                        case 1:
                            return new CareerEventModel(new eventModel_2.EventModel("Some of your investments pay off. You get 4 Assets.", "", "Some of your investments paid off."), function () { character_8.character.assets += 4; });
                        case 2:
                            return new CareerEventModel(new eventModel_2.EventModel("Bureau Toth brings you in for questioning. What do they want to know? They let you go, but under what condition?", "On the Watchlist", "Bureau Toth brings you in for questioning. What do they want to know? They let you go, but under what condition?"));
                        case 3:
                            return new CareerEventModel(new eventModel_2.EventModel("Your words are badly misconstrued in an interview. Increase the difficulty of hazarding your next career by +1.", "Antisocial Media", "Your words were badly misconstrued in an interview."), function () { character_8.character.hazardDecrease--; });
                        case 4: {
                            var roll_1 = diceRoller_3.DiceRoller.rollSpecial(4, 0);
                            var assets_2 = roll_1.hits;
                            assets_2 -= roll_1.special;
                            if (assets_2 < 0)
                                assets_2 = 0;
                            return new CareerEventModel(new eventModel_2.EventModel("You invest in some high-risk stocks. You gain " + assets_2 + " Assets.", "", "You invested in some high-risk stocks."), function () { character_8.character.assets += assets_2; });
                        }
                        case 5:
                            return new CareerEventModel(new eventModel_2.EventModel("An old Maya post of yours goes viral overnight.", "Fringe Celebrity", "An old Maya post of yours went viral overnight."));
                        case 6:
                            return new CareerEventModel(new eventModel_2.EventModel("Pitting rival employers against each other costs you your job but opens some doors. You are Fired, but you can reduce the difficulty of hazarding careers by 1.", "The Door Swings Both Ways", "Pitting rival employers against each other cost you your job but opens some doors.", "Fired"), function () { character_8.character.hazardDecrease++; });
                        case 7:
                            return new CareerEventModel(new eventModel_2.EventModel("You are the “lucky winner” of a transfer to Paradiso. You may take Croc Man or Special Forces as your next Career without making a hazard test. ", "Trouble in Paradiso", "You became the “lucky winner” of a transfer to Paradiso."), function () { character_8.character.freeCareers.push(careers_2.Career.CrocMan); });
                        case 8: {
                            var faction = factions_7.FactionsHelper.generateFaction(false, true);
                            var factionName = factions_7.FactionsHelper.getFaction(faction).name;
                            return new CareerEventModel(new eventModel_2.EventModel("You save a tourist from a horrible fate. You gain an ally in the " + factionName + " faction.", "", "You save a tourist from a horrible fate. You gain an ally in the " + factionName + " faction."));
                        }
                        case 9:
                            return new CareerEventModel(new eventModel_2.EventModel("You embrace the Church’s teachings wholeheartedly.", "Zealot", "You embrace the Church’s teachings wholeheartedly."), function () {
                                character_8.character.freeCareers.push(careers_2.Career.Priest);
                                character_8.character.freeCareers.push(careers_2.Career.OrderSergeant);
                                character_8.character.freeCareers.push(careers_2.Career.Knight);
                            });
                        case 10:
                            return new CareerEventModel(new eventModel_2.EventModel("Circumstances converge to put you at the helm of a ship. What brought this on? Gain 1 rank in Spacecraft. You may choose Pilot, Ship Crew or Fighter Pilot as your next career.", "", "Circumstances converge to put you at the helm of a ship. What brought this on?", "IncreaseSpacecraft"), function () {
                                character_8.character.freeCareers.push(careers_2.Career.Pilot);
                                character_8.character.freeCareers.push(careers_2.Career.ShipCrew);
                                character_8.character.freeCareers.push(careers_2.Career.FighterPilot);
                            });
                        case 11:
                            return new CareerEventModel(new eventModel_2.EventModel("You arrive for work to find nothing. It’s as though your employer never existed. You may not elect to extend or repeat your current career.", "Left in the Dark", "You arrive for work to find nothing. It’s as though your employer never existed."), function () { character_8.character.canExtendCareer = false; });
                        case 12:
                            return new CareerEventModel(new eventModel_2.EventModel("You developed an obsession with a professional sports team. As go their fortunes, so go your moods.", "Sports Fanatic", "You developed an obsession with a professional sports team. As go their fortunes, so go your moods."));
                        case 13:
                            return new CareerEventModel(new eventModel_2.EventModel("A Hexahedron agent visits your employer. The next day, your employee access has been revoked. What happened? You are Fired. You may choose either Hexas Agent or Criminal as your next career.", "Hexahedron Casualty", "A Hexahedron agent visits your employer. The next day, your employee access has been revoked. What happened?", "Fired"), function () {
                                character_8.character.freeCareers.push(careers_2.Career.HexasAgent);
                                character_8.character.freeCareers.push(careers_2.Career.Criminal);
                            });
                        case 14:
                            return new CareerEventModel(new eventModel_2.EventModel("Someone close to you is a criminal, but you can’t bring yourself to turn them in. Why not?", "Dirty Little Secret", "Someone close to you is a criminal, but you can’t bring yourself to turn them in. Why not?"));
                        case 15:
                            return new CareerEventModel(new eventModel_2.EventModel("You foiled an act of espionage against your employer. Gain +1 Earnings for your act of balance-sheet-friendly heroism.", "Dangerously Curious", "You foiled an act of espionage against your employer."), function () { character_8.character.earnings++; });
                        case 16:
                            return new CareerEventModel(new eventModel_2.EventModel("You are fired. What did you do, and why was it worth it?", "", "You are fired. What did you do, and why was it worth it?", "Fired"));
                        case 17:
                            return new CareerEventModel(new eventModel_2.EventModel("You are scouted by an unlikely employer. You may hazard your next career, even if you don’t meet the faction prerequisite.", "", "You were scouted by an unlikely employer."), function () { character_8.character.ignoreHazardRequirements = true; });
                        case 18:
                            return new CareerEventModel(new eventModel_2.EventModel("Some old Maya posts of yours get the wrong kind of attention before you can delete them. You are Fired.", "Old Sins", "Some old Maya posts of yours got the wrong kind of attention before you could delete them.", "Fired"));
                        case 19:
                            return new CareerEventModel(new eventModel_2.EventModel("You are murdered. Who was blamed for this, and who do you think was actually responsible? Your character died and was Resurrected.", "Murdered", "You are murdered. Who was blamed for this, and who do you think was actually responsible? Your character died and was Resurrected.", "Resurrection"));
                        case 20:
                            return new CareerEventModel(new eventModel_2.EventModel("You pay the Price of Ambition: things are about to get interesting. ", "", ""));
                    }
                };
                return CareerEvents;
            }());
            exports_13("CareerEvents", CareerEvents);
            exports_13("CareerEventsHelper", CareerEventsHelper = new CareerEvents());
        }
    }
});
System.register("helpers/alephForms", ["common/character", "common/eventModel", "helpers/careerEvents"], function(exports_14, context_14) {
    "use strict";
    var __moduleName = context_14 && context_14.id;
    var character_9, eventModel_3, careerEvents_2;
    var AlephForm, AlephFormModel, AlephFormViewModel, AlephForms, AlephFormsHelper;
    return {
        setters:[
            function (character_9_1) {
                character_9 = character_9_1;
            },
            function (eventModel_3_1) {
                eventModel_3 = eventModel_3_1;
            },
            function (careerEvents_2_1) {
                careerEvents_2 = careerEvents_2_1;
            }],
        execute: function() {
            (function (AlephForm) {
                AlephForm[AlephForm["Aspect"] = 0] = "Aspect";
                AlephForm[AlephForm["Recreation"] = 1] = "Recreation";
            })(AlephForm || (AlephForm = {}));
            exports_14("AlephForm", AlephForm);
            AlephFormModel = (function () {
                function AlephFormModel(name, description) {
                    this.name = name;
                    this.description = description;
                }
                return AlephFormModel;
            }());
            AlephFormViewModel = (function (_super) {
                __extends(AlephFormViewModel, _super);
                function AlephFormViewModel(id, base) {
                    _super.call(this, base.name, base.description);
                    this.id = id;
                }
                return AlephFormViewModel;
            }(AlephFormModel));
            exports_14("AlephFormViewModel", AlephFormViewModel);
            AlephForms = (function () {
                function AlephForms() {
                    this._forms = (_a = {},
                        _a[AlephForm.Aspect] = new AlephFormModel("Aspect", "Fragments of ALEPH known as Aspects are sometimes given enough functional autonomy to be considered individual characters despite their connection to ALEPH’s greater consciousness. (In some rare cases, these aspects become completely separated from ALEPH. These renegade aspects, however, are effectively independent — and therefore outlaw — AIs. However, some renegade aspects have disguised themselves as resurrected humans)."),
                        _a[AlephForm.Recreation] = new AlephFormModel("Recreation", "ALEPH is also responsible for the recreations, a combination of innovative biogenics and experimental Cubes. Hosted in sophisticated Lhosts, recreations are faithful simulations of the personalities of important historical figures, although their skills have been adapted to the modern age so they can work as diplomats, soldiers, spokespeople, and artists."),
                        _a
                    );
                    var _a;
                }
                AlephForms.prototype.getForms = function () {
                    var forms = [];
                    var n = 0;
                    for (var form in this._forms) {
                        var f = this._forms[form];
                        forms.push(new AlephFormViewModel(n, f));
                        n++;
                    }
                    return forms;
                };
                AlephForms.prototype.getForm = function (form) {
                    return this._forms[form];
                };
                AlephForms.prototype.applyForm = function (form) {
                    if (form === AlephForm.Recreation) {
                        character_9.character.careerEvents.push(new careerEvents_2.CareerEventModel(new eventModel_3.EventModel("", null, "You have a 10 asset debt owed to whoever funded your creation.")));
                    }
                };
                return AlephForms;
            }());
            exports_14("AlephForms", AlephForms);
            exports_14("AlephFormsHelper", AlephFormsHelper = new AlephForms());
        }
    }
});
System.register("helpers/homeEnvironments", ["common/character", "helpers/attributes", "helpers/skills", "helpers/alienHosts", "helpers/factions", "helpers/sources"], function(exports_15, context_15) {
    "use strict";
    var __moduleName = context_15 && context_15.id;
    var character_10, attributes_6, skills_5, alienHosts_7, factions_8, sources_7;
    var HomeEnvironment, HomeEnvironmentModel, HomeEnvironmentViewModel, HomeEnvironments, HomeEnvironmentsHelper;
    return {
        setters:[
            function (character_10_1) {
                character_10 = character_10_1;
            },
            function (attributes_6_1) {
                attributes_6 = attributes_6_1;
            },
            function (skills_5_1) {
                skills_5 = skills_5_1;
            },
            function (alienHosts_7_1) {
                alienHosts_7 = alienHosts_7_1;
            },
            function (factions_8_1) {
                factions_8 = factions_8_1;
            },
            function (sources_7_1) {
                sources_7 = sources_7_1;
            }],
        execute: function() {
            (function (HomeEnvironment) {
                // Core
                HomeEnvironment[HomeEnvironment["Happy_Home"] = 0] = "Happy_Home";
                HomeEnvironment[HomeEnvironment["Violent"] = 1] = "Violent";
                HomeEnvironment[HomeEnvironment["Frontier_Life"] = 2] = "Frontier_Life";
                HomeEnvironment[HomeEnvironment["Rebellious"] = 3] = "Rebellious";
                HomeEnvironment[HomeEnvironment["Regimented"] = 4] = "Regimented";
                HomeEnvironment[HomeEnvironment["High_Society"] = 5] = "High_Society";
                // Antipodes
                HomeEnvironment[HomeEnvironment["HappyHomeAntipode"] = 6] = "HappyHomeAntipode";
                HomeEnvironment[HomeEnvironment["RebelliousAntipode"] = 7] = "RebelliousAntipode";
                HomeEnvironment[HomeEnvironment["RegimentedAntipode"] = 8] = "RegimentedAntipode";
                HomeEnvironment[HomeEnvironment["Border_Life"] = 9] = "Border_Life";
                HomeEnvironment[HomeEnvironment["Shamanistic"] = 10] = "Shamanistic";
            })(HomeEnvironment || (HomeEnvironment = {}));
            exports_15("HomeEnvironment", HomeEnvironment);
            HomeEnvironmentModel = (function () {
                function HomeEnvironmentModel(name, attribute, skill) {
                    this.name = name;
                    this.attribute = attribute;
                    this.skill = skill;
                }
                return HomeEnvironmentModel;
            }());
            HomeEnvironmentViewModel = (function (_super) {
                __extends(HomeEnvironmentViewModel, _super);
                function HomeEnvironmentViewModel(id, base) {
                    _super.call(this, base.name, base.attribute, base.skill);
                    this.id = id;
                }
                return HomeEnvironmentViewModel;
            }(HomeEnvironmentModel));
            exports_15("HomeEnvironmentViewModel", HomeEnvironmentViewModel);
            HomeEnvironments = (function () {
                function HomeEnvironments() {
                    this._environments = (_a = {},
                        _a[HomeEnvironment.Happy_Home] = new HomeEnvironmentModel("Happy Home", attributes_6.Attribute.Personality, skills_5.Skill.Education),
                        _a[HomeEnvironment.Violent] = new HomeEnvironmentModel("Violent", attributes_6.Attribute.Brawn, skills_5.Skill.Acrobatics),
                        _a[HomeEnvironment.Frontier_Life] = new HomeEnvironmentModel("Frontier Life", attributes_6.Attribute.Brawn, skills_5.Skill.Resistance),
                        _a[HomeEnvironment.Rebellious] = new HomeEnvironmentModel("Rebellious", attributes_6.Attribute.Awareness, skills_5.Skill.Pilot),
                        _a[HomeEnvironment.Regimented] = new HomeEnvironmentModel("Regimented", attributes_6.Attribute.Coordination, skills_5.Skill.Discipline),
                        _a[HomeEnvironment.High_Society] = new HomeEnvironmentModel("High Society", attributes_6.Attribute.Willpower, skills_5.Skill.Lifestyle),
                        _a[HomeEnvironment.HappyHomeAntipode] = new HomeEnvironmentModel("Happy Home", attributes_6.Attribute.Personality, skills_5.Skill.Animal_Handling),
                        _a[HomeEnvironment.RebelliousAntipode] = new HomeEnvironmentModel("Rebellious", attributes_6.Attribute.Awareness, skills_5.Skill.Stealth),
                        _a[HomeEnvironment.RegimentedAntipode] = new HomeEnvironmentModel("Regimented", attributes_6.Attribute.Agility, skills_5.Skill.Discipline),
                        _a[HomeEnvironment.Border_Life] = new HomeEnvironmentModel("Border Life", attributes_6.Attribute.Brawn, skills_5.Skill.Resistance),
                        _a[HomeEnvironment.Shamanistic] = new HomeEnvironmentModel("Shamanistic", attributes_6.Attribute.Intelligence, skills_5.Skill.Analysis),
                        _a
                    );
                    var _a;
                }
                HomeEnvironments.prototype.getHomeEnvironments = function () {
                    var envs = [];
                    if (character_10.character.host === alienHosts_7.AlienHost.Antipode && character_10.character.faction === factions_8.Faction.Ariadna && character_10.character.hasSource(sources_7.Source.Ariadna)) {
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.HappyHomeAntipode, this._environments[HomeEnvironment.HappyHomeAntipode]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Violent, this._environments[HomeEnvironment.Violent]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Border_Life, this._environments[HomeEnvironment.Border_Life]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.RebelliousAntipode, this._environments[HomeEnvironment.RebelliousAntipode]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.RegimentedAntipode, this._environments[HomeEnvironment.RegimentedAntipode]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Shamanistic, this._environments[HomeEnvironment.Shamanistic]));
                    }
                    else {
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Happy_Home, this._environments[HomeEnvironment.Happy_Home]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Violent, this._environments[HomeEnvironment.Violent]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Frontier_Life, this._environments[HomeEnvironment.Frontier_Life]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Rebellious, this._environments[HomeEnvironment.Rebellious]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.Regimented, this._environments[HomeEnvironment.Regimented]));
                        envs.push(new HomeEnvironmentViewModel(HomeEnvironment.High_Society, this._environments[HomeEnvironment.High_Society]));
                    }
                    return envs;
                };
                HomeEnvironments.prototype.getHomeEnvironment = function (env) {
                    return this._environments[env];
                };
                HomeEnvironments.prototype.generateHomeEnvironment = function () {
                    var roll = Math.floor(Math.random() * 6) + 1;
                    var env = undefined;
                    if (character_10.character.host === alienHosts_7.AlienHost.Antipode && character_10.character.hasSource(sources_7.Source.Ariadna)) {
                        switch (roll) {
                            case 1:
                                env = HomeEnvironment.HappyHomeAntipode;
                                break;
                            case 2:
                                env = HomeEnvironment.Violent;
                                break;
                            case 3:
                                env = HomeEnvironment.Border_Life;
                                break;
                            case 4:
                                env = HomeEnvironment.RebelliousAntipode;
                                break;
                            case 5:
                                env = HomeEnvironment.RegimentedAntipode;
                                break;
                            case 6:
                                env = HomeEnvironment.Shamanistic;
                                break;
                        }
                    }
                    else {
                        switch (roll) {
                            case 1:
                                env = HomeEnvironment.Happy_Home;
                                break;
                            case 2:
                                env = HomeEnvironment.Violent;
                                break;
                            case 3:
                                env = HomeEnvironment.Frontier_Life;
                                break;
                            case 4:
                                env = HomeEnvironment.Rebellious;
                                break;
                            case 5:
                                env = HomeEnvironment.Regimented;
                                break;
                            case 6:
                                env = HomeEnvironment.High_Society;
                                break;
                        }
                    }
                    return env;
                };
                HomeEnvironments.prototype.applyHomeEnvironment = function (env) {
                    var e = this.getHomeEnvironment(env);
                    character_10.character.attributes[e.attribute].value++;
                };
                return HomeEnvironments;
            }());
            exports_15("HomeEnvironments", HomeEnvironments);
            exports_15("HomeEnvironmentsHelper", HomeEnvironmentsHelper = new HomeEnvironments());
        }
    }
});
System.register("helpers/hassassinOrders", ["helpers/skills"], function(exports_16, context_16) {
    "use strict";
    var __moduleName = context_16 && context_16.id;
    var skills_6;
    var HassassinOrder, OrderModel, OrderViewModel, HassassinOrders, HassassinOrdersHelper;
    return {
        setters:[
            function (skills_6_1) {
                skills_6 = skills_6_1;
            }],
        execute: function() {
            (function (HassassinOrder) {
                HassassinOrder[HassassinOrder["Barid"] = 0] = "Barid";
                HassassinOrder[HassassinOrder["Govad"] = 1] = "Govad";
                HassassinOrder[HassassinOrder["Lasiq"] = 2] = "Lasiq";
                HassassinOrder[HassassinOrder["Muyib"] = 3] = "Muyib";
                HassassinOrder[HassassinOrder["Ragik"] = 4] = "Ragik";
                HassassinOrder[HassassinOrder["Ayyar"] = 5] = "Ayyar";
            })(HassassinOrder || (HassassinOrder = {}));
            exports_16("HassassinOrder", HassassinOrder);
            OrderModel = (function () {
                function OrderModel(name, electiveSkills, gear) {
                    this.name = name;
                    this.electiveSkills = electiveSkills;
                    this.gear = gear;
                }
                return OrderModel;
            }());
            OrderViewModel = (function (_super) {
                __extends(OrderViewModel, _super);
                function OrderViewModel(id, base) {
                    _super.call(this, base.name, base.electiveSkills, base.gear);
                    this.id = id;
                }
                return OrderViewModel;
            }(OrderModel));
            HassassinOrders = (function () {
                function HassassinOrders() {
                    this._orders = (_a = {},
                        _a[HassassinOrder.Barid] = new OrderModel("Barid", [skills_6.Skill.Hacking, skills_6.Skill.Stealth, skills_6.Skill.Tech], ["Killer Hacking Device", "SWORD-1 Samâ", "Stealth Repeater"]),
                        _a[HassassinOrder.Govad] = new OrderModel("Govad", [skills_6.Skill.Acrobatics, skills_6.Skill.Analysis, skills_6.Skill.Ballistics], ["Breaker Pistol", "Grazeblade", "Recorder", "Light Combat Armour", "Djinncloak"]),
                        _a[HassassinOrder.Lasiq] = new OrderModel("Lasiq", [skills_6.Skill.Ballistics, skills_6.Skill.Lifestyle, skills_6.Skill.Observation], ["Viral Sniper Rifle", "Light Combat Armour"]),
                        _a[HassassinOrder.Muyib] = new OrderModel("Muyib", [skills_6.Skill.Athletics, skills_6.Skill.Resistance, skills_6.Skill.Tech], ["Medium Combat Armour", "2 D-Charges", "Light Grenade Launcher|Panzerfaust"]),
                        _a[HassassinOrder.Ragik] = new OrderModel("Ragik", [skills_6.Skill.Ballistics, skills_6.Skill.Education, skills_6.Skill.Persuade], ["Combat Jump Pack", "Boarding Shotgun", "Medium Combat Armour"]),
                        _a[HassassinOrder.Ayyar] = new OrderModel("Áyyār", [skills_6.Skill.Lifestyle, skills_6.Skill.Persuade, skills_6.Skill.Psychology], ["Djinn Kit", "Fake ID 3", "Cosmetics Kit", "Viral Pistol", "Viral Pistol", "Khafiin Microservo Armour"]),
                        _a
                    );
                    var _a;
                }
                HassassinOrders.prototype.getOrders = function () {
                    var orders = [];
                    var n = 0;
                    for (var order in this._orders) {
                        var o = this._orders[order];
                        orders.push(new OrderViewModel(n, o));
                        n++;
                    }
                    return orders;
                };
                HassassinOrders.prototype.getOrder = function (order) {
                    return this._orders[order];
                };
                HassassinOrders.prototype.generateOrder = function () {
                    switch (Math.floor(Math.random() * 6) + 1) {
                        case 1: return HassassinOrder.Barid;
                        case 2: return HassassinOrder.Govad;
                        case 3: return HassassinOrder.Lasiq;
                        case 4: return HassassinOrder.Muyib;
                        case 5: return HassassinOrder.Ragik;
                        case 6: return HassassinOrder.Ayyar;
                    }
                    return null;
                };
                return HassassinOrders;
            }());
            exports_16("HassassinOrdersHelper", HassassinOrdersHelper = new HassassinOrders());
        }
    }
});
System.register("helpers/militaryOrders", ["helpers/skills"], function(exports_17, context_17) {
    "use strict";
    var __moduleName = context_17 && context_17.id;
    var skills_7;
    var MilitaryOrder, OrderModel, OrderViewModel, MilitaryOrders, MilitaryOrdersHelper;
    return {
        setters:[
            function (skills_7_1) {
                skills_7 = skills_7_1;
            }],
        execute: function() {
            (function (MilitaryOrder) {
                MilitaryOrder[MilitaryOrder["Calatrava"] = 0] = "Calatrava";
                MilitaryOrder[MilitaryOrder["Dominican"] = 1] = "Dominican";
                MilitaryOrder[MilitaryOrder["Hospitaller"] = 2] = "Hospitaller";
                MilitaryOrder[MilitaryOrder["Montesa"] = 3] = "Montesa";
                MilitaryOrder[MilitaryOrder["Santiago"] = 4] = "Santiago";
                MilitaryOrder[MilitaryOrder["Teutonic"] = 5] = "Teutonic";
                MilitaryOrder[MilitaryOrder["Sepulchre"] = 6] = "Sepulchre";
            })(MilitaryOrder || (MilitaryOrder = {}));
            exports_17("MilitaryOrder", MilitaryOrder);
            OrderModel = (function () {
                function OrderModel(name, electiveSkills, gear) {
                    this.name = name;
                    this.electiveSkills = electiveSkills;
                    this.gear = gear;
                }
                return OrderModel;
            }());
            OrderViewModel = (function (_super) {
                __extends(OrderViewModel, _super);
                function OrderViewModel(id, base) {
                    _super.call(this, base.name, base.electiveSkills, base.gear);
                    this.id = id;
                }
                return OrderViewModel;
            }(OrderModel));
            MilitaryOrders = (function () {
                function MilitaryOrders() {
                    this._orders = (_a = {},
                        _a[MilitaryOrder.Calatrava] = new OrderModel("Calatrava", [skills_7.Skill.Discipline, skills_7.Skill.Education, skills_7.Skill.Science], ["Blade of St. George", "Powered Combat Armour", "Heavy Pistol"]),
                        _a[MilitaryOrder.Dominican] = new OrderModel("Dominican", [skills_7.Skill.Analysis, skills_7.Skill.Psychology, skills_7.Skill.Persuade], ["Blade of St. George", "Aletheia Kit", "Medium Combat Armour", "Nanopulser"]),
                        _a[MilitaryOrder.Hospitaller] = new OrderModel("Hospitaller", [skills_7.Skill.Lifestyle, skills_7.Skill.Medicine, skills_7.Skill.Persuade], ["Blade of St. George", "Powered Combat Armour", "MediKit"]),
                        _a[MilitaryOrder.Montesa] = new OrderModel("Montesa", [skills_7.Skill.Acrobatics, skills_7.Skill.Close_Combat, skills_7.Skill.Command], ["Blade of St. George", "Powered Combat Armour", "Breaker Pistol"]),
                        _a[MilitaryOrder.Santiago] = new OrderModel("Santiago", [skills_7.Skill.Extraplanetary, skills_7.Skill.Hacking, skills_7.Skill.Tech], ["Blade of St. George", "Knight of Santiago Armour", "E/M Grenade"]),
                        _a[MilitaryOrder.Teutonic] = new OrderModel("Teutonic", [skills_7.Skill.Extraplanetary, skills_7.Skill.Resistance, skills_7.Skill.Spacecraft], ["Blade of St. George", "Powered Combat Armour", "Panzerfaust"]),
                        _a[MilitaryOrder.Sepulchre] = new OrderModel("Sepulchre", [skills_7.Skill.Close_Combat, skills_7.Skill.Discipline, skills_7.Skill.Observation], ["Blade of St. George", "Powered Combat Armour", "Spitfire"]),
                        _a
                    );
                    var _a;
                }
                MilitaryOrders.prototype.getOrders = function () {
                    var orders = [];
                    var n = 0;
                    for (var order in this._orders) {
                        var o = this._orders[order];
                        orders.push(new OrderViewModel(n, o));
                        n++;
                    }
                    return orders;
                };
                MilitaryOrders.prototype.getOrder = function (order) {
                    return this._orders[order];
                };
                MilitaryOrders.prototype.generateOrder = function () {
                    switch (Math.floor(Math.random() * 20) + 1) {
                        case 1:
                        case 2:
                        case 3: return MilitaryOrder.Calatrava;
                        case 4:
                        case 5:
                        case 6: return MilitaryOrder.Dominican;
                        case 7:
                        case 8:
                        case 9: return MilitaryOrder.Hospitaller;
                        case 10:
                        case 11:
                        case 12: return MilitaryOrder.Montesa;
                        case 13:
                        case 14:
                        case 15: return MilitaryOrder.Santiago;
                        case 16:
                        case 17:
                        case 18: return MilitaryOrder.Teutonic;
                        case 19:
                        case 20: return MilitaryOrder.Sepulchre;
                    }
                    return null;
                };
                return MilitaryOrders;
            }());
            exports_17("MilitaryOrdersHelper", MilitaryOrdersHelper = new MilitaryOrders());
        }
    }
});
System.register("common/geist", ["helpers/attributes", "helpers/skills"], function(exports_18, context_18) {
    "use strict";
    var __moduleName = context_18 && context_18.id;
    var attributes_7, skills_8;
    var GeistAttribute, GeistSkill, Geist;
    return {
        setters:[
            function (attributes_7_1) {
                attributes_7 = attributes_7_1;
            },
            function (skills_8_1) {
                skills_8 = skills_8_1;
            }],
        execute: function() {
            GeistAttribute = (function () {
                function GeistAttribute(attr, val) {
                    this.attribute = attr;
                    this.value = val;
                }
                return GeistAttribute;
            }());
            exports_18("GeistAttribute", GeistAttribute);
            GeistSkill = (function () {
                function GeistSkill(skill, expertise, focus) {
                    this.skill = skill;
                    this.expertise = expertise;
                    this.focus = focus;
                }
                return GeistSkill;
            }());
            exports_18("GeistSkill", GeistSkill);
            Geist = (function () {
                function Geist() {
                    this.attributes = [];
                    this.skills = [];
                    this.firewallBonus = 0;
                    this.moraleBonus = 0;
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Agility, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Awareness, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Brawn, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Coordination, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Intelligence, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Personality, 4));
                    this.attributes.push(new GeistAttribute(attributes_7.Attribute.Willpower, 4));
                    for (var i = 0; i <= skills_8.Skill.Thievery; i++) {
                        this.skills.push(new GeistSkill(i, 0, 0));
                    }
                }
                return Geist;
            }());
            exports_18("Geist", Geist);
        }
    }
});
System.register("common/character", ["helpers/attributes", "helpers/skills", "helpers/alienHosts", "helpers/factions", "helpers/socialClasses", "helpers/careers", "helpers/youthEvents", "helpers/adolescenceEvents", "helpers/careerEvents", "helpers/sources", "common/geist", "common/eventModel"], function(exports_19, context_19) {
    "use strict";
    var __moduleName = context_19 && context_19.id;
    var attributes_8, skills_9, alienHosts_8, factions_9, socialClasses_3, careers_3, youthEvents_1, adolescenceEvents_1, careerEvents_3, sources_8, geist_1, eventModel_4;
    var Gender, CharacterAttribute, CharacterSkill, CharacterTalent, CharacterCareer, Step, Character, character;
    return {
        setters:[
            function (attributes_8_1) {
                attributes_8 = attributes_8_1;
            },
            function (skills_9_1) {
                skills_9 = skills_9_1;
            },
            function (alienHosts_8_1) {
                alienHosts_8 = alienHosts_8_1;
            },
            function (factions_9_1) {
                factions_9 = factions_9_1;
            },
            function (socialClasses_3_1) {
                socialClasses_3 = socialClasses_3_1;
            },
            function (careers_3_1) {
                careers_3 = careers_3_1;
            },
            function (youthEvents_1_1) {
                youthEvents_1 = youthEvents_1_1;
            },
            function (adolescenceEvents_1_1) {
                adolescenceEvents_1 = adolescenceEvents_1_1;
            },
            function (careerEvents_3_1) {
                careerEvents_3 = careerEvents_3_1;
            },
            function (sources_8_1) {
                sources_8 = sources_8_1;
            },
            function (geist_1_1) {
                geist_1 = geist_1_1;
            },
            function (eventModel_4_1) {
                eventModel_4 = eventModel_4_1;
            }],
        execute: function() {
            (function (Gender) {
                Gender[Gender["Male"] = 0] = "Male";
                Gender[Gender["Female"] = 1] = "Female";
            })(Gender || (Gender = {}));
            exports_19("Gender", Gender);
            CharacterAttribute = (function () {
                function CharacterAttribute(attr, val) {
                    this.attribute = attr;
                    this.value = val;
                }
                return CharacterAttribute;
            }());
            exports_19("CharacterAttribute", CharacterAttribute);
            CharacterSkill = (function () {
                function CharacterSkill(skill, expertise, focus) {
                    this.skill = skill;
                    this.expertise = expertise;
                    this.focus = focus;
                }
                return CharacterSkill;
            }());
            exports_19("CharacterSkill", CharacterSkill);
            CharacterTalent = (function () {
                function CharacterTalent(rank) {
                    this.rank = rank;
                }
                return CharacterTalent;
            }());
            exports_19("CharacterTalent", CharacterTalent);
            CharacterCareer = (function () {
                function CharacterCareer(career, years) {
                    this.career = career;
                    this.years = years;
                }
                return CharacterCareer;
            }());
            exports_19("CharacterCareer", CharacterCareer);
            Step = (function () {
                function Step(page, character) {
                    this.page = page;
                    this.character = character;
                }
                return Step;
            }());
            Character = (function () {
                function Character() {
                    this._attributeInitialValue = 7;
                    this.attributes = [];
                    this.modifiers = [];
                    this.skills = [];
                    this.talents = {};
                    this.hostAbilities = [];
                    this.excludedElectiveSkills = [];
                    this.careers = [];
                    this.freeCareers = [];
                    this.prohibitedCareers = [];
                    this.careerEvents = [];
                    this.pendingEvents = [];
                    this.otherEvents = [];
                    this.electiveSkills = {};
                    this.languages = [];
                    this.gender = Gender.Male;
                    this.equipment = [];
                    this.morale = 0;
                    this.bts = 0;
                    this._lifePoints = 0;
                    this.canExtendCareer = true;
                    this.canSelectHumanEducation = false;
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Agility, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Awareness, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Brawn, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Coordination, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Intelligence, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Personality, this._attributeInitialValue));
                    this.attributes.push(new CharacterAttribute(attributes_8.Attribute.Willpower, this._attributeInitialValue));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Agility, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Awareness, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Brawn, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Coordination, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Intelligence, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Personality, 0));
                    this.modifiers.push(new CharacterAttribute(attributes_8.Attribute.Willpower, 0));
                    for (var i = 0; i <= skills_9.Skill.Thievery; i++) {
                        this.skills.push(new CharacterSkill(i, 0, 0));
                    }
                    this.age = 18;
                    this.infinityPoints = 2;
                    this.earnings = 0;
                    this.assets = 0;
                    this.hazardDecrease = 0;
                    this.paidForFaction = false;
                    this.paidForSocialClass = false;
                    this.freeFactionCareerRoll = 0;
                    this.resolve = 0;
                    this.resolveReduction = 0;
                    this.vigour = 0;
                    this.vigourReduction = 0;
                    this.firewall = 0;
                    this.firewallReduction = 0;
                    this.meleeBonus = 0;
                    this.rangedBonus = 0;
                    this.psywarBonus = 0;
                    this.infowarBonus = 0;
                    this.armorBonus = 0;
                    this.geist = new geist_1.Geist();
                    this.sources = [];
                    this._steps = [];
                }
                Character.prototype.getCareerPage = function (page) {
                    return page + (Math.max(this.careers.length - 1, 0));
                };
                Object.defineProperty(Character.prototype, "steps", {
                    get: function () {
                        return this._steps;
                    },
                    enumerable: true,
                    configurable: true
                });
                Character.prototype.saveStep = function (page) {
                    if (!this._steps.some(function (s) { return s.page === page; })) {
                        var copy = this.copy();
                        this._steps.push(new Step(page, copy));
                    }
                };
                Character.prototype.goToStep = function (page) {
                    for (var i = this._steps.length - 1; i >= 0; i--) {
                        if (this._steps[i].page === page) {
                            exports_19("character", character = this._steps[i].character);
                            character.saveStep(page);
                            break;
                        }
                    }
                };
                Character.prototype.addSource = function (source) {
                    this.sources.push(source);
                };
                Character.prototype.removeSource = function (source) {
                    if (this.hasSource(source)) {
                        this.sources.splice(this.sources.indexOf(source), 1);
                    }
                };
                Character.prototype.hasSource = function (source) {
                    return character.sources.indexOf(source) > -1 || source === sources_8.Source.Core;
                };
                Object.defineProperty(Character.prototype, "lifePoints", {
                    get: function () {
                        return this._lifePoints;
                    },
                    set: function (val) {
                        this._lifePoints = Math.max(0, val);
                        var el = document.getElementById("lifepoints");
                        if (el) {
                            el.innerText = this._lifePoints.toString();
                        }
                        if (this._lifePoints === 0 && this.isOptional) {
                            this.isOptional = false;
                        }
                    },
                    enumerable: true,
                    configurable: true
                });
                Character.prototype.calculateModifiers = function () {
                    for (var i = 0; i < 7; i++) {
                        this.modifiers[i].value = this.attributes[i].value - 7;
                    }
                };
                Object.defineProperty(Character.prototype, "numberOfSignatureSkills", {
                    get: function () {
                        var count = 0;
                        for (var skill in this.skills) {
                            var s = this.skills[skill];
                            if (s.isSignature) {
                                count++;
                            }
                        }
                        return count;
                    },
                    enumerable: true,
                    configurable: true
                });
                Character.prototype.addOtherEvent = function (effect, trait) {
                    this.otherEvents.push(new eventModel_4.EventModel("", trait, effect));
                };
                Character.prototype.applyDeath = function () {
                    this.attributes[attributes_8.Attribute.Agility].value -= this.modifiers[attributes_8.Attribute.Agility].value > 0 ? this.modifiers[attributes_8.Attribute.Agility].value : -this.modifiers[attributes_8.Attribute.Agility].value;
                    this.attributes[attributes_8.Attribute.Awareness].value -= this.modifiers[attributes_8.Attribute.Awareness].value > 0 ? this.modifiers[attributes_8.Attribute.Awareness].value : -this.modifiers[attributes_8.Attribute.Awareness].value;
                    this.attributes[attributes_8.Attribute.Brawn].value -= this.modifiers[attributes_8.Attribute.Brawn].value > 0 ? this.modifiers[attributes_8.Attribute.Brawn].value : -this.modifiers[attributes_8.Attribute.Brawn].value;
                    this.attributes[attributes_8.Attribute.Coordination].value -= this.modifiers[attributes_8.Attribute.Coordination].value > 0 ? this.modifiers[attributes_8.Attribute.Coordination].value : -this.modifiers[attributes_8.Attribute.Coordination].value;
                    this.attributes[attributes_8.Attribute.Intelligence].value -= this.modifiers[attributes_8.Attribute.Intelligence].value > 0 ? this.modifiers[attributes_8.Attribute.Intelligence].value : -this.modifiers[attributes_8.Attribute.Intelligence].value;
                    this.attributes[attributes_8.Attribute.Personality].value -= this.modifiers[attributes_8.Attribute.Personality].value > 0 ? this.modifiers[attributes_8.Attribute.Personality].value : -this.modifiers[attributes_8.Attribute.Personality].value;
                    this.attributes[attributes_8.Attribute.Willpower].value -= this.modifiers[attributes_8.Attribute.Willpower].value > 0 ? this.modifiers[attributes_8.Attribute.Willpower].value : -this.modifiers[attributes_8.Attribute.Willpower].value;
                    this.hostAbilities = [];
                };
                Character.prototype.addTalent = function (name) {
                    var found = false;
                    if (name.indexOf('[') > -1) {
                        name = name.substr(0, name.indexOf('[') - 1);
                    }
                    else if (name.indexOf('(') > -1) {
                        name = name.substr(0, name.indexOf('(') - 1);
                    }
                    for (var talent in this.talents) {
                        var t = this.talents[talent];
                        if (talent === name) {
                            t.rank++;
                            found = true;
                            break;
                        }
                    }
                    if (!found) {
                        this.talents[name] = new CharacterTalent(1);
                    }
                };
                Character.prototype.hasTalent = function (name) {
                    var found = false;
                    for (var talent in this.talents) {
                        var t = this.talents[talent];
                        if (talent === name) {
                            found = true;
                            break;
                        }
                    }
                    return found;
                };
                Character.prototype.addLanguage = function (name) {
                    if (name && this.languages.indexOf(name) === -1) {
                        this.languages.push(name.replace(" ", ""));
                    }
                };
                Character.prototype.hasLanguage = function (name) {
                    return this.languages.indexOf(name) > -1;
                };
                Character.prototype.addEquipment = function (name) {
                    if (name !== "undefined" && this.equipment.indexOf(name) === -1) {
                        this.equipment.push(name);
                    }
                };
                Character.prototype.update = function () {
                    this.vigour = this.attributes[attributes_8.Attribute.Brawn].value + this.skills[skills_9.Skill.Resistance].expertise - this.vigourReduction;
                    this.resolve = this.attributes[attributes_8.Attribute.Willpower].value + this.skills[skills_9.Skill.Discipline].expertise - this.resolveReduction;
                    this.firewall = this.attributes[attributes_8.Attribute.Intelligence].value + this.skills[skills_9.Skill.Hacking].expertise - this.firewallReduction;
                    this.meleeBonus = this.calculateBonus(this.attributes[attributes_8.Attribute.Brawn].value);
                    this.rangedBonus = this.calculateBonus(this.attributes[attributes_8.Attribute.Awareness].value);
                    this.infowarBonus = this.calculateBonus(this.attributes[attributes_8.Attribute.Intelligence].value);
                    this.psywarBonus = this.calculateBonus(this.attributes[attributes_8.Attribute.Personality].value);
                };
                Character.prototype.isDogBlooded = function () {
                    return (this.host === alienHosts_8.AlienHost.Antipode ||
                        this.host === alienHosts_8.AlienHost.Dogface ||
                        this.host === alienHosts_8.AlienHost.Wulver) &&
                        this.faction === factions_9.Faction.Ariadna;
                };
                Character.prototype.isAlMustaslaha = function () {
                    return (this.socialClass === socialClasses_3.SocialClass.AlMustaslaha_Delivered ||
                        this.socialClass === socialClasses_3.SocialClass.AlMustaslaha_Donated ||
                        this.socialClass === socialClasses_3.SocialClass.AlMustaslaha_Orphaned) &&
                        this.faction === factions_9.Faction.Haqqislam;
                };
                Character.prototype.isUnemployed = function () {
                    var career = this.careers.length > 0 ? this.careers[0] : null;
                    if (career != null) {
                        return career.career === careers_3.Career.Unemployed || career.career === careers_3.Career.Scavenger;
                    }
                    return false;
                };
                Character.prototype.hasGeist = function () {
                    return (character.faction !== factions_9.Faction.Ariadna ||
                        character.hasDefected);
                };
                Character.prototype.getEarnings = function () {
                    var earnings = character.earnings;
                    if (character.hasTalent("Investments")) {
                        earnings += character.talents["Investments"].rank;
                    }
                    return earnings;
                };
                Character.prototype.copy = function () {
                    var character = new Character();
                    this._steps.forEach(function (s) {
                        character.steps.push(new Step(s.page, s.character));
                    });
                    this.sources.forEach(function (s) {
                        character.sources.push(s);
                    });
                    this.attributes.forEach(function (a) {
                        character.attributes[a.attribute].attribute = a.attribute;
                        character.attributes[a.attribute].value = a.value;
                    });
                    this.modifiers.forEach(function (a) {
                        character.modifiers[a.attribute].attribute = a.attribute;
                        character.modifiers[a.attribute].value = a.value;
                    });
                    this.skills.forEach(function (s) {
                        character.skills[s.skill].skill = s.skill;
                        character.skills[s.skill].expertise = s.expertise;
                        character.skills[s.skill].focus = s.focus;
                        character.skills[s.skill].isSignature = s.isSignature;
                    });
                    for (var talent in this.talents) {
                        var t = this.talents[talent];
                        character.talents[talent] = new CharacterTalent(t.rank);
                    }
                    character.host = this.host;
                    this.hostAbilities.forEach(function (a) {
                        character.hostAbilities.push(a);
                    });
                    character.hostName = this.hostName;
                    character.faction = this.faction;
                    character.heritage = this.heritage;
                    character.hasDefected = this.hasDefected;
                    character.alephForm = this.alephForm;
                    this.excludedElectiveSkills.forEach(function (s) {
                        character.excludedElectiveSkills.push(s);
                    });
                    character.birthPlace = this.birthPlace;
                    character.birthPlaceId = this.birthPlaceId;
                    character.homeland = this.homeland;
                    this.languages.forEach(function (lang) {
                        character.addLanguage(lang);
                    });
                    character.socialClass = this.socialClass;
                    character.homeEnvironment = this.homeEnvironment;
                    character.education = this.education;
                    this.careers.forEach(function (c) {
                        character.careers.push(new CharacterCareer(c.career, c.years));
                    });
                    this.freeCareers.forEach(function (c) {
                        character.freeCareers.push(c);
                    });
                    this.prohibitedCareers.forEach(function (c) {
                        character.prohibitedCareers.push(c);
                    });
                    character.firstCareer = this.firstCareer;
                    character.careerRerolls = this.careerRerolls;
                    character.youthEvent = this.youthEvent ? new youthEvents_1.YouthEventModel(this.youthEvent.description) : null;
                    character.adolescenceEvent = this.adolescenceEvent ? new adolescenceEvents_1.AdolescenceEventModel(new eventModel_4.EventModel(this.adolescenceEvent.event, this.adolescenceEvent.trait, this.adolescenceEvent.effect, this.adolescenceEvent.detailView)) : null;
                    this.careerEvents.forEach(function (e) {
                        character.careerEvents.push(new careerEvents_3.CareerEventModel(new eventModel_4.EventModel(e.event, e.trait, e.effect, e.detailView)));
                    });
                    this.otherEvents.forEach(function (e) {
                        character.otherEvents.push(new eventModel_4.EventModel(e.event, e.trait, e.effect, e.detailView));
                    });
                    this.pendingEvents.forEach(function (e) {
                        character.pendingEvents.push(new eventModel_4.EventModel(e.event, e.trait, e.effect, e.detailView));
                    });
                    for (var skill in this.electiveSkills) {
                        character.electiveSkills[skill] = this.electiveSkills[skill];
                    }
                    character.age = this.age;
                    character.name = this.name;
                    character.gender = this.gender;
                    character.infinityPoints = this.infinityPoints;
                    this.equipment.forEach(function (eq) {
                        character.addEquipment(eq);
                    });
                    character.resolve = this.resolve;
                    character.resolveReduction = this.resolveReduction;
                    character.vigour = this.vigour;
                    character.vigourReduction = this.vigourReduction;
                    character.firewall = this.firewall;
                    character.firewallReduction = this.firewallReduction;
                    character.meleeBonus = this.meleeBonus;
                    character.rangedBonus = this.rangedBonus;
                    character.infowarBonus = this.infowarBonus;
                    character.psywarBonus = this.psywarBonus;
                    character.armorBonus = this.armorBonus;
                    character.morale = this.morale;
                    character.bts = this.bts;
                    character.lifePoints = this.lifePoints;
                    character.isOptional = this.isOptional;
                    character.hasCriminalRecord = this.hasCriminalRecord;
                    character.ignoreFired = this.ignoreFired;
                    character.eventRerolls = this.eventRerolls;
                    character.freeFactionCareerRoll = this.freeFactionCareerRoll;
                    character.earnings = this.earnings;
                    character.assets = this.assets;
                    character.hazardDecrease = this.hazardDecrease;
                    character.ignoreHazardRequirements = this.ignoreHazardRequirements;
                    character.description = this.description;
                    character.weight = this.weight;
                    character.height = this.height;
                    character.hair = this.hair;
                    character.eyes = this.eyes;
                    character.paidForFaction = this.paidForFaction;
                    character.paidForSocialClass = this.paidForSocialClass;
                    character.hassassinEvent = this.hassassinEvent;
                    character.hassassinOrder = this.hassassinOrder;
                    character.militaryOrder = this.militaryOrder;
                    character.canExtendCareer = this.canExtendCareer;
                    character.canSelectHumanEducation = this.canSelectHumanEducation;
                    character.sissoluWaters = this.sissoluWaters;
                    character.geist = new geist_1.Geist();
                    this.geist.attributes.forEach(function (a) {
                        character.geist.attributes[a.attribute].value = a.value;
                    });
                    this.geist.skills.forEach(function (s) {
                        character.geist.skills[s.skill].skill = s.skill;
                        character.geist.skills[s.skill].expertise = s.expertise;
                        character.geist.skills[s.skill].focus = s.focus;
                    });
                    return character;
                };
                Character.prototype.calculateBonus = function (sum) {
                    if (sum >= 16) {
                        return 5;
                    }
                    else if (sum >= 14) {
                        return 4;
                    }
                    else if (sum >= 12) {
                        return 3;
                    }
                    else if (sum >= 10) {
                        return 2;
                    }
                    else if (sum > 8) {
                        return 1;
                    }
                    return 0;
                };
                return Character;
            }());
            exports_19("Character", Character);
            exports_19("character", character = new Character());
        }
    }
});
System.register("helpers/adolescenceEvents", ["common/character", "common/eventModel", "helpers/factions", "helpers/youthEvents", "helpers/careers", "helpers/socialClasses", "helpers/attributes", "helpers/skills", "helpers/diceRoller", "helpers/alienHosts", "helpers/sources"], function(exports_20, context_20) {
    "use strict";
    var __moduleName = context_20 && context_20.id;
    var character_11, eventModel_5, factions_10, youthEvents_2, careers_4, socialClasses_4, attributes_9, skills_10, diceRoller_4, alienHosts_9, sources_9;
    var AdolescenceEventModel, AdolescenceEvents, AdolescenceEventsHelper;
    return {
        setters:[
            function (character_11_1) {
                character_11 = character_11_1;
            },
            function (eventModel_5_1) {
                eventModel_5 = eventModel_5_1;
            },
            function (factions_10_1) {
                factions_10 = factions_10_1;
            },
            function (youthEvents_2_1) {
                youthEvents_2 = youthEvents_2_1;
            },
            function (careers_4_1) {
                careers_4 = careers_4_1;
            },
            function (socialClasses_4_1) {
                socialClasses_4 = socialClasses_4_1;
            },
            function (attributes_9_1) {
                attributes_9 = attributes_9_1;
            },
            function (skills_10_1) {
                skills_10 = skills_10_1;
            },
            function (diceRoller_4_1) {
                diceRoller_4 = diceRoller_4_1;
            },
            function (alienHosts_9_1) {
                alienHosts_9 = alienHosts_9_1;
            },
            function (sources_9_1) {
                sources_9 = sources_9_1;
            }],
        execute: function() {
            AdolescenceEventModel = (function (_super) {
                __extends(AdolescenceEventModel, _super);
                function AdolescenceEventModel(base, onApply) {
                    _super.call(this, base.event, base.trait, base.effect, base.detailView);
                    this.onApply = onApply;
                }
                return AdolescenceEventModel;
            }(eventModel_5.EventModel));
            exports_20("AdolescenceEventModel", AdolescenceEventModel);
            AdolescenceEvents = (function () {
                function AdolescenceEvents() {
                }
                AdolescenceEvents.prototype.generateEvent = function () {
                    var event = null;
                    var table = Math.floor(Math.random() * 6) + 1;
                    var ev = Math.floor(Math.random() * 20) + 1;
                    if (character_11.character.host === alienHosts_9.AlienHost.Antipode && character_11.character.hasSource(sources_9.Source.Ariadna)) {
                        event = this.rollOnAntipodeTable(ev);
                        event.table = "Antipode";
                        event.eventNumber = ev;
                        return event;
                    }
                    if (character_11.character.faction === factions_10.Faction.Ariadna && character_11.character.hasSource(sources_9.Source.Ariadna)) {
                        switch (table) {
                            case 1:
                            case 2:
                            case 3:
                                if (character_11.character.host === alienHosts_9.AlienHost.Human) {
                                    event = this.rollOnAriadnaTable(ev);
                                    event.table = "Ariadna";
                                    event.eventNumber = ev;
                                }
                                else {
                                    event = this.rollOnDogfaceAndWulverTable(ev);
                                    event.table = "Dog-Blooded";
                                    event.eventNumber = ev;
                                }
                                break;
                            case 4:
                                event = this.rollOnTableA(ev);
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev);
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev);
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else if (character_11.character.faction === factions_10.Faction.Haqqislam && character_11.character.hasSource(sources_9.Source.Haqqislam)) {
                        switch (table) {
                            case 1:
                                event = this.rollOnHaqqislamTable(ev); // says Heritage, but what is that?
                                event.table = "Haqqislam";
                                event.eventNumber = ev;
                                break;
                            case 2:
                            case 3:
                                event = this.rollOnHaqqislamTable(ev);
                                event.table = "Haqqislam";
                                event.eventNumber = ev;
                                break;
                            case 4:
                                event = this.rollOnTableA(ev);
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev);
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev);
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else if (character_11.character.faction === factions_10.Faction.PanOceania && character_11.character.hasSource(sources_9.Source.PanOceania)) {
                        switch (table) {
                            case 1:
                                event = this.rollOnPanOceaniaTable(ev); // says Heritage, but what is that?
                                event.table = "PanOceania";
                                event.eventNumber = ev;
                                break;
                            case 2:
                            case 3:
                                event = this.rollOnPanOceaniaTable(ev);
                                event.table = "PanOceania";
                                event.eventNumber = ev;
                                break;
                            case 4:
                                event = this.rollOnTableA(ev);
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 5:
                                event = this.rollOnTableB(ev);
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 6:
                                event = this.rollOnTableC(ev);
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    else {
                        switch (table) {
                            case 1:
                            case 2:
                                event = this.rollOnTableA(ev);
                                event.table = "A";
                                event.eventNumber = ev;
                                break;
                            case 3:
                            case 4:
                                event = this.rollOnTableB(ev);
                                event.table = "B";
                                event.eventNumber = ev;
                                break;
                            case 5:
                            case 6:
                                event = this.rollOnTableC(ev);
                                event.table = "C";
                                event.eventNumber = ev;
                                break;
                        }
                    }
                    return event;
                };
                AdolescenceEvents.prototype.getEvents = function () {
                    var events = {};
                    if (character_11.character.host === alienHosts_9.AlienHost.Antipode && character_11.character.hasSource(sources_9.Source.Ariadna)) {
                        events["Antipode"] = [];
                        for (var i = 1; i <= 20; i++) {
                            var ev = this.rollOnAntipodeTable(i);
                            ev.table = "Antipode";
                            events["Antipode"].push(ev);
                        }
                    }
                    else if (character_11.character.faction === factions_10.Faction.Ariadna && character_11.character.hasSource(sources_9.Source.Ariadna)) {
                        if (character_11.character.isDogBlooded()) {
                            events["Dog-Blooded"] = [];
                            for (var i = 1; i <= 20; i++) {
                                var ev = this.rollOnDogfaceAndWulverTable(i);
                                ev.table = "Dog-Blooded";
                                events["Dog-Blooded"].push(ev);
                            }
                        }
                        else {
                            events["Ariadna"] = [];
                            for (var i = 1; i <= 20; i++) {
                                var ev = this.rollOnAriadnaTable(i);
                                ev.table = "Ariadna";
                                events["Ariadna"].push(ev);
                            }
                        }
                    }
                    else if (character_11.character.faction === factions_10.Faction.Haqqislam && character_11.character.hasSource(sources_9.Source.Haqqislam)) {
                        events["Haqqislam"] = [];
                        for (var i = 1; i <= 20; i++) {
                            var ev = this.rollOnHaqqislamTable(i);
                            ev.table = "Haqqislam";
                            events["Haqqislam"].push(ev);
                        }
                    }
                    else if (character_11.character.faction === factions_10.Faction.PanOceania && character_11.character.hasSource(sources_9.Source.PanOceania)) {
                        events["PanOceania"] = [];
                        for (var i = 1; i <= 20; i++) {
                            var ev = this.rollOnPanOceaniaTable(i);
                            ev.table = "PanOceania";
                            events["PanOceania"].push(ev);
                        }
                    }
                    events["A"] = [];
                    events["B"] = [];
                    events["C"] = [];
                    for (var i = 1; i <= 20; i++) {
                        var ev = this.rollOnTableA(i);
                        ev.table = "A";
                        events["A"].push(ev);
                    }
                    for (var i = 1; i <= 20; i++) {
                        var ev = this.rollOnTableB(i);
                        ev.table = "B";
                        events["B"].push(ev);
                    }
                    for (var i = 1; i <= 20; i++) {
                        var ev = this.rollOnTableC(i);
                        ev.table = "C";
                        events["C"].push(ev);
                    }
                    return events;
                };
                AdolescenceEvents.prototype.rollOnTableA = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You contracted an alien disease, spore, or macrovirus. It has been forced into remission but only a constant regimen of medication keeps it tame. It doesn’t appear to be infectious (yet). You have a symbiotic organism attached to you that looks like a bad rash. It grants 1 bonus Momentum for Observation tests to determine whether there is anyone hidden within close range, but increases the difficulty of all social tests by 1 step", "Alien Typhoid", "You have a symbiotic organism attached to you that looks like a bad rash. It grants 1 bonus Momentum for Observation tests to determine whether there is anyone hidden within close range, but increases the difficulty of all social tests by 1 step"));
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were seriously injured and died on the operating table. You were resuscitated but your Cube had a manufacturer’s glitch and memories/episodes of a Maya ever-caster became merged with your own. Gain 1 asset in compensation and a new Youth Event. One of your Youth Events is a fake", "Dual Identity", "You were seriously injured and died on the operating table. You were resuscitated but your Cube had a manufacturer’s glitch and memories/episodes of a Maya ever-caster became merged with your own. One of your Youth Events is a fake."), function () {
                                character_11.character.assets++;
                                var youthEvent = youthEvents_2.YouthEventsHelper.generateEvent();
                                while (youthEvent.description === character_11.character.youthEvent.description) {
                                    youthEvent = youthEvents_2.YouthEventsHelper.generateEvent();
                                }
                                character_11.character.youthEvent.description += "; " + youthEvent.description;
                            });
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While they were on a journey, your sibling vanished. No one has ever discovered what happened to them, but you’ve been obsessed with figuring it out. Gain 1 rank in Analysis.", "Missing Sibling", "While they were on a journey, your sibling vanished. No one has ever discovered what happened to them, but you’ve been obsessed with figuring it out.", "IncreaseAnalysis"));
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A stranger visited your home and spoke in hushed tones with a family member. What did they talk about? Your family's surname is infamous amongst society’s elite. Your Social tests amongst them are increased in difficulty by 1 step.", "Shady Past", "Your family's surname is infamous amongst society’s elite. Your Social tests amongst them are increased in difficulty by 1 step."));
                        case 5:
                            if (character_11.character.faction === factions_10.Faction.Aleph)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The personality of your geist radically shifts overnight. You gradually become aware that it has become an aspect of ALEPH. You may switch your faction to ALEPH at this time. You may also choose the Bureau Toth Agent career freely for any of your career phases.", "Watched by the AI", "The personality of your geist radically shifts overnight. You gradually become aware that it has become an aspect of ALEPH.", "DefectionALEPH"), function () {
                                character_11.character.freeCareers.push(careers_4.Career.BureauTothAgent);
                            });
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You ran away from home. Reduce your Social Status by 1.", "Low Self-Esteem", "You ran away from home."), function () {
                                socialClasses_4.SocialClassesHelper.reduceSocialClass();
                            });
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You said \"yes\" and someone you cared about got hurt. Social tests against you receive one bonus Momentum, but your openness to adventure has paid off. Gain one asset.", "Weak Willed", "You said \"yes\" and someone you cared about got hurt. Social tests against you receive one bonus Momentum, but your openness to adventure has paid off."));
                        case 8:
                            if (character_11.character.faction === factions_10.Faction.Submondo)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("After someone close to you was murdered, your family confessed to you that they were deeply involved in a criminal conspiracy. You may switch to the Submondo faction at this time. You may also freely choose the Criminal career for any of your career phases. You are often a suspect in police enquiries and all social tests with security or police services are 1 difficulty rank greater.", "Criminal Connections", "After someone close to you was murdered, your family confessed to you that they were deeply involved in a criminal conspiracy. You are often a suspect in police enquiries and all social tests with security or police services are 1 difficulty rank greater.", "DefectionSubmondo"), function () {
                                character_11.character.freeCareers.push(careers_4.Career.Criminal);
                            });
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You are a prodigy and excelled at a particular skill from a very young age. You could have been a talented musician or a math whiz. Regardless, your talent got a lot of attention in the media before you grew out of it. Gain 1 level of Social Status or 5 assets. Alternatively, gain a contact in media, academia, or the entertainment industry.", "Bitter", "You were a prodigy and excelled at a particular skill from a very young age. You could have been a talented musician or a math whiz. Regardless, your talent got a lot of attention in the media before you grew out of it.", "Prodigy"));
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You suffered a traumatic head injury. Reduce Intelligence by 1, but gain 1 rank of training in Discipline.", "Slow Thoughts", "You suffered a traumatic head injury.", "IncreaseDiscipline"), function () {
                                character_11.character.attributes[attributes_9.Attribute.Intelligence].value--;
                            });
                        case 11:
                            if (character_11.character.faction === factions_10.Faction.Submondo)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You got mixed up with the wrong people and were involved in a serious crime. Spend 1-6 years in jail before starting your first career. Gain a Criminal Record.", "Criminal Record", "You got mixed up with the wrong people and were involved in a serious crime.", "DefectionSubmondo"), function () {
                                character_11.character.age += Math.floor(Math.random() * 6 + 1);
                                character_11.character.hasCriminalRecord = true;
                            });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Both your parents died in a mysterious accident. You were sent to an orphanage. Reduce Social Status by one. Gain 1-6 assets from an estate left for you.", "Orphan", "Both your parents died in a mysterious accident. You were sent to an orphanage."), function () {
                                socialClasses_4.SocialClassesHelper.reduceSocialClass();
                                character_11.character.assets += Math.floor(Math.random() * 6 + 1);
                            });
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You became friends with a powerful and important person. Is your relationship with them still solid? If you get a 'fired' result you can ignore it, but reduce your Earnings rating by one.", "Silver Spoon", "You became friends with a powerful and important person. Is your relationship with them still solid?"), function () {
                                character_11.character.ignoreFired = true;
                            });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("At 4am in the morning you were taken from your home. You heard shots and never saw your family again. You have a mysterious benefactor who saved you, and you grew up with family friends. Decrease your Status by one, but gain a free re-roll on a Career Event.", "Lost Family", "At 4am in the morning you were taken from your home. You heard shots and never saw your family again. You have a mysterious benefactor who saved you, and you grew up with family friends."), function () {
                                socialClasses_4.SocialClassesHelper.reduceSocialClass();
                                character_11.character.eventRerolls++;
                            });
                        case 15:
                            if (character_11.character.faction === factions_10.Faction.Submondo)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You messed up and were arrested for a minor crime. Spend one year in jail before starting your first career. Gain Criminal Record.", "Criminal Record", "You messed up and were arrested for a minor crime.", "DefectionSubmondo"), function () {
                                character_11.character.age++;
                                character_11.character.hasCriminalRecord = true;
                            });
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You had a terrible childhood accident. All movement related skill tests are one difficulty harder, but you have gained a strong will. All Discipline tests are one difficulty lower (minimum 1).", "Disabled", "You had a terrible childhood accident. All movement related skill tests are one difficulty harder, but you have gained a strong will. All Discipline tests are one difficulty lower (minimum 1)."));
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You contracted colonial wasting disease. Reduce your Vigour by 1.", "Feel Every Punch", "You contracted colonial wasting disease, which reduces your Vigour by 1."), function () {
                                character_11.character.vigourReduction++;
                            });
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your body is intolerant to chemical substances. All Resistance tests for artificial substances are increased by 1 level of difficulty. Serum provides no bonuses.", "Allergies", "Your body is intolerant to chemical substances. All Resistance tests for artificial substances are increased by 1 level of difficulty. Serum provides no bonuses."));
                        case 19: {
                            var faction_1 = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction_1 === character_11.character.faction) {
                                faction_1 = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction_1).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A woman in a conservative suit approaches you one day and reveals what really happened to someone that you loved. Then she asks what you want to do about it. You defect to the " + factionName + " faction.", "Traitor", "A woman in a conservative suit approaches you one day and reveals what really happened to someone that you loved. Then she asks what you want to do about it. You defect to the " + factionName + " faction."), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.hasDefected = true;
                                character_11.character.faction = faction_1;
                            });
                        }
                        case 20:
                            if (character_11.character.isAlMustaslaha()) {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You nearly died but was brought to life at the last minute. It seems Allah is not finished with you yet.", "Near-Death Experience", "You nearly died."), function () {
                                    character_11.character.vigourReduction += 2;
                                    character_11.character.resolveReduction--;
                                });
                            }
                            else {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You died. Your character died and was resurrected.", "Cube Weary", "You died and was resurrected.", "Resurrection"), function () {
                                    character_11.character.applyDeath();
                                });
                            }
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnTableB = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While on a spacewalk, your tether snapped and you were knocked off-station. You cannot select Extraplanetary as an elective skill in any subsequent career phase. (You can still improve it normally through other means.)", "Zero-G Terror", "While on a spacewalk, your tether snapped and you were knocked off-station."), function () {
                                character_11.character.excludedElectiveSkills.push(skills_10.Skill.Extraplanetary);
                            });
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Volunteering for “human tests” seemed like easy money. The physical scars healed, but you’ve never really learned to control your new “gift”. Gain a MetaChemistry, but you must pass a Difficult (D3) Willpower test in order to use it.", "Rogue MetaChemistry", "Volunteering for “human tests” seemed like easy money. The physical scars healed, but you’ve never really learned to control your new “gift”. Gain a MetaChemistry, but you must pass a Difficult (D3) Willpower test in order to use it."));
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were detained by national law enforcement. Although ultimately exonerated, your records are still notated from the incident. All tests with security forces are 1 difficulty rank greater. Attempts to access classified information expand your complication range by 1 point (most likely resulting in unwanted official attention).", "Stained Record", "You were detained by national law enforcement. Although ultimately exonerated, your records are still notated from the incident. All tests with security forces are 1 difficulty rank greater. Attempts to access classified information expand your complication range by 1 point (most likely resulting in unwanted official attention)."));
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You joined a Maya cluster and became obsessed with the infowarrior subculture. Gain 1 rank in Hacking.", "Neophile", "You joined a Maya cluster and became obsessed with the infowarrior subculture.", "IncreaseHacking"));
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your parents or guardians were unexpectedly fired by their corporate employers and blacklisted. Reduce Social Status and Earnings Rating by one (minimum 0).", "Rage Against the Corporation", "Your parents or guardians were unexpectedly fired by their corporate employers and blacklisted."), function () {
                                socialClasses_4.SocialClassesHelper.reduceSocialClass();
                                character_11.character.earnings = Math.max(character_11.character.earnings - 1, 0);
                            });
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Someone witnessed you do something terrible. They’ve kept your secret, but they’ve never let you forget it. Gain a debt worth 5 Assets.", "Blackmailed", "Someone witnessed you do something terrible. They’ve kept your secret, but they’ve never let you forget it. You have a debt worth 5 Assets."));
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You had an imaginary friend. Nobody else could see them, but you went on grand Maya adventures. Now you see hints of your imaginary friend when you’re online. Pick a topic that your imaginary friend was enamoured with. You gain +1d20 when making research tests on Maya regarding that topic.", "Quantronic Ally", "You had an imaginary friend. Nobody else could see them, but you went on grand Maya adventures. Now you see hints of your imaginary friend when you’re online. Pick a topic that your imaginary friend was enamoured with. You gain +1d20 when making research tests on Maya regarding that topic."));
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A rogue retrovirus rewrote your genetics, causing a shift in aggression and fight/flight reactions. You fly off the handle faster than people can react. You gain +1d20 to Surprise tests in Mexican stand-offs and similar situations.", "Quick with a Fist", "A rogue retrovirus rewrote your genetics, causing a shift in aggression and fight/flight reactions. You fly off the handle faster than people can react. You gain +1d20 to Surprise tests in Mexican stand-offs and similar situations."));
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your parents or guardians became radical converts to a religion. Was your time with their church a happy one? Gain 1 rank in either Psychology or Command.", "Religious Upbringing", "Your parents or guardians became radical converts to a religion. Was your time with their church a happy one?", "IncreasePsychology|Command"));
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A distant family member died and unexpectedly named you their executor. Their record keeping was atrocious, though, and their old debts keep coming back to haunt you. Gain 10 Assets and a debt worth 5 Assets.", "Unexpected Obligations", "A distant family member died and unexpectedly named you their executor. Their record keeping was atrocious, though, and their old debts keep coming back to haunt you. You have a debt worth 5 Assets."), function () {
                                character_11.character.assets += 10;
                            });
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("When you first signed up for school a network glitch merged all of your quantronic records with someone else who shares your exact name. Your Maya footprints have never been fully untangled. Persuade tests made against remote targets expand your complication range by 1 point.", "Confused Identity", "When you first signed up for school a network glitch merged all of your quantronic records with someone else who shares your exact name. Your Maya footprints have never been fully untangled. Persuade tests made against remote targets expand your complication range by 1 point."));
                        case 12:
                            {
                                var faction = factions_10.FactionsHelper.getFaction(factions_10.FactionsHelper.generateFaction(false, true)).name;
                                return new AdolescenceEventModel(new eventModel_5.EventModel("When your first love was forced to move across the Human Sphere by their parents, you both swore to find each other one day. Gain an ally in the " + faction + " faction.", "Lost Love", "When your first love was forced to move across the Human Sphere by their parents, you both swore to find each other one day. You have an ally in the " + faction + " faction."));
                            }
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("There was a terrible accident on the orbital you were visiting and you were badly injured due to an equipment failure. Reduce Brawn by 1 point but gain 1 rank in Extraplanetary.", "Safety First", "There was a terrible accident on the orbital you were visiting and you were badly injured due to an equipment failure.", "IncreaseExtraplanetary"), function () {
                                character_11.character.attributes[attributes_9.Attribute.Brawn].value--;
                            });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent most of your free time as an urban spelunker, exploring the ruins and hidden places. What was the most unusual place you went? Gain 1 rank in Stealth.", "Killer Curiosity", "You spent most of your free time as an urban spelunker, exploring the ruins and hidden places. What was the most unusual place you went?", "IncreaseStealth"));
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("After finding an injured animal, you nursed it back to health. Gain 1 rank in Animal Handling.", "Bleeding Heart for Animals", "After finding an injured animal, you nursed it back to health.", "IncreaseAnimal Handling"));
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You have a relative or godparent with connections. You may reroll your first career, but must accept the new career rolled.", "Annoying Family", "You have a relative or godparent with connections."), function () {
                                character_11.character.careerRerolls++;
                            });
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You fell in with a bad crowd. Who was your worst “friend” from those days? Gain 1 rank in Thievery.", "Shady Past", "You fell in with a bad crowd. Who was your worst “friend” from those days?", "IncreaseThievery"));
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You tried to upgrade your geist’s software… and failed badly. Reduce Firewall by 1.", "Faulty Geist", "You tried to upgrade your geist’s software… and failed badly."), function () {
                                character_11.character.firewallReduction++;
                            });
                        case 19: {
                            var faction_2 = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction_2 === character_11.character.faction) {
                                faction_2 = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction_2).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You are awoken in the middle of the night by your parents and told to quickly pack a suitcase. Two days later, you’re on a new planet. You defect to the " + factionName + " faction.", "True Believer", "You are awoken in the middle of the night by your parents and told to quickly pack a suitcase. Two days later, you’re on a new planet. You defect to the " + factionName + " faction."), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.hasDefected = true;
                                character_11.character.faction = faction_2;
                            });
                        }
                        case 20:
                            if (character_11.character.isAlMustaslaha()) {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You nearly died but was brought to life at the last minute. It seems Allah is not finished with you yet.", "Near-Death Experience", "You nearly died."), function () {
                                    character_11.character.vigourReduction += 2;
                                    character_11.character.resolveReduction--;
                                });
                            }
                            else {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You were murdered. Your character died and was resurrected.", "Paranoid", "You were murdered. Your character died and was resurrected.", "Resurrection"), function () {
                                    character_11.character.applyDeath();
                                });
                            }
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnTableC = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("What your family did haunts you wherever you go. Difficulty to avoid attention is 1 step higher when your true identity is known.", "Infamous", "What your family did haunts you wherever you go. Difficulty to avoid attention is 1 step higher when your true identity is known."));
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While visiting a petting zoo you were bitten by one of the animals. When making Animal Handling tests, expand your complication range by 1 point.", "Animal Hatred", "While visiting a petting zoo you were bitten by one of the animals. When making Animal Handling tests, expand your complication range by 1 point."));
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You became a local champion in your sport of choice. There was talk about taking it to the next level. Did you? Or did something happen to cut your career short. Gain 1 rank in Acrobatics.", "Nagging Injury", "You became a local champion in your sport of choice. There was talk about taking it to the next level. Did you? Or did something happen to cut your career short.", "IncreaseAcrobatics"));
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your flight crashed out on the frontier. It was weeks before the rescue teams found you. Gain 1 rank in Survival.", "Survivor's Guilt", "Your flight crashed out on the frontier. It was weeks before the rescue teams found you.", "IncreaseSurvival"));
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Either you or your partner became pregnant. Gain a debt worth 3 Assets.", "Dependent", "Either you or your partner became pregnant. You have a debt worth 3 Assets."));
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Once you were exposed to the writings of a political ideologue, you became obsessed with their vision of what the Human Sphere should be. Choose a new faction of your choice.", "Disillusioned", "Once you were exposed to the writings of a political ideologue, you became obsessed with their vision of what the Human Sphere should be.", "DefectionChoice"));
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You decided to pursue a second degree. Gain 1 rank in Education and add 1-6 years to your age.", "Studious", "You decided to pursue a second degree.", "IncreaseEducation"), function () {
                                character_11.character.age += Math.floor(Math.random() * 6) + 1;
                            });
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("An unexpected boon, random chance, or personal merit allowed you to transfer into an elite training academy. Increase your Social Status by 1.", "Overconfident", "An unexpected boon, random chance, or personal merit allowed you to transfer into an elite training academy."), function () {
                                socialClasses_4.SocialClassesHelper.increaseSocialClass();
                            });
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("It was just a minor invention, but it exploded in popularity. Did you sell out or did it just fade away as a seasonal fad? Gain 10 Assets.", "Mad Tinkerer", "It was just a minor invention, but it exploded in popularity. Did you sell out or did it just fade away as a seasonal fad?"), function () {
                                character_11.character.assets += 10;
                            });
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Someone dear to you died in a hull breach. You couldn’t do anything to save them. Gain 1 rank in Extraplanetary.", "Vacuum Phobia", "Someone dear to you died in a hull breach. You couldn’t do anything to save them.", "IncreaseExtraplanetary"));
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent a summer painstakingly restoring a classic car (or other vehicle). Gain the 'Greasemonkey' talent from the Tech skill talent tree.", "Nostalgia Freak", "You spent a summer painstakingly restoring a classic car (or other vehicle)."), function () {
                                character_11.character.addTalent("Greasemonkey");
                            });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("It can be argued that the accident wasn’t your fault, but the courts didn’t see it that way. Gain a debt worth 10 Assets.", "Careless", "It can be argued that the accident wasn’t your fault, but the courts didn’t see it that way. You have a debt worth 10 Assets."));
                        case 13:
                            if (character_11.character.faction === factions_10.Faction.Submondo)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were framed for a crime you didn’t commit. Who framed you? What did they do? Spend 1-6 years in jail before starting your first career. Gain a criminal record.", "Criminal Record", "You were framed for a crime you didn’t commit. Who framed you? What did they do? You have spent time in jail and have a criminal record.", "DefectionSubmondo"), function () {
                                character_11.character.age += Math.floor(Math.random() * 6) + 1;
                                character_11.character.hasCriminalRecord = true;
                            });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("It took two years, but you did the training and successfully completed one of the Planetary Ironmen competitions. Gain 1 rank in Athletics.", "Tenacious", "It took two years, but you did the training and successfully completed one of the Planetary Ironmen competitions", "IncreaseAthletics"));
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A stranger came to the house and left a package for you. What is so important about it? How will you know when to open it? You gain a package worth 5 assets that you must never lose. You do not know what is inside. Decide when you will know whether to open the package.", "Unwanted Heritage", "A stranger came to the house and left a package for you. What is so important about it? How will you know when to open it? You gain a package worth 5 assets that you must never lose. You do not know what is inside. Decide when you will know whether to open the package."));
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent half a year on a field study. How far did you go? Who ran the study? Gain 1 rank in Science.", "Neuroticism", "You spent half a year on a field study. How far did you go? Who ran the study?", "IncreaseScience"));
                        case 17:
                            if (character_11.character.faction === factions_10.Faction.O12)
                                return this.generateEvent();
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your best friend joined the military. And then he was killed. You realized all this jingoism doesn’t make any sense. You may switch your faction to O-12 at this time.", "Judicious", "Your best friend joined the military. And then he was killed. You realized all this jingoism doesn’t make any sense.", "DefectionO-12"));
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were kidnapped and tortured. Why? Reduce Resolve by 1.", "Skittish", "You were kidnapped and tortured. Why?"), function () {
                                character_11.character.resolveReduction++;
                            });
                        case 19: {
                            var faction_3 = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction_3 === character_11.character.faction) {
                                faction_3 = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction_3).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your first real job took you to a new planet. It felt like home. You defect to the " + factionName + " faction. You may choose to roll on that faction's career table for your first career at no cost.", "Laissez Faire", "Your first real job took you to a new planet. It felt like home. You defect to the " + factionName + " faction."), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.hasDefected = true;
                                character_11.character.faction = faction_3;
                                character_11.character.freeFactionCareerRoll++;
                            });
                        }
                        case 20:
                            if (character_11.character.isAlMustaslaha()) {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You nearly died but was brought to life at the last minute. It seems Allah is not finished with you yet.", "Near-Death Experience", "You nearly died."), function () {
                                    character_11.character.vigourReduction += 2;
                                    character_11.character.resolveReduction--;
                                });
                            }
                            else {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You committed suicide. Your character died and was resurrected.", "Suicidal", "You committed suicide. Your character died and was resurrected.", "Resurrection"), function () {
                                    character_11.character.applyDeath();
                                });
                            }
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnAriadnaTable = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A surprise Antipode attack nearly claimed your life — until you picked up a weapon and fought back. Gain 1 rank in either Ballistics or Close Combat.", "Survivor", "A surprise Antipode attack nearly claimed your life — until you picked up a weapon and fought back.", "IncreaseBallistics|Close Combat"), function () {
                            });
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were stranded on the frontier with for a solid month with no aid. By the time they found you, you'd already identified which mushrooms were poisonous — the hard way. Gain 1 rank in Survival, but suffer +1 complication range on Resistance tests to resist poison.", "Grizzled", "You were stranded on the frontier with for a solid month with no aid. By the time they found you, you'd already identified which mushrooms were poisonous — the hard way. +1 complication range on Resistance tests to resist poison.", "IncreaseSurvival"), function () {
                            });
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A dying soldier entrusted you with their unfinished business. Gain 1 rank in Discipline.", "Weight of the World", "A dying soldier entrusted you with their unfinished business.", "IncreaseDiscipline"), function () {
                            });
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("When the dust settled, you were the only one left alive. How? And why? Gain 1 rank in Survival, but reduce Earnings by 1 (minimum 0).", "Sole Survivor", "When the dust settled, you were the only one left alive. How? And why?", "IncreaseSurvival"), function () {
                                character_11.character.earnings = Math.max(0, character_11.character.earnings - 1);
                            });
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You suffered a terrible childhood accident. All movement-related skill tests suffer +1 difficulty, but you have gained a strong will; reduce the difficulty of all Discipline tests by 1 (to a minimum of 1).", "Disabled", "All movement-related skill tests suffer +1 difficulty, but you have gained a strong will; reduce the difficulty of all Discipline tests by 1 (to a minimum of 1).", ""), function () {
                            });
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You got involved in underground fight clubs at an early age. Gain 1 rank in Close Combat, but gain a 1 Asset debt representing medical bills.", "Street Fighter", "You got involved in underground fight clubs at an early age. Gain a 1 Asset debt representing medical bills.", "IncreaseClose Combat"), function () {
                            });
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were stranded in the wilderness for an extended time. Gain 1 rank in either Animal Handling or Survival, but add +1 to the complication range on Personality-based tests.", "Raised in a Barn", "You were stranded in the wilderness for an extended time. Add +1 to the complication range on Personality-based tests.", "IncreaseAnimal Handling|Survival"), function () {
                            });
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away. Did you let them? If so, what was the cost? Either spend 1-6 years in jail before starting your first career, and gain a Criminal Record \u2014 or gain a debt of 1-10 Assets, and 1 rank of Thievery.", "It Takes One to Know One", "Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away. Did you let them? If so, what was the cost?", "JailOrDebt"), function () {
                            });
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You found success as part of a Hiraeth Culture musical act. You handled the instant celebrity as well as can be expected — that is to say, poorly. You're often recognized in the street; not just in Ariadna, but across the Human Sphere. Choose a drug — you begin play at that drug's addiction threshold, and with 1-6 doses in your possession. Additionally, reduce the difficulty of all Lifestyle tests by 1 (to a minimum of 0).", "Rockstar", "You found success as part of a Hiraeth Culture musical act. You handled the instant celebrity as well as can be expected — that is to say, poorly. You're often recognized in the street; not just in Ariadna, but across the Human Sphere.", "Rockstar"), function () {
                            });
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Trapped in a dire situation, you didn't see a way out — until the 112 rescued you. You've been enamored with them ever since. Gain +1 rank in Medicine, and you may choose 112 Emergency Responder as your first career.", "Spirit of the 112", "Trapped in a dire situation, you didn't see a way out — until the 112 rescued you. You've been enamored with them ever since.", "IncreaseMedicine"), function () {
                                character_11.character.freeCareers.push(careers_4.Career.EmergencyResponder);
                            });
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent some time in the Helios orbitals — it didn't suit you at all. Increase the complication range of Extraplanetary tests by 1.", "Astrophobia", "You spent some time in the Helios orbitals — it didn't suit you at all. Increase the complication range of Extraplanetary tests by 1.", ""), function () {
                            });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("An accident left you needing cybernetic replacements; but the local clinic had to make do with what was on hand. Your aug has some quirks, but you've learned how to squeeze the most out of it. You have a cybernetic arm or leg. Increase the Maintenance cost by +1, but add one bonus Momentum on successful tests made with the limb.", "Cybered-Up", "An accident left you needing cybernetic replacements; but the local clinic had to make do with what was on hand. Your aug has some quirks, but you've learned how to squeeze the most out of it. You have a cybernetic arm or leg. Increase the Maintenance cost by +1, but add one bonus Momentum on successful tests made with the limb.", ""), function () {
                            });
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("True or not, your family is believed to have betrayed Ariadna during the Commercial Conflicts. Now that you've come of age, that stigma is yours to bear. Social skill tests with fellow Ariadnans suffer a +2 complication range.", "Infamous Lineage", "True or not, your family is believed to have betrayed Ariadna during the Commercial Conflicts. Now that you've come of age, that stigma is yours to bear. Social skill tests with fellow Ariadnans suffer a +2 complication range.", ""), function () {
                            });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("By yourself, or as part of Dog Nation, Caledonian Independence, or something more sinister — you raged against the system. Gain +1 Morale Soak against authority figures.", "Rebel", "By yourself, or as part of Dog Nation, Caledonian Independence, or something more sinister — you raged against the system. Gain +1 Morale Soak against authority figures.", ""), function () {
                            });
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were entrusted with a weapon that's seen real use. It's seen better days, but you know you can rely on it. When using this weapon, you may roll an additional 1[CD], but you suffer +1 complication range.", "Heirloom Weapon", "You were entrusted with a weapon that's seen real use. It's seen better days, but you know you can rely on it. When using this weapon, you may roll an additional 1[CD], but you suffer +1 complication range.", "HeirloomWeapon"), function () {
                            });
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You got burned once. You vowed not to let it happen twice. Gain +1 rank in Discipline, but suffer +3 complication range on all social skill tests related to positive or pleasant interactions.", "Sardonic", "You got burned once. You vowed not to let it happen twice. Suffer +3 complication range on all social skill tests related to positive or pleasant interactions.", "IncreaseDiscipline"), function () {
                            });
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were fortunate enough to get a real, Ariadnan weapon at an early age; nothing else feels quite right in your hands. Acquire one of the following: Americolt Eagle, Ojotnik, or Teseum Hatchet. Suffer +1 complication range when using other weapons.", "Brand Loyalist", "You were fortunate enough to get a real, Ariadnan weapon at an early age; nothing else feels quite right in your hands. Suffer +1 complication range when using other weapons than your chosen weapon.", "BrandLoyalist"), function () {
                            });
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("An early event left you with a taste for adventure. Add 1 to your Resolve Stress track.", "Pioneer Spirit", "An early event left you with a taste for adventure.", ""), function () {
                                character_11.character.resolveReduction--;
                            });
                        case 19: {
                            var faction_4 = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction_4 === character_11.character.faction) {
                                faction_4 = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction_4).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were awoken in the middle of the night and told to pack your things. Two days later, your old home was a scorch mark, and you were on a new planet. You defect to " + factionName + ".", "Paranoid", "You were awoken in the middle of the night and told to pack your things. Two days later, your old home was a scorch mark, and you were on a new planet. You defect to " + factionName + ".", ""), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.hasDefected = true;
                                character_11.character.faction = faction_4;
                                character_11.character.freeFactionCareerRoll++;
                            });
                        }
                        case 20:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You should have died; but you didn’t. Plenty of Ariadnans don’t believe in luck. But maybe it believes in you. Gain +1 Infinity Point Refresh (maximum 4).", "Lucky", "You should have died; but you didn’t. Plenty of Ariadnans don’t believe in luck. But maybe it believes in you.", ""), function () {
                                character_11.character.infinityPoints++;
                            });
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnAntipodeTable = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You contracted a strange human disease. While it does nothing to Antipodes, you’re highly infectious to humans. When attacking a human target, your claws gain the Biotech quality.", "Plague Rat", "When attacking a human target, your claws gain the Biotech quality."));
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Antipode mental structures are resistant to change, but yours proves especially stubborn. The XP cost of purchasing skills or talents you don’t already have a rank in is increased by +200 XP.", "Traditionalist", "The XP cost of purchasing skills or talents you don’t already have a rank in is increased by +200 XP."));
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your Trinary coalesces well; warts and all. Double the XP cost of gaining or removing character traits.", "Stubborn", "Double the XP cost of gaining or removing character traits."));
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You are kidnapped, and experimented on. While the process is unpleasant, your insides are downright Silken. You may ignore the cost increase for Silk Augmentations.", "Test Subject", "You may ignore the cost increase for Silk Augmentations."));
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Another member of your Trinary suffered a traumatic head injury. Reduce Personality by 1, but gain 1 rank of training in Discipline.", "Fuzzy Link", "Another member of your Trinary suffered a traumatic head injury.", "IncreaseDiscipline"), function () { character_11.character.attributes[attributes_9.Attribute.Personality].value--; });
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You suffered a traumatic head injury. Reduce Intelligence by 1, but gain 1 rank of training in Discipline.", "Slow Thoughts", "You suffered a traumatic head injury.", "IncreaseDiscipline"), function () { character_11.character.attributes[attributes_9.Attribute.Intelligence].value--; });
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You contracted a strange human disease, wreaking havoc on your nervous system. It doesn’t seem to be infectious... yet. Reduce an Attribute of your choice by 1 rank.", "Sickly", "You contracted a strange human disease, wreaking havoc on your nervous system. It doesn’t seem to be infectious... yet.", "ReduceAttribute"));
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The rest of your Trinary is killed by Ariadnans. You were accepted into a new one, but you’ll always bear the scars of the old. Reduce Personality by 1, but gain 1 rank each in Close Combat and Survival.", "Vengeful", "The rest of your Trinary is killed by Ariadnans. You were accepted into a new one, but you’ll always bear the scars of the old.", "IncreaseAllClose Combat|Survival"), function () { character_11.character.attributes[attributes_9.Attribute.Personality].value--; });
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You have a violent reaction to some human chemicals; it seems like you’re allergic to everything. Resistance tests for substances are one difficulty higher.", "Allergies", "Resistance tests for substances are one difficulty higher."));
                        case 10: {
                            var damage_1 = diceRoller_4.DiceRoller.rollSpecial(2, 1);
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your Trinary tried some human drugs. While no one died, valuable lessons were learned this day. Artificial stimulants inflict " + damage_1.hits + " Vigour damage to you, but otherwise work normally.", "Bad Reactions", "Your Trinary tried some human drugs. While no one died, valuable lessons were learned this day."), function () { character_11.character.vigourReduction += damage_1.hits; });
                        }
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You fought alongside a legendary warlord. Increase your Vigour and Resolve by 1.", "Warlike", "You fought alongside a legendary warlord."), function () {
                                character_11.character.vigourReduction--;
                                character_11.character.resolveReduction--;
                            });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("On a raid, your Trinary manages to infect a human woman with the Cuckoo virus; She’s after blood and so’s her family. Increase your resolve by 1.", "Deadly Enemies", "On a raid, your Trinary manages to infect a human woman with the Cuckoo virus; She’s after blood and so’s her family."), function () { character_11.character.resolveReduction--; });
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spend most of your formative years hunting; sneaking up on you is difficult. You gain +2d20 to Surprise tests.", "Hair-Trigger", "You gain +2d20 to Surprise tests."));
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("One of your parents showed up at the head of an Ariadnan Assault Pack. Reduce your resolve by 1.", "Traitor's Blood", "One of your parents showed up at the head of an Ariadnan Assault Pack."), function () { character_11.character.resolveReduction++; });
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You get your hands on some human technology. After a lot of trial and error, you think you’ve got it figured out. Mostly. Choose one category of modern gear (vehicles, firearms, etc.). You do not suffer increased difficulty when using items of that type.", "Dangerously Curious", "", "SelectItemType"));
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Deep into human territory, you evaded patrols for months at a time. Gain 1 rank in Stealth.", "Overconfident", "Deep into human territory, you evaded patrols for months at a time.", "IncreaseStealth"));
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your Trinary cultivated a relationship with some typically-dangerous wildlife. Gain 1 rank in Animal Handling.", "Overly Trusting", "Your Trinary cultivated a relationship with some typically-dangerous wildlife.", "IncreaseAnimal Handling"));
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The humans never spotted you, but you weren’t there to hunt. Just... watch. Gain 1 rank in Psychology.", "Easily Fascinated", "The humans never spotted you, but you weren’t there to hunt. Just… watch.", "IncreasePsychology"));
                        case 19:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While out scouting, your pack was wiped out. Your Trinary is all that remains. Increase your Resolve by 3, and gain an Ariadnan enemy.", "Sole Survivors", "While out scouting, your pack was wiped out. Your Trinary is all that remains. Gain an Ariadnan enemy."), function () { character_11.character.resolveReduction -= 3; });
                        case 20:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your Trinary link is violently severed. While in Mind-Shock, you’re taken in by a group of humans who nurse you back to health, though their reasons are hardly benevolent. You must take Assault Pack Member as your first career.", "Slave", "Your Trinary link is violently severed. While in Mind-Shock, you’re taken in by a group of humans who nurse you back to health, though their reasons are hardly benevolent."), function () { character_11.character.firstCareer = careers_4.Career.AssaultPackMember; });
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnDogfaceAndWulverTable = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Determined to show there’s no correlation between the Cuckoo virus and intelligence, a scientist takes you on as their intern. Gain 1 rank in Science.", "Reckless Curiosity", "Determined to show there’s no correlation between the Cuckoo virus and intelligence, a scientist takes you on as their intern.", "IncreaseScience"));
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You contracted an alien disease, but suffered no consequences yourself. The same cannot be said for your peers. You are considered Inured to Disease.", "Alien Typhoid", "You contracted an alien disease, but suffered no consequences yourself. The same cannot be said for your peers. You are considered Inured to Disease."));
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You ran away, opting for frontier life. Reduce your Earnings by 1.", "Lone Wolf", "You ran away, opting for frontier life."), function () { character_11.character.earnings = Math.max(0, character_11.character.earnings - 1); });
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were killed in the prime of your youth, bravely defending Ariadna from galactic antagonists. At least, that's the official story — you’re still very much alive. What happened? Why the ruse? Gain one level of Social Status, and a debt worth 5 Assets. You may change your faction to O-12 at this time.", "Non-Entity", "You were killed in the prime of your youth, bravely defending Ariadna from galactic antagonists. At least, that's the official story — you’re still very much alive. What happened? Why the ruse? You have a debt worth 5 Assets.", "DefectionO-12"), function () { socialClasses_4.SocialClassesHelper.increaseSocialClass(); });
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You inadvertently destroyed a storefront. Gain a debt worth 7 Assets.", "Bull in a China Shop", "You inadvertently destroyed a storefront. Gain a debt worth 7 Assets."));
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The Loup-Garou are hunting you. What do they think you did? And did you? Reduce Social Status by 1.", "Hunted", "The Loup-Garou are hunting you. What do they think you did? And did you?"), function () { socialClasses_4.SocialClassesHelper.reduceSocialClass(); });
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your transport wrecked, leaving you stranded on the frontier. If not for the timely intervention of a Forest Ranger, you surely would have died out there. Gain +1 rank in Survival, and you may choose Forest Ranger as your first career.", "Snakebitten", "Your transport wrecked, leaving you stranded on the frontier. If not for the timely intervention of a Forest Ranger, you surely would have died out there.", "IncreaseSurvival"), function () { character_11.character.freeCareers.push(careers_4.Career.ForestRanger); });
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your first Dog Nation rally ended in a riot, and with you spending the night in jail. Did you do what they said you did? And did you ever go back? Gain a debt worth 1 Asset, and you may choose Dog Nation Activist as your first Career.", "Rabble-Rouser", "Your first Dog Nation rally ended in a riot, and with you spending the night in jail. Did you do what they said you did? And did you ever go back? Gain a debt worth 1 Asset."), function () { character_11.character.freeCareers.push(careers_4.Career.DogNationActivist); });
                        case 9:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent your summer working at a career fair for young Ariadnans. You got along better than anyone anticipated. You may hazard one career from the Ariadna Faction -1 difficulty.", "Backroom Politicker", "You spent your summer working at a career fair for young Ariadnans. You got along better than anyone anticipated."), function () { character_11.character.hazardDecrease++; });
                        case 10: {
                            var years_1 = Math.floor(Math.random() * 6) + 1;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You didn\u2019t do it. But you saw who did. What did you wind up doing time for? And what became of the true culprit? Spend " + years_1 + " years in jail before starting your first career. Gain a Criminal Record.", "The Usual Suspect", "You didn’t do it. But you saw who did. What did you wind up doing time for? And what became of the true culprit?"), function () {
                                character_11.character.age += years_1;
                                character_11.character.hasCriminalRecord = true;
                            });
                        }
                        case 11: {
                            var years_2 = Math.floor(Math.random() * 11) + 2;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You killed someone. How did it happen, and why did you do it? And what caused you to be set free? Spend " + years_2 + " years in jail before starting your first career. Gain a Criminal Record. You may switch to the Submondo Faction at this time, if you so choose.", "Cold-Blooded Killer", "You killed someone. How did it happen, and why did you do it? And what caused you to be set free?", "DefectionSubmondo"), function () {
                                character_11.character.age += years_2;
                                character_11.character.hasCriminalRecord = true;
                            });
                        }
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You went to space. It was... breathtaking. Gain 1 rank in Extraplanetary.", "Restless", "You went to space. It was... breathtaking.", "IncreaseExtraplanetary"));
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Even with the massive time handicap, you still won the Mat’ Triathlon. Gain 1 rank in Athletics.", "Relentless", "Even with the massive time handicap, you still won the Mat’ Triathlon.", "IncreaseAthletics"));
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("An Antipode appeared outside your window one night. Before he was gunned down, you knew; he was your “father,” in a sense. Trying to kill you was his last action. Reduce your Resolve by 1.", "Between Two Worlds", "An Antipode appeared outside your window one night. Before he was gunned down, you knew; he was your “father,” in a sense. Trying to kill you was his last action."), function () { character_11.character.resolveReduction++; });
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were a local Dog-Bowl legend; there was talk about going pro. Did you? Or did something happen to keep you out? Gain 1 rank in Acrobatics, and you may choose Dog-Bowl player as your first career.", "Showboat", "You were a local Dog-Bowl legend; there was talk about going pro. Did you? Or did something happen to keep you out?", "IncreaseAcrobatics"), function () { character_11.character.freeCareers.push(careers_4.Career.DogBowlPlayer); });
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your jaw grows in a little too well. You don’t look any more fearsome, but your speech is sometimes hard to understand. Increase the difficulty of all Personality-based tests that are not based on intimidation by 1.", "Monstrous", "Increase the difficulty of all Personality-based tests that are not based on intimidation by 1."));
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You experimented with some new drugs; this was an objectively terrible idea. The damage was permanent, but at least you made some new friends. Reduce Intelligence by 1. You may choose Volk as your first career.", "Burnout", "You experimented with some new drugs; this was an objectively terrible idea. The damage was permanent, but at least you made some new friends."), function () {
                                character_11.character.attributes[attributes_9.Attribute.Intelligence].value--;
                                character_11.character.freeCareers.push(careers_4.Career.Volk);
                            });
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Fed up with life, society, and Ariadna itself, you walked into the Antipodean wilds. Why? And how did you survive? Gain 1 rank in Survival.", "Savage", "Fed up with life, society, and Ariadna itself, you walked into the Antipodean wilds. Why? And how did you survive?", "IncreaseSurvival"));
                        case 19: {
                            var faction = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction === factions_10.Faction.Ariadna) {
                                faction = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("During an Antipode attack, instead of protecting you, the local militia gunned you down without warning. You \u2014 and everyone else \u2014 assumed that you were dead. Instead, you woke up in a strange place. It was then that your family came clean. You defect to the " + factionName + " faction. You may roll on your new faction\u2019s career table for your first career at no cost.", "Turncoat", "During an Antipode attack, instead of protecting you, the local militia gunned you down without warning. You — and everyone else — assumed that you were dead. Instead, you woke up in a strange place. It was then that your family came clean."), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.faction = faction;
                                character_11.character.freeFactionCareerRoll++;
                            });
                        }
                        case 20:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You should have died; but you didn’t. Dog-Blooded usually have rotten luck. Maybe you’re the exception. Maybe not.", "Strange Luck", "You should have died; but you didn’t. Dog-Blooded usually have rotten luck. Maybe you’re the exception. Maybe not."), function () { character_11.character.infinityPoints = Math.min(4, character_11.character.infinityPoints + 1); });
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnHaqqislamTable = function (roll) {
                    switch (roll) {
                        case 1:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Even though it cost you most of your friends, you stood by your beliefs. Reduce Personality by 1 but increase Willpower by 1.", "Stubborn", "Even though it cost you most of your friends, you stood by your beliefs."), function () {
                                character_11.character.attributes[attributes_9.Attribute.Personality].value--;
                                character_11.character.attributes[attributes_9.Attribute.Willpower].value++;
                            });
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("So what if there was a sandstorm? Your friend needed an antivenom, and you were determined to see that they got it. Increase Resolve by 1 rank.", "Sãlik!", "So what if there was a sandstorm? Your friend needed an antivenom, and you were determined to see that they got it."), function () { character_11.character.resolveReduction--; });
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The Mutazilite and Tasawwuf aren’t oppositional; even so, you found yourself strongly drawn to one over the other. Gain 1 rank in Analysis.", "Unbalanced", "The Mutazilite and Tasawwuf aren’t oppositional; even so, you found yourself strongly drawn to one over the other", "IncreaseAnalysis"), function () { });
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You wake up to find your parents left in the middle of the night; you’re told they defected. Your Status becomes Al-Mustaslaha.", "Divided Loyalties", "You wake up to find your parents left in the middle of the night; you’re told they defected."), function () { character_11.character.socialClass = socialClasses_4.SocialClass.AlMustaslaha_Orphaned; });
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Maybe you knew what you were getting into, maybe not; either way, you were caught helping a Silk smuggling ring, and the authorities were not amused. Either spend 1-6 years in jail and gain a Criminal Record, or gain a 10 Asset debt.", "It Takes One To Know One", "Maybe you knew what you were getting into, maybe not; either way, you were caught helping a Silk smuggling ring, and the authorities were not amused.", "JailOrDebtHaqqislam"), function () { });
                        case 6:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your logical mind attracts a prominent Mutazilite mentor. Gain 1 rank in Education and your new mentor as a contact.", "Bookworm", "Your logical mind attracts a prominent Mutazilite mentor. You gain your new mentor as a contact.", "IncreaseEducation"), function () { });
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Trying to meet your mentor’s expectations, you wound up hospitalized for a year. What happened? Reduce Vigour by 1 but gain 1 rank in Discipline.", "Crushing Expectations", "Trying to meet your mentor’s expectations, you wound up hospitalized for a year. What happened?", "IncreaseDiscipline"), function () { character_11.character.vigourReduction++; });
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Flaunting conventional interpretations of taharah , you underwent radical body modification. Why did you do it? Gain Cosmetic Augmentation 2.", "Rebel", "Flaunting conventional interpretations of taharah , you underwent radical body modification. Why did you do it?"), function () { character_11.character.addEquipment("Cosmetic Augmentation 2"); });
                        case 9: {
                            var cost = diceRoller_4.DiceRoller.rollSpecial(5, 5).hits;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A routine run-in with a Funduq Viper nearly proved fatal, but at least it highlighted your condition. Reduce Vigour by 1 and add +1 Momentum to all damage from Contagions. Bolstering your immune system is possible, but expensive; it will cost " + cost + " Assets to reverse the effects.", "Weak Immune System", "A routine run-in with a Funduq Viper nearly proved fatal, but at least it highlighted your condition. Add +1 Momentum to all damage from Contagions. Bolstering your immune system is possible, but expensive; it will cost " + cost + " Assets to reverse the effects."), function () { character_11.character.vigourReduction++; });
                        }
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("A school trip to the University of Medina captured your imagination. You may choose Academic as your first career.", "Insatiably Curious", "A school trip to the University of Medina captured your imagination."), function () { character_11.character.freeCareers.push(careers_4.Career.Academic); });
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While at a caravanserai, you witnessed a serious hack. What happened? Who was responsible? Either gain 1 in Hacking or increase your geist's Firewall by 2.", "Paranoid", "While at a caravanserai, you witnessed a serious hack. What happened? Who was responsible?", "ImproveHackingOrGeist"), function () { });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your insightful nature attracts the attention of the Haqq Tasawwuf. Gain 1 rank in Analysis and your new mentor as contact.", "Free Spirit", "Your insightful nature attracts the attention of the Haqq Tasawwuf. You gain your new mentor as a contact.", "IncreaseAnalysis"), function () { });
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were stabbed in the back; possibly literally. Gain 1 rank in Psychology.", "Trust Issues", "You were stabbed in the back; possibly literally.", "IncreasePsychology"), function () { });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("One of your mentors is murdered. Their family suspects Hassassins, the Muhafiz are questioning PanOceania, and the Nomads blame ALEPH, though no one asked you. Only you know the truth. What is it? Increase Resolve by 1.", "Vengeful", "One of your mentors is murdered. Their family suspects Hassassins, the Muhafiz are questioning PanOceania, and the Nomads blame ALEPH, though no one asked you. Only you know the truth. What is it?"), function () { character_11.character.resolveReduction--; });
                        case 15: {
                            var years_3 = Math.floor(Math.random() * 6) + 1;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Chasing thrills, you snuck out to a Thronging. Turns out, drag races weren\u2019t the worst they got up to. You spend " + years_3 + " years in jail and gain a Criminal Record. You may choose Kum Ganger as your first career.", "Friends in Low Places", "Chasing thrills, you snuck out to a Thronging. Turns out, drag races weren\u2019t the worst they got up to. You spend " + years_3 + " years in jail and gain a Criminal Record."), function () {
                                character_11.character.age += years_3;
                                character_11.character.freeCareers.push(careers_4.Career.KumGanger);
                            });
                        }
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Disaster struck, but it missed you. You were saved by the most beautiful person you’d ever seen. Gain 1 rank in Observation. You may take Odalisque as your first career.", "Wandering Eyes", "Disaster struck, but it missed you. You were saved by the most beautiful person you’d ever seen.", "IncreaseObservation"), function () { character_11.character.freeCareers.push(careers_4.Career.Odalisque); });
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You’re chosen to represent your school at a competition between G-5 nations. Unfortunately, you freeze up. Your social skill tests suffer +2 complication range with members of the Haqqislam faction.", "Freeze Response", "Your social skill tests suffer +2 complication range with members of the Haqqislam faction."), function () { });
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your failing health is finally stabilized, but the drug cocktail interacts poorly with common treatments. Serum provides no bonuses, instead dealing 1+2[CD] damage if applied.", "Myriad Medications", "Your failing health is finally stabilized, but the drug cocktail interacts poorly with common treatments. Serum provides no bonuses, instead dealing 1+2[CD] damage if applied."), function () { });
                        case 19: {
                            var newFaction = factions_10.FactionsHelper.generateFaction(false, true);
                            while (newFaction === character_11.character.faction) {
                                newFaction = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var newFactionName = factions_10.FactionsHelper.getFaction(newFaction).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("After months of debate in the Khaniqah, you finally ceded the argument. In that moment, you knew what you had to do. You defect to the " + newFactionName + " faction.", "Ideologue", "After months of debate in the Khaniqah, you finally ceded the argument. In that moment, you knew what you had to do. You defected to the " + newFactionName + " faction."), function () {
                                character_11.character.faction = newFaction;
                                character_11.character.hasDefected = true;
                            });
                        }
                        case 20:
                            if (character_11.character.isAlMustaslaha()) {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You sought enlightenment in Bourak’s deserts, but never returned from your pilgrimage. You were brought back from the brink of death. It seems that Allah is not done with you yet.", "Blind Faith", "You sought enlightenment in Bourak’s deserts, but never returned from your pilgrimage. You were brought back from the brink of death. It seems that Allah is not done with you yet."), function () {
                                    character_11.character.vigourReduction += 2;
                                    character_11.character.resolveReduction--;
                                });
                            }
                            else {
                                return new AdolescenceEventModel(new eventModel_5.EventModel("You sought enlightenment in Bourak’s deserts, but never returned from your pilgrimage. You died and was resurrected.", "Blind Faith", "You sought enlightenment in Bourak’s deserts, but never returned from your pilgrimage. You died and was resurrected.", "Resurrection"), function () { });
                            }
                    }
                    return null;
                };
                AdolescenceEvents.prototype.rollOnPanOceaniaTable = function (roll) {
                    switch (roll) {
                        case 1: {
                            var cost = diceRoller_4.DiceRoller.rollSpecial(8, 10);
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You were selected to be fitted with bleeding edge Mayacasting tech\u2014with a few corporate strings attached. Gain Full-Sensorium Maya Integration, but your geist has become fond of advertisements. Increase your complication range by +1 due to untimely distractions. Removing the ads will cost " + cost.hits + " Assets but will remove this penalty.", "Pop-Ups", "Gain Full-Sensorium Maya Integration, but your geist has become fond of advertisements. Increase your complication range by +1 due to untimely distractions. Removing the ads will cost " + cost.hits + " Assets but will remove this penalty."), function () { });
                        }
                        case 2:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You tried to modify your geist, with poor results. Reduce your geist’s Firewall by 1.", "Faulty Geist", "You tried to modify your geist, with poor results."), function () { character_11.character.geist.firewallBonus--; });
                        case 3:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Trying to meet your mentor’s expectations, you wound up hospitalized for a year. What happened? Reduce Vigour by 1 and gain 1 rank in Discipline.", "Crushing Expectations", "Trying to meet your mentor’s expectations, you wound up hospitalized for a year. What happened?", "IncreaseDiscipline"), function () { character_11.character.vigourReduction++; });
                        case 4:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You tried to modify your geist, with mixed results. Reduce your geist’s Firewall by 1 but increase their Morale by 1.", "Hyperactive Geist", "You tried to modify your geist, with mixed results"), function () {
                                character_11.character.geist.firewallBonus--;
                                character_11.character.geist.moraleBonus++;
                            });
                        case 5:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Your family’s fortunes more than enabled your bad spending habits. Gain a 5 asset debt but gain 1 rank in Lifestyle.", "Spendthrift", "Your family’s fortunes more than enabled your bad spending habits. Gain a 5 asset debt.", "IncreaseLifestyle"), function () { });
                        case 6: {
                            var amount_1 = diceRoller_4.DiceRoller.rollSpecial(4, 1);
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You discovered an underground nightclub scene\u2014and the party favours to go with it. You are addicted to Bounce. Begin play with " + amount_1.hits + " doses.", "Bounce-Bunny", "You have become addicted to Bounce."), function () { character_11.character.addEquipment("Bounce (" + amount_1.hits + " Doses)"); });
                        }
                        case 7:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Although raised in a religious household, you began to question everything. How did this inform your beliefs? Gain 1 rank in Analysis.", "Skeptic", "Although raised in a religious household, you began to question everything. How did this inform your beliefs?", "IncreaseAnalysis"), function () { });
                        case 8:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away. Did you let them? If so, what was the cost?", "It Takes One To Know One", "Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away. Did you let them? If so, what was the cost?", "JailOrDebtPanO"), function () { });
                        case 9: {
                            var debt = diceRoller_4.DiceRoller.rollSpecial(6, 1);
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You tasted stardom as part of a popular children\u2019s Maya broadcast. You handled the celebrity better than expected, but you never did learn financial restraint. People still recognize you on occasion. Gain a debt of " + debt.hits + " Assets. Additionally, reduce the difficulty of all Lifestyle tests by 1 (to a minimum of 0) with individuals who recognize you.", "Former Child Star", "Gain a debt of " + debt.hits + " Assets. Additionally, reduce the difficulty of all Lifestyle tests by 1 (to a minimum of 0) with individuals who recognize you."), function () { });
                        }
                        case 10:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You had the misfortune of experiencing a Libertos attack first-hand. Separated from your family, it was hours before rescue services found you. Always looking for trouble, you may reroll 1d20 when making a surprise test but must accept the new result.", "Suspicious", "Always looking for trouble, you may reroll 1d20 when making a surprise test but must accept the new result."), function () { });
                        case 11:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You spent some time living in an orbital—it didn’t suit you at all. Increase the complication range of Extraplanetary tests by 1.", "Astrophobia", "You spent some time living in an orbital—it didn’t suit you at all. Increase the complication range of Extraplanetary tests by 1."), function () { });
                        case 12:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("While traveling to orbit, your pilot suffered a heart attack. Turns out all those hours in sensorium flight sims paid off. Gain 1 rank in either Pilot or Spacecraft", "Big Damn Hero", "While traveling to orbit, your pilot suffered a heart attack. Turns out all those hours in sensorium flight sims paid off.", "IncreasePilot|Spacecraft"), function () { });
                        case 13:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You became heavily involved in the Maya ARG scene. Gain 1 rank in Analysis.", "Amateur Sleuth", "You became heavily involved in the Maya ARG scene.", "IncreaseAnalysis"), function () { });
                        case 14:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("An accident left you needing cybernetic replacements. Luckily, you got some cutting-edge tech. Maintaining your aug is expensive, but it routinely outperforms the competition. You have a cybernetic arm or leg. Increase the Maintenance cost by 1 but add one bonus Momentum on successful tests made with the limb.", "Aug Addict", "An accident left you needing cybernetic replacements. Luckily, you got some cutting-edge tech. Maintaining your aug is expensive, but it routinely outperforms the competition.", "CyberneticLegOrArm"), function () { });
                        case 15:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You got so involved in a Maya fandom that your health started to suffer for it. Reduce Vigour by 1.", "Couch Potato", "You got so involved in a Maya fandom that your health started to suffer for it."), function () { character_11.character.vigourReduction++; });
                        case 16:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You trusted someone, and they burned you—hard. You’re not going to let it happen again. Gain 1 rank in Discipline but suffer +1 complication range on all social skill tests where trust is a factor.", "Won't Get Fooled Again", "You trusted someone, and they burned you—hard. You’re not going to let it happen again. You suffer +1 complication range on all social skill tests where trust is a factor.", "IncreaseDiscipline"), function () { });
                        case 17:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("You know the difference between genuine, Made-in-PanOceania gear and the knock-offs. And you hate to settle for less. Gain +2[CD] Morale Soak when wearing exclusively PanOceanian Armour or clothing but increase your complication range by 1 when you’re not.", "Brand Loyalist", "Gain +2[CD] Morale Soak when wearing exclusively PanOceanian Armour or clothing but increase your complication range by 1 when you’re not."), function () { });
                        case 18:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The Church left a strongly favourable impression on you. Add 1 to your Resolve Stress track. You may choose Priest as your first career.", "Pious", "The Church left a strongly favourable impression on you."), function () {
                                character_11.character.resolveReduction++;
                                character_11.character.freeCareers.push(careers_4.Career.Priest);
                            });
                        case 19: {
                            var faction_5 = factions_10.FactionsHelper.generateFaction(false, true);
                            while (faction_5 === character_11.character.faction) {
                                faction_5 = factions_10.FactionsHelper.generateFaction(false, true);
                            }
                            var factionName = factions_10.FactionsHelper.getFaction(faction_5).name;
                            return new AdolescenceEventModel(new eventModel_5.EventModel("One of your most deeply-held beliefs about your home is turned on its head. What happened? Why did it lead to you leaving PanOceania? You defect to " + factionName + ".", "Disillusioned", "One of your most deeply-held beliefs about your home is turned on its head. What happened? Why did it lead to you leaving PanOceania?"), function () {
                                character_11.character.heritage = character_11.character.faction;
                                character_11.character.faction = faction_5;
                                character_11.character.hasDefected = true;
                            });
                        }
                        case 20:
                            return new AdolescenceEventModel(new eventModel_5.EventModel("The recall didn’t catch you in time, but the resulting scandal ensured you didn’t waste away inside a Resurrection queue. Your character died and was resurrected.", "Bitter", "The recall didn’t catch you in time, but the resulting scandal ensured you didn’t waste away inside a Resurrection queue. Your character died and was resurrected.", "Resurrection"), function () { character_11.character.applyDeath(); });
                    }
                };
                return AdolescenceEvents;
            }());
            exports_20("AdolescenceEvents", AdolescenceEvents);
            exports_20("AdolescenceEventsHelper", AdolescenceEventsHelper = new AdolescenceEvents());
        }
    }
});
System.register("helpers/equipment", ["common/character", "helpers/skills"], function(exports_21, context_21) {
    "use strict";
    var __moduleName = context_21 && context_21.id;
    var character_12, skills_11;
    var ItemType, WeaponType, WeaponSize, Item, Equipment, EquipmentHelper;
    return {
        setters:[
            function (character_12_1) {
                character_12 = character_12_1;
            },
            function (skills_11_1) {
                skills_11 = skills_11_1;
            }],
        execute: function() {
            (function (ItemType) {
                ItemType[ItemType["Armor"] = 0] = "Armor";
                ItemType[ItemType["Weapon"] = 1] = "Weapon";
                ItemType[ItemType["Ammo"] = 2] = "Ammo";
            })(ItemType || (ItemType = {}));
            exports_21("ItemType", ItemType);
            (function (WeaponType) {
                WeaponType[WeaponType["Grenade"] = 0] = "Grenade";
                WeaponType[WeaponType["Melee"] = 1] = "Melee";
                WeaponType[WeaponType["Ranged"] = 2] = "Ranged";
            })(WeaponType || (WeaponType = {}));
            exports_21("WeaponType", WeaponType);
            (function (WeaponSize) {
                WeaponSize[WeaponSize["OneHanded"] = 0] = "OneHanded";
                WeaponSize[WeaponSize["TwoHanded"] = 1] = "TwoHanded";
                WeaponSize[WeaponSize["Unbalanced"] = 2] = "Unbalanced";
                WeaponSize[WeaponSize["Unwieldy"] = 3] = "Unwieldy";
            })(WeaponSize || (WeaponSize = {}));
            exports_21("WeaponSize", WeaponSize);
            Item = (function () {
                function Item(listName, sheetName, type, properties) {
                    this.listName = listName;
                    this.sheetName = sheetName;
                    this.type = type;
                    this.properties = properties;
                }
                return Item;
            }());
            Equipment = (function () {
                function Equipment() {
                    this._weapons = [
                        new Item("Knife", "Knife", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["Conc1", "NonH", "Sub2", "Thr", "Unf1"]
                        }),
                        new Item("Implanted Knife", "Implanted Knife", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["Aug", "Conc2", "Neural", "NonH", "Sub2", "Unf1"]
                        }),
                        new Item("Sword", "Sword", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.Unbalanced, damageBonus: 1, damageDice: 5,
                            qualities: ["NonH", "Par2", "Vic1"]
                        }),
                        new Item("Blade of St. George", "Blade of St. George", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Griev", "NonH", "Par2", "Pcng2", "Vic1"]
                        }),
                        new Item("Axe", "Axe", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.Unbalanced, damageBonus: 1, damageDice: 5,
                            qualities: ["NonH", "Thr", "Vic1"]
                        }),
                        new Item("Tonfa Bangles", "Tonfa Bangles", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["Conc2", "Par1"]
                        }),
                        new Item("Grazeblade", "Grazeblade", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Break", "NonH", "Stun", "Sub2", "Thr", "Tox3"]
                        }),
                        new Item("Teseum Chopper", "Teseum Chopper", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.Unbalanced, damageBonus: 1, damageDice: 5,
                            qualities: ["NonH", "Pcng4", "Vic2"]
                        }),
                        new Item("Teseum Claymore", "Teseum Claymore", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.TwoHanded, damageBonus: 2, damageDice: 5,
                            qualities: ["Griev", "NonH", "Parr2", "Pcng2", "Vic2"]
                        }),
                        new Item("Teseum Hatchet", "Teseum Hatchet", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["NonH", "Sub1", "Pcng2", "Thr", "Vic1"]
                        }),
                        new Item("Stun Baton", "Stun Baton", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["NonH", "Knock", "Sub1", "Stun"]
                        }),
                        new Item("Garrotte", "Garrotte", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["NonH", "Conc2", "Sub2", "Unf1"]
                        }),
                        new Item("Pistol", "Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Breaker Pistol", "Breaker Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Vrabec Pistol", "Vrabec Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1", "Conc", "Sub1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Combi Rifle", "Combi Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Exp1", "MultL", "Vic1"],
                            range: "C/M", burst: 2
                        }),
                        new Item("Assault Pistol", "Assault Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unbalanced, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1"],
                            range: "R/C", burst: 2
                        }),
                        new Item("Heavy Pistol", "Heavy Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unbalanced, damageBonus: 2, damageDice: 4,
                            qualities: ["Unf1", "Vic1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Boarding Shotgun", "Boarding Shotgun", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Knock", "MultM"],
                            range: "C", burst: 1
                        }),
                        new Item("T2 Boarding Shotgun", "T2 Boarding Shotgun", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Knock"],
                            range: "C", burst: 1
                        }),
                        new Item("Sniper Rifle", "Sniper Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unwieldy, damageBonus: 1, damageDice: 6,
                            qualities: ["Unf2"],
                            range: "L", burst: 3
                        }),
                        new Item("Viral Sniper Rifle", "Viral Sniper Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unwieldy, damageBonus: 1, damageDice: 6,
                            qualities: ["Unf2", "Bio", "Griev", "Tox2"],
                            range: "L", burst: 3
                        }),
                        new Item("DT Sniper Rifle", "DT Sniper Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unwieldy, damageBonus: 1, damageDice: 6,
                            qualities: ["Unf2", "Bio", "Tox1", "Vic1"],
                            range: "L", burst: 3
                        }),
                        new Item("MULTI Sniper Rifle", "MULTI Sniper Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unwieldy, damageBonus: 1, damageDice: 6,
                            qualities: ["Unf2", "MultM", "MultH"],
                            range: "L", burst: 2
                        }),
                        new Item("AP Pistol", "AP Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Rifle", "Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["MultL", "Vic1"],
                            range: "M", burst: 2
                        }),
                        new Item("Rifle with Light Shotgun", "Rifle with Light Shotgun", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["MultL", "Vic1", "LightShotgun"],
                            range: "M", burst: 2
                        }),
                        new Item("AP Rifle", "AP Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["MultL", "Vic1"],
                            range: "M", burst: 2
                        }),
                        new Item("Viral Pistol", "Viral Pistol", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1", "Bio", "Griev", "Tox2"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Light Shotgun", "Light Shotgun", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unbalanced, damageBonus: 1, damageDice: 4,
                            qualities: ["Knock"],
                            range: "C", burst: 1
                        }),
                        new Item("Panzerfaust", "Panzerfaust", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 2, damageDice: 5,
                            qualities: ["Munition", "Unsubtle"],
                            range: "L", burst: 1
                        }),
                        new Item("Light Grenade Launcher", "Light Grenade Launcher", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unbalanced, damageBonus: 2, damageDice: 4,
                            qualities: ["Area(C)", "Munition", "SpecFire"],
                            range: "M", burst: 1
                        }),
                        new Item("Spitfire", "Spitfire", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Spread2", "Unsubtle"],
                            range: "M", burst: 3
                        }),
                        new Item("E/M Grenade", "E/M Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Vic1"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Adhesive Grenade", "Adhesive Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["Disp", "Imm", "Ind(C)", "Knock", "NonL", "SpecFi", "Thr", "Unsub"]
                        }),
                        new Item("Banshee Grenade", "Banshee Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["Deaf", "Disp", "Ind(C)", "NonL", "SpecFi", "Stun", "Terr3", "Thr", "Unsub"]
                        }),
                        new Item("Smoke Grenade", "Smoke Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["Disp", "Ind(C)", "NonL", "SpecFi", "Smoke2", "Thr"]
                        }),
                        new Item("Americolt Eagle", "Americolt Eagle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unbalanced, damageBonus: 2, damageDice: 5,
                            qualities: ["Vic1", "Pcng1", "NonH", "Knock"],
                            range: "R/C", burst: 1
                        }),
                        new Item("Ojotnik", "Ojotnik", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.Unwieldy, damageBonus: 1, damageDice: 6,
                            qualities: ["Unf3"],
                            range: "M", burst: 2
                        }),
                        new Item("Sgian Dubh", "Sgian Dubh", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["Conc2", "NonH", "Sub2", "Unf1"]
                        }),
                        new Item("Tactical Bow", "Tactical Bow", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 3,
                            qualities: ["NonH", "Sub2", "Vic2"],
                            range: "C", burst: 1
                        }),
                        new Item("Chain Rifle", "Chain Rifle", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 6,
                            qualities: ["Spread1", "Torr", "Vic1"],
                            range: "C", burst: 1
                        }),
                        new Item("Nanopulser", "Nanopulser", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.TwoHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["Bio", "Comms", "Disp", "Torr", "Vic2"],
                            range: "C", burst: 1
                        }),
                        new Item("Pollock Grenade", "Pollock Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["ExplGren", "Disp", "Ind(C)", "NonL", "SpecFi", "Throw", "Unsub", "Marker"]
                        }),
                        new Item("Malasartes Grenade", "Malasartes Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["ExplGren", "Disp", "Ind(C)", "NonL", "Reflect1", "Throw", "Unsub", "SpecFi"]
                        }),
                        new Item("Mere 1", "Mere 1", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Heritage1", "Knock", "Stun", "Vic2"]
                        }),
                        new Item("Mere 2", "Mere 2", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Heritage2", "Knock", "Stun", "Vic2"]
                        }),
                        new Item("Mere 3", "Mere 3", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Heritage3", "Knock", "Stun", "Vic2"]
                        }),
                        new Item("Mere 4", "Mere 4", ItemType.Weapon, {
                            weaponType: WeaponType.Melee, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 4,
                            qualities: ["Heritage4", "Knock", "Stun", "Vic2"]
                        }),
                        new Item("Banduk", "Banduk", ItemType.Weapon, {
                            weaponType: WeaponType.Ranged, size: WeaponSize.OneHanded, damageBonus: 1, damageDice: 5,
                            qualities: ["NonL"],
                            range: "C/M", burst: 1
                        }),
                        new Item("Adarsana Grenade", "Adarsana Grenade", ItemType.Weapon, {
                            weaponType: WeaponType.Grenade, size: WeaponSize.OneHanded, damageBonus: 0, damageDice: 0,
                            qualities: ["Disp", "Ind(M)", "NonL", "SpecFi", "Unsub", "Thr"]
                        }),
                    ];
                    this._armor = [
                        new Item("Ballistic Vest", "Ballistic Vest", ItemType.Armor, { head: 0, arms: 0, torso: 2, legs: 0, qualities: ["Hidden1"] }),
                        new Item("Armoured Clothing", "Armoured Clothing", ItemType.Armor, { head: 0, arms: 1, torso: 1, legs: 1, qualities: ["Hidden2"] }),
                        new Item("Light Combat Armour", "Light Combat Armour", ItemType.Armor, { head: 1, arms: 1, torso: 2, legs: 1, qualities: [] }),
                        new Item("Medium Combat Armour", "Medium Combat Armour", ItemType.Armor, { head: 2, arms: 2, torso: 3, legs: 2, qualities: [] }),
                        new Item("Powered Combat Armour", "Powered Combat Armour", ItemType.Armor, { head: 4, arms: 3, torso: 5, legs: 3, qualities: ["Comms", "Exo 1", "Kinematica", "Self-Repair"] }),
                        new Item("Knight of Santiago Armour", "Knight of Santiago Armour", ItemType.Armor, { head: 4, arms: 3, torso: 5, legs: 3, qualities: ["Comms", "Exo 1", "Kinematica", "Self-Repair", "Santiago"] }),
                        new Item("Crashsuit", "Crashsuit", ItemType.Armor, { head: 3, arms: 3, torso: 3, legs: 3, qualities: ["Disp"] }),
                        new Item("Long ModCoat", "Long ModCoat", ItemType.Armor, { head: 0, arms: 1, torso: 1, legs: 1, qualities: ["Hidden2"] }),
                        new Item("Khafiin Microservor Armour", "Khafiin Microservor Armour", ItemType.Armor, { head: 2, arms: 3, torso: 3, legs: 3, qualities: ["Comms", "Exo 1", "Self-Repair"] }),
                        new Item("Ad-Qali Armour 2", "Ad-Qali Armour 2", ItemType.Armor, { head: 2, arms: 2, torso: 2, legs: 2, qualities: ["SocialBonus"] }),
                        new Item("Hexas Nightwear", "Hexas Nightwear", ItemType.Armor, { head: 0, arms: 1, torso: 1, legs: 1, qualities: ["Hidden2", "Kinematica", "ThermoCamo"] }),
                    ];
                    this._ammo = [
                        new Item("Standard Reload", "Standard", ItemType.Ammo, { qualities: [] }),
                        new Item("AP Reload", "Armour-Piercing", ItemType.Ammo, { qualities: ["Pcng2"] }),
                        new Item("Standard Shell Reload", "Standard Shell", ItemType.Ammo, { qualities: [] }),
                        new Item("AP Shell Reload", "Armour-Piercing Shell", ItemType.Ammo, { qualities: ["Pcng3"] }),
                        new Item("Adhesive Shell Reload", "Adhesive Shell", ItemType.Ammo, { qualities: ["Area(C)", "Imm", "Imp1", "NonL", "Unsub"] }),
                        new Item("AP Arrow Reload", "Armour-Piercing Arrow", ItemType.Ammo, { qualities: ["Pcng2"] }),
                        new Item("Silver Bullet Reload", "Silver Bullet", ItemType.Ammo, { qualities: ["Silver"] }),
                        new Item("Eagle Reload", "Eagle Reload", ItemType.Ammo, { qualities: ["Unsub", "Pcng3"] }),
                    ];
                }
                Equipment.prototype.getWeapons = function () {
                    return this._weapons;
                };
                Equipment.prototype.getWeaponByName = function (name) {
                    for (var i = 0; i < this._weapons.length; i++) {
                        var weapon = this._weapons[i];
                        if (weapon.listName === name) {
                            return weapon;
                        }
                    }
                    return null;
                };
                Equipment.prototype.getArmorByName = function (name) {
                    for (var i = 0; i < this._armor.length; i++) {
                        var armor = this._armor[i];
                        if (armor.listName === name) {
                            return armor;
                        }
                    }
                    return null;
                };
                Equipment.prototype.getAmmo = function (name) {
                    for (var i = 0; i < this._ammo.length; i++) {
                        var ammo = this._ammo[i];
                        if (name.indexOf(ammo.listName) > -1) {
                            return ammo;
                        }
                    }
                    return null;
                };
                Equipment.prototype.sizeToString = function (size) {
                    switch (size) {
                        case WeaponSize.OneHanded: return "1H";
                        case WeaponSize.TwoHanded: return "2H";
                        case WeaponSize.Unbalanced: return "U";
                        case WeaponSize.Unwieldy: return "UW";
                    }
                    return "";
                };
                Equipment.prototype.handleSpecialEquipment = function (eq) {
                    if (eq === "Geist Upgrade: +2 Psychology") {
                        character_12.character.geist.skills[skills_11.Skill.Psychology].expertise += 2;
                        return true;
                    }
                    else if (eq === "Geist Upgrade: +2 Education ranks") {
                        character_12.character.geist.skills[skills_11.Skill.Education].expertise += 2;
                        return true;
                    }
                    else if (eq === "Pistol and Stun Baton") {
                        character_12.character.addEquipment("Pistol");
                        character_12.character.addEquipment("Stun Baton");
                        return true;
                    }
                    return false;
                };
                return Equipment;
            }());
            exports_21("EquipmentHelper", EquipmentHelper = new Equipment());
        }
    }
});
System.register("helpers/fryEvents", ["common/character", "helpers/careerEvents", "common/eventModel", "helpers/careers", "helpers/attributes", "helpers/birthPlaces"], function(exports_22, context_22) {
    "use strict";
    var __moduleName = context_22 && context_22.id;
    var character_13, careerEvents_4, eventModel_6, careers_5, attributes_10, birthPlaces_3;
    var FryEvents, FryEventsHelper;
    return {
        setters:[
            function (character_13_1) {
                character_13 = character_13_1;
            },
            function (careerEvents_4_1) {
                careerEvents_4 = careerEvents_4_1;
            },
            function (eventModel_6_1) {
                eventModel_6 = eventModel_6_1;
            },
            function (careers_5_1) {
                careers_5 = careers_5_1;
            },
            function (attributes_10_1) {
                attributes_10 = attributes_10_1;
            },
            function (birthPlaces_3_1) {
                birthPlaces_3 = birthPlaces_3_1;
            }],
        execute: function() {
            FryEvents = (function () {
                function FryEvents() {
                }
                FryEvents.prototype.generateEvent = function (doubleEvent) {
                    if (doubleEvent === void 0) { doubleEvent = false; }
                    var roll1 = Math.floor(Math.random() * 20) + (doubleEvent ? 1 : 0);
                    var roll2 = Math.floor(Math.random() * 11) + 2;
                    switch (roll1) {
                        case 1:
                        case 2:
                        case 3:
                        case 4: {
                            switch (roll2) {
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod clashed with a rival pod; the fighting was intense, and you lost someone close to you. Reduce your Resolve by 1.", "", "Your pod clashed with a rival pod; the fighting was intense, and you lost someone close to you."), function () { character_13.character.resolveReduction++; });
                                case 6:
                                case 7:
                                case 8:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod clashed with a rival pod; the fighting was intense, and you lost people close to you on both sides.", "Pod Rivalry", "Your pod clashed with a rival pod; the fighting was intense, and you lost people close to you on both sides."));
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod clashed with a rival pod; the fighting was intense, and despite your youth, you took a life with your own hands. Gain 1 rank in Close Combat.", "", "Your pod clashed with a rival pod; the fighting was intense, and despite your youth, you took a life with your own hands.", "IncreaseClose Combat"));
                            }
                        }
                        case 5:
                        case 6:
                        case 7:
                        case 8: {
                            switch (roll2) {
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Libertos came to your pod, trying to recruit it. Some left to join the cause, while others rebuffed the strangers; but everyone fought, and your Pojju split that day. Reduce your Vigour by 1 from the injuries you sustained.", "", "Libertos came to your pod, trying to recruit it. Some left to join the cause, while others rebuffed the strangers; but everyone fought, and your Pojju split that day."), function () { character_13.character.vigourReduction++; });
                                case 6:
                                case 7:
                                case 8:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Libertos came to your pod, trying to recruit it. Some left to join the cause, others rebuffed it, but either way, your Pojju split that day.", "Pojju Recruitment", "Libertos came to your pod, trying to recruit it. Some left to join the cause, others rebuffed it, but either way, your Pojju split that day."));
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Libertos came to your pod, trying to recruit it. When it became clear that you weren’t interested, they forced the issue. You didn’t know how to fight, but that didn’t stop any of you; your pod banded together to protect its own. Increase both your Resolve and your Vigour by 1 rank each.", "", "Libertos came to your pod, trying to recruit it. When it became clear that you weren’t interested, they forced the issue. You didn’t know how to fight, but that didn’t stop any of you; your pod banded together to protect its own."), function () {
                                        character_13.character.vigourReduction--;
                                        character_13.character.resolveReduction--;
                                    });
                            }
                        }
                        case 9:
                        case 10:
                        case 11:
                        case 12: {
                            switch (roll2) {
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Members of your pod were abducted. Your Pojju never really recovered, drifting apart over the next few years. Reduce your Resolve by 1. You can choose to take Libertos Member as your first career.", "", "Members of your pod were abducted. Your Pojju never really recovered, drifting apart over the next few years. Reduce your Resolve by 1."), function () { character_13.character.freeCareers.push(careers_5.Career.LibertosMember); });
                                case 6:
                                case 7:
                                case 8:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Members of your pod wanted to go to the surface, but as you didn’t have legs yet, you stayed behind with a neighboring pod. Did they ever return? Did you rejoin them if they did?", "", "Members of your pod wanted to go to the surface, but as you didn’t have legs yet, you stayed behind with a neighboring pod. Did they ever return? Did you rejoin them if they did?"));
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("A group of human scientists traveled with your pod for a time. Were they friendly? Cold? Could you even communicate with them? Gain 1 rank in Awareness. You can also select Human Education as your education.", "", "A group of human scientists traveled with your pod for a time. Were they friendly? Cold? Could you even communicate with them?"), function () {
                                        character_13.character.attributes[attributes_10.Attribute.Awareness].value--;
                                        character_13.character.canSelectHumanEducation = true;
                                    });
                            }
                        }
                        case 13:
                        case 14:
                        case 15:
                        case 16: {
                            switch (roll2) {
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod migrated to a beautiful, but empty, cave network. You soon discovered why; as the Varunan Water-Snakes were quite pleased you’d moved into their den, and much of your pod didn’t survive. Reduce your Brawn by 1, as injuries and venom stunt your physical development.", "", "Your pod migrated to a beautiful, but empty, cave network. You soon discovered why; as the Varunan Water-Snakes were quite pleased you’d moved into their den, and much of your pod didn’t survive."), function () { character_13.character.attributes[attributes_10.Attribute.Brawn].value--; });
                                case 6:
                                case 7:
                                case 8: {
                                    var sissolu_1 = birthPlaces_3.BirthPlacesHelper.generateSissoluWaters();
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod migrated via the same katallpeac so often that it began to feel like home. An Atek shanty town floated on top; what were your relations like?", "", "Your pod migrated via the same katallpeac so often that it began to feel like home. An Atek shanty town floated on top; what were your relations like?"), function () {
                                        for (var lang in sissolu_1.languages) {
                                            if (lang.indexOf('|') > -1) {
                                                character_13.character.addLanguage(lang.substring(0, lang.indexOf('|')));
                                            }
                                            else {
                                                character_13.character.addLanguage(lang);
                                            }
                                        }
                                    });
                                }
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod welcomed back an old friend who’d served in the Helot Militia. Stories of their exploits captured everyone’s imaginations, but they saw something special in you. Increase your Resolve by 1; you can choose to take Helot Militia as your first career.", "", "Your pod welcomed back an old friend who’d served in the Helot Militia. Stories of their exploits captured everyone’s imaginations, but they saw something special in you."), function () {
                                        character_13.character.resolveReduction--;
                                        character_13.character.freeCareers.push(careers_5.Career.HelotMilitia);
                                    });
                            }
                        }
                        case 17:
                        case 18:
                        case 19: {
                            switch (roll2) {
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Through circumstances beyond your control, your entire pod was wiped out, leaving you stranded and completely alone. Reduce Willpower by 1.", "", "Through circumstances beyond your control, your entire pod was wiped out, leaving you stranded and completely alone."), function () { character_13.character.attributes[attributes_10.Attribute.Willpower].value--; });
                                case 6:
                                case 7:
                                case 8:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Your pod reunited with an old member, who’d left to join. Libertos. While the pod was divided in their politics, your elders showered them in praise, ignoring you in the process. Reduce Willpower by 1.", "", "Your pod reunited with an old member, who’d left to join. Libertos. While the pod was divided in their politics, your elders showered them in praise, ignoring you in the process."), function () { character_13.character.attributes[attributes_10.Attribute.Willpower].value--; });
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                    return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel("Whether through choice, tragedy, or circumstance, you joined the Tete-Kulu , relocating to the surface before your body was fully adapted. Reduce both Vigour and Willpower by 1, but increase Coordination by 1. Your Education will be Wild Pod.", "", "Whether through choice, tragedy, or circumstance, you joined the Tete-Kulu , relocating to the surface before your body was fully adapted."), function () {
                                        character_13.character.attributes[attributes_10.Attribute.Willpower].value--;
                                        character_13.character.attributes[attributes_10.Attribute.Coordination].value++;
                                        character_13.character.vigourReduction++;
                                    });
                            }
                        }
                        case 20: {
                            var event1 = this.generateEvent(true);
                            var event2 = this.generateEvent(true);
                            return new careerEvents_4.CareerEventModel(new eventModel_6.EventModel(event1.event + " " + event2.event, "", event1.effect + " " + event2.effect));
                        }
                    }
                    return null;
                };
                return FryEvents;
            }());
            exports_22("FryEventsHelper", FryEventsHelper = new FryEvents());
        }
    }
});
System.register("helpers/talents", ["common/character", "helpers/skills"], function(exports_23, context_23) {
    "use strict";
    var __moduleName = context_23 && context_23.id;
    var character_14, skills_12;
    var TalentPrerequisite, TalentRankPrerequisite, VariableTalentPrerequisite, ExpertisePrerequisite, FocusPrerequisite, TalentModel, TalentViewModel, TalentSpecial, Talents, TalentsHelper;
    return {
        setters:[
            function (character_14_1) {
                character_14 = character_14_1;
            },
            function (skills_12_1) {
                skills_12 = skills_12_1;
            }],
        execute: function() {
            TalentPrerequisite = (function () {
                function TalentPrerequisite(talent) {
                    this.talent = talent;
                }
                TalentPrerequisite.prototype.isPrerequisiteFulfilled = function () {
                    var found = false;
                    for (var talent in character_14.character.talents) {
                        if (talent === this.talent) {
                            found = true;
                            break;
                        }
                    }
                    return found;
                };
                return TalentPrerequisite;
            }());
            TalentRankPrerequisite = (function () {
                function TalentRankPrerequisite(talent, rank) {
                    this.talent = talent;
                    this.rank = rank;
                }
                TalentRankPrerequisite.prototype.isPrerequisiteFulfilled = function () {
                    var found = false;
                    for (var talent in character_14.character.talents) {
                        var t = character_14.character.talents[talent];
                        if (talent === this.talent && t.rank >= this.rank) {
                            found = true;
                            break;
                        }
                    }
                    return found;
                };
                return TalentRankPrerequisite;
            }());
            VariableTalentPrerequisite = (function () {
                function VariableTalentPrerequisite(talent1, talent2) {
                    this.talent1 = talent1;
                    this.talent2 = talent2;
                }
                VariableTalentPrerequisite.prototype.isPrerequisiteFulfilled = function () {
                    var found = false;
                    for (var talent in character_14.character.talents) {
                        if (talent === this.talent1 || talent === this.talent2) {
                            found = true;
                            break;
                        }
                    }
                    return found;
                };
                return VariableTalentPrerequisite;
            }());
            ExpertisePrerequisite = (function () {
                function ExpertisePrerequisite(skill, value) {
                    this.skill = skill;
                    this.value = value;
                }
                ExpertisePrerequisite.prototype.isPrerequisiteFulfilled = function () {
                    return character_14.character.skills[this.skill].expertise >= this.value;
                };
                return ExpertisePrerequisite;
            }());
            FocusPrerequisite = (function () {
                function FocusPrerequisite(skill, value) {
                    this.skill = skill;
                    this.value = value;
                }
                FocusPrerequisite.prototype.isPrerequisiteFulfilled = function () {
                    return character_14.character.skills[this.skill].focus >= this.value;
                };
                return FocusPrerequisite;
            }());
            TalentModel = (function () {
                function TalentModel(name, desc, prerequisites, maxRank) {
                    this.name = name;
                    this.description = desc;
                    this.prerequisites = prerequisites;
                    this.maxRank = maxRank;
                }
                return TalentModel;
            }());
            exports_23("TalentModel", TalentModel);
            TalentViewModel = (function () {
                function TalentViewModel(name, rank, showRank, description, skill) {
                    this.id = name;
                    this.description = description;
                    this.name = name + (showRank ? ' [Rank: ' + rank + ']' : '') + ' (' + skills_12.SkillsHelper.getSkillName(skill) + ')';
                }
                return TalentViewModel;
            }());
            exports_23("TalentViewModel", TalentViewModel);
            (function (TalentSpecial) {
                TalentSpecial[TalentSpecial["MaximumRanks_EducationFocus"] = -1] = "MaximumRanks_EducationFocus";
                TalentSpecial[TalentSpecial["MaximumRanks_ScienceFocus"] = -2] = "MaximumRanks_ScienceFocus";
                TalentSpecial[TalentSpecial["MaximumRanks_SurvivalFocus"] = -3] = "MaximumRanks_SurvivalFocus";
            })(TalentSpecial || (TalentSpecial = {}));
            exports_23("TalentSpecial", TalentSpecial);
            Talents = (function () {
                function Talents() {
                    this._talents = (_a = {},
                        _a[skills_12.Skill.Acrobatics] = [
                            new TalentModel("Catfall", "The character has learned to take advantage of wind resistance and surface conditions when making a landing. For every rank of Catfall, the character treats the distance fallen as being one zone shorter when calculating damage.", [new TalentPrerequisite("Long Jumper"), new ExpertisePrerequisite(skills_12.Skill.Acrobatics, 2)], 3),
                            new TalentModel("Free Runner", "A Free Runner trains to recognise the environment and let his body move naturally in response to it, taking advantage of the terrain’s effects. A character with this talent may ignore all effects of moving through difficult terrain. This does not include hazardous terrain.", [new TalentPrerequisite("Graceful")], 3),
                            new TalentModel("Graceful", "The character may reroll one d20 when making an Acrobatics test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Acrobatics, 1)], 1),
                            new TalentModel("Long Jumper", "The character is able to leap extraordinary distances. When making an Acrobatics test to jump, the character reduces the difficulty by one rank, to a minimum of Simple D0.", [new TalentPrerequisite("Graceful")], 1),
                            new TalentModel("Roll With It", "When the character fails a Defence test against a melee attack or a ranged attack with the Blast quality, they gain additional [CD] Cover Soak equal to the character’s Acrobatics Focus.", [new TalentPrerequisite("Catfall")], 1),
                            new TalentModel("Total Reaction", "During combat, the character is in a constant state of fluid motion, making it difficult to hit them with ranged attacks. When they take a Defence reaction against ranged attacks, each rank of Total Reaction counts as an additional point of Acrobatics Focus. (This can increase the character’s effective Acrobatics Focus above its normal limits. For example, their effective Focus may be higher than their Acrobatics Expertise.)", [new TalentPrerequisite("Graceful")], 3),
                            new TalentModel("Uncanny Dodge", "The character has a natural sense for when their life might be endangered. They make a Defence reaction against any ranged attacks, including ones they might not have any immediately apparent reason to know about. (They must still pay the normal Momentum cost for taking a reaction.)", [new TalentPrerequisite("Total Reaction"), new ExpertisePrerequisite(skills_12.Skill.Acrobatics, 2)], 1)
                        ],
                        _a[skills_12.Skill.Analysis] = [
                            new TalentModel("Code Breaker", "The character has developed an uncanny insight into cryptographic patterns and the quantronic tools required to crack them. When making an Analysis test related to cryptography, the character reduces the difficulty by one per rank of Code Breaker, to a minimum of Simple D0.", [new TalentPrerequisite("Pattern Recognition")], 3),
                            new TalentModel("Combat Analysis", "During combat, the character may attempt an Average D1 Analysis test as a Minor Action. On a success, they can identify one special power, hidden piece of equipment, technological advantage, alien ability, or similar effect that an opponent has in use. Each Momentum spent allows the character to recognise one additional effect.", [new ExpertisePrerequisite(skills_12.Skill.Analysis, 2), new TalentPrerequisite("New Perspective")], 1),
                            new TalentModel("Data Analysis", "When analysing data, the character enters a fugue state. Each rank of Data Analysis counts as an additional point of Analysis Focus. This can increase the character’s effective Analysis Focus above its normal limits.", [new TalentPrerequisite("Pattern Recognition")], 2),
                            new TalentModel("Information Integration", "The character is skilled at rapidly collating and integrating information from a team of assistants. When analysing data as a teamwork test, those assisting the character may roll two d20 each, instead of being limited to a single d20.", [new TalentPrerequisite("Data Analysis"), new ExpertisePrerequisite(skills_12.Skill.Analysis, 2)], 1),
                            new TalentModel("Microscopic Threats", "The character has a knack for recognizing the subtle clues of biological, chemical, nanonic, and similar threats. Whenever the character is in the presence of biohazards that would be protected by BTS – even if the character is not aware of it – the GM should call for the character to make a Challenging (D2) Analysis test. On a success, the character recognises the presence of the threat and may spend Momentum to identify protective measures against said threat. Every Momentum spent increases BTS by 1 against that attack for the remainder of the scene. A second rank of Microscopic Threats reduces the difficulty of this check to Average (D1).", [new TalentPrerequisite("Pattern Recognition")], 2),
                            new TalentModel("New Perspective", "The character can intuitively analyse the world around them. They may substitute their Analysis skill for Observation for any task which is not a split second reaction.", [new TalentPrerequisite("Pattern Recognition")], 1),
                            new TalentModel("Pattern Recognition", "The character may reroll one d20 when making an Analysis test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Analysis, 1)], 1)
                        ],
                        _a[skills_12.Skill.Animal_Handling] = [
                            new TalentModel("Animal Healer", "Any time the character is called upon to make a Medicine test upon an animal, they may instead use their Animal Handling skill. Characters with this talent may also substitute their Animal Handling skill for Medicine tests upon humans, but increase the difficulty of such tests by one rank.", [new TalentPrerequisite("Symbiosis"), new ExpertisePrerequisite(skills_12.Skill.Animal_Handling, 2)], 1),
                            new TalentModel("Firm Hand", "The character has experience with animals that are resistant to training. Any time the character attempts to direct an animal to take an action that goes against its instinct or training – including if the animal is in service to another – any Momentum spent or Heat paid to add extra dice to the skill test add two d20s to the dice pool instead of one. (The normal maximum of three bonus d20s still applies.)", [new TalentPrerequisite("Recognise Cues"), new ExpertisePrerequisite(skills_12.Skill.Animal_Handling, 2)], 1),
                            new TalentModel("Recognise Cues", "The character has come to recognise when and how an animal is reacting to their environment. Any time the character is in the company of animals and needs to make an Observation test, they may substitute their Animal Handling skill instead. This includes active searches if the character can use an animal to aid in the search.", [new TalentPrerequisite("Wild Empathy")], 1),
                            new TalentModel("Smells Right", "Any time the character encounters a new animal, they make an Average (D1) Observation test as a minor action. On a success, the animal immediately considers them a friend. If the target is a guard animal, it does not alert its handlers to the character’s presence.", [new TalentPrerequisite("Firm Hand")], 1),
                            new TalentModel("Strong Rider", "The character is particularly adept at riding mounts. When making a skill test to ride an animal, the character reduces the difficulty by one rank. This may eliminate the need for the skill check.", [new TalentPrerequisite("Wild Empathy")], 1),
                            new TalentModel("Symbiosis", "The character is particularly adept at recognising the needs of their animal companions. Any time the character succeeds on a Survival test, they automatically also find food and shelter for their animal companions. (Note that the presence of animals does not increase the difficulty of the test for characters with this talent.)", [new TalentPrerequisite("Wild Empathy")], 1),
                            new TalentModel("Wild Empathy", "Having spent much of their lives in the company of animals, the character can quickly recognise personality quirks and sources of distress. On any Animal Handling test where the character generates at least one success, they may immediately roll an additional number of bonus d20s equal to their ranks in Wild Empathy. Any successes generated on these additional dice are added to the initial success total and repercussions on these additional dice may be ignored.", [new ExpertisePrerequisite(skills_12.Skill.Animal_Handling, 1)], 3)
                        ],
                        _a[skills_12.Skill.Athletics] = [
                            new TalentModel("Cliff Dweller", "The endless hours of climbing have made vertical surfaces a natural environment for the character. The character never suffers from vertigo or a fear of heights. In addition, they may reduce the difficulty of any climbing test by one step per rank of Cliff Dweller, to a minimum of Simple (D0).", [new TalentPrerequisite("Rigorous Training")], 3),
                            new TalentModel("Irresistible Force", "The character gains the weapon quality Knockdown on all melee attacks.", [new TalentPrerequisite("Leverage"), new ExpertisePrerequisite(skills_12.Skill.Athletics, 2)], 1),
                            new TalentModel("Leverage", "Due to a combination of training and technique, the character is able to perform feats of strength that seem at odds with their physique. On any test to lift or move an inanimate object where the character generates at least one success, they may immediately roll a number of bonus d20s equal to their ranks in Leverage. Any successes generated on these additional dice are added to the initial success total and repercussions on these additional dice may be ignored.", [new TalentPrerequisite("Rigorous Training")], 3),
                            new TalentModel("Rigorous Training", "The character is exceptionally athletic and physically gifted. For each rank of Rigorous Training, the character generates one bonus Momentum on any Athletics test.", [new ExpertisePrerequisite(skills_12.Skill.Athletics, 1)], 3),
                            new TalentModel("Strong Grip", "The character never drops or surrenders an object unless they have chosen to do so. They are immune to any attempt to forcibly disarm them or otherwise knock a weapon or other held object from their hands.", [new TalentPrerequisite("Irresistible Force")], 1),
                            new TalentModel("Strong Swimmer", "The character is a prodigious swimmer. He reduces the difficulty of any swimming test by one step per rank of Strong Swimmer. This may eliminate the need for the skill test.", [new TalentPrerequisite("Rigorous Training")], 3),
                            new TalentModel("Wall Crawler", "The character has learned to climb comfortably without equipment, even while carrying significant burdens. They never suffer any penalty for climbing without proper equipment. Furthermore, if rope, harness, or other climbing equipment is available, they can add a bonus d20 to their Athletics test.", [new TalentPrerequisite("Cliff Dweller"), new ExpertisePrerequisite(skills_12.Skill.Athletics, 2)], 1)
                        ],
                        _a[skills_12.Skill.Ballistics] = [
                            new TalentModel("Clear Shot", "The character reduces the penalty for firing at a range other than the weapon’s optimal range by one step (to a minimum of zero).", [new TalentPrerequisite("Marksman")], 1),
                            new TalentModel("Double Tap", "If the character succeeds at a ranged attack and spends Momentum or an Infinity Point to make another attack with the same weapon against the same target, the difficulty of the attack is decreased by one step, to a minimum of Average (D1). Double Tap can only be used once per turn per rank in the talent.", [new TalentPrerequisite("Speed Loader")], 2),
                            new TalentModel("Marksman", "When making a ranged attack, a character with this talent may reroll a number of damage dice equal to the number of Ballistics talents they have acquired. (As normal, each die may only be re-rolled once.)", [new ExpertisePrerequisite(skills_12.Skill.Ballistics, 1)], 1),
                            new TalentModel("Precise Shot", "When spending Momentum for a Called Shot with a ranged attack it only costs one Momentum (instead of two).", [new TalentPrerequisite("Clear Shot"), new ExpertisePrerequisite(skills_12.Skill.Ballistics, 2)], 1),
                            new TalentModel("Quick Draw", "The character can draw a weapon or other item as a free action (instead of the normal minor action). This can only be done once per turn, although when the Quick Draw action is taken the character can draw a different item into each hand (in order to dual wield pistols, for example). This talent exists for both the Ballistics and Close Combat skill, and if it is purchased for either skill it can be used as a prerequisite for talents in the other skill.", [new TalentPrerequisite("Marksman")], 1),
                            new TalentModel("Speed Loader", "The character can disassemble and reassemble their weapon and its components with little thought. During combat, they may spend a Minor Action to increase their rate of fire, allowing them to count the weapon’s Burst as one higher than its listed value.", [new TalentPrerequisite("Quick Draw"), new ExpertisePrerequisite(skills_12.Skill.Ballistics, 2)], 1),
                            new TalentModel("Through and Through", "When the character spends Momentum on a Secondary Target effect for a ranged attack it only costs one Momentum (instead of two). In addition, the character can use this Momentum spend a number of times equal to their ranks of Through and Through on any given attack.", [new TalentPrerequisite("Marksman")], 3)
                        ],
                        _a[skills_12.Skill.Close_Combat] = [
                            new TalentModel("Combat Specialist", "Each point of Momentum or Heat the character pays to gain additional dice for a Close Combat test provides two dice instead of one. (The normal maximum of three bonus d20s still applies.)", [new TalentPrerequisite("Martial Artist")], 1),
                            new TalentModel("Deflection", "Characters with this talent reduce the Heat cost of Defence or Guard reactions using the Close Combat skill by one. (This can reduce the cost to zero, but no less.)", [new TalentPrerequisite("Martial Artist")], 1),
                            new TalentModel("Martial Artist", "When making a melee attack, a character with this talent may reroll a number of damage dice equal to the number of Close Combat talents they have acquired. (As normal, these dice may only be re-rolled once.)", [new ExpertisePrerequisite(skills_12.Skill.Close_Combat, 1)], 1),
                            new TalentModel("Master Deflection", "On any Defence or Guard reaction using the Close Combat skill where the character generates at least one success, they may immediately roll an additional number of d20s equal to their ranks in Master Deflection. Any successes generated on these additional dice are added to the initial success total and repercussions on these additional dice may be ignored.", [new TalentPrerequisite("Deflection"), new ExpertisePrerequisite(skills_12.Skill.Close_Combat, 2)], 3),
                            new TalentModel("Quick Draw", "The character is always prepared for melee combat. They can draw a weapon as a free action (instead of the normal minor action) and do not need to have a weapon in their hand in order to respond to attacks – any weapon within Reach may be used to defend against attacks. This talent exists for both the Ballistics and Close Combat skill, and if it is purchased for either skill it can be used as a prerequisite for talents in the other skill.", [new TalentPrerequisite("Martial Artist")], 1),
                            new TalentModel("Reflexive Block", "The character has become so attuned to his melee expertise that he can use it to defend against ranged attacks. The character may substitute their Close Combat skill for their Acrobatics skill any time they attempt a Defence or Guard reaction with a weapon in hand.", [new TalentPrerequisite("Quick Draw"), new ExpertisePrerequisite(skills_12.Skill.Close_Combat, 2)], 1),
                            new TalentModel("Riposte", "Some characters learn that the instant after an opponent strike is when they are most vulnerable. After successfully executing a parry, characters with this talent may immediately perform a reaction to make a standard melee attack against the foe they parried.", [new TalentPrerequisite("Deflection"), new ExpertisePrerequisite(skills_12.Skill.Close_Combat, 2)], 1),
                            new TalentModel("Weapon Master", "When making an attack using the Close Combat skill, each point of Momentum the character spends to deal bonus damage adds two points of damage instead of one.", [new TalentPrerequisite("Combat Specialist"), new ExpertisePrerequisite(skills_12.Skill.Close_Combat, 2)], 1),
                        ],
                        _a[skills_12.Skill.Command] = [
                            new TalentModel("Air of Authority", "The character knows how to bring his authority to bear. When making Psywar attacks, the character may use the Command skill instead. Further, they may use Air of Authority as  Psywar attack which has a range of Close and inflicts 1+3[CD] damage with the Area and Stun qualities. The character cannot use this talent unless he has some way to prove his authority – a uniform, a badge of office, or simply being recognised by the people he has authority over.", [new TalentPrerequisite("Professional")], 1),
                            new TalentModel("Commanding Presence", "The character leads with immense charisma and persuasive skills. When making a Command test, any Momentum spent or Heat paid to add extra dice to the skill test add two d20s to the dice pool instead of one.", [new TalentPrerequisite("Air of Authority"), new ExpertisePrerequisite(skills_12.Skill.Command, 2)], 1),
                            new TalentModel("Coordinator", "The character is proficient in coordinating the actions of a group working in unison. Any time the character is involved in a teamwork test – even if they are not the leader for the test – all characters involved may choose to reroll one d20, but must accept the new result.", [new TalentPrerequisite("Group Dynamics"), new ExpertisePrerequisite(skills_12.Skill.Command, 2)], 1),
                            new TalentModel("Font of Courage", "The character is an inspiring presence to those who follow them. Any time forces under their direct command are subject to a Psywar attack, those forces gain +2[CD] Morale Soak for each rank of Font of Courage.", [new TalentPrerequisite("Professional")], 2),
                            new TalentModel("Group Dynamics", "The character is very familiar with the way a crowd normally acts and can recognise actions that are unusual or out of place. When dealing with places full of people – even if the people are not organised – the character may substitute their Command skill for any Observation test. This includes active searches if the character can rally a crowd to assist them.", [new TalentPrerequisite("Professional")], 1),
                            new TalentModel("Minions", "Individuals under the character’s authority become extremely loyal to them, even willing to sacrifice themselves. Any time the character comes under attack and has a character under their command within three metres, they may pay one Heat to have that character immediately perform a Guard reaction.", [new TalentPrerequisite("Commanding Presence")], 1),
                            new TalentModel("Professional", "The character has learned to issue orders so that they are clear to the recipient and with little margin for misinterpretation. The character may reroll one d20 when making a Command test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Command, 1)], 1),
                        ],
                        _a[skills_12.Skill.Discipline] = [
                            new TalentModel("Courageous", "Some characters are simply more capable of enduring stress and mental assault. The character has Courage Soak equal to twice his ranks in Courageous.", [new TalentPrerequisite("Irrepressible"), new ExpertisePrerequisite(skills_12.Skill.Discipline, 2)], 3),
                            new TalentModel("Guarded Heart", "The character is wary even of their friends and comrades. When targeted by Psywar attacks, they gain +2[CD] Morale soak. Further, when rolling Soak dice for Morale, they instead count each Effect rolled as if it were a 2 on those Soak dice.", [new TalentPrerequisite("Wary"), new ExpertisePrerequisite(skills_12.Skill.Discipline, 2)], 1),
                            new TalentModel("Irrepressible", "The character has survived countless challenges and is prepared to face even more. When taking the Recover action, they gain a number of bonus Momentum equal to their rank in Irrepressible.", [new TalentPrerequisite("Stubborn")], 1),
                            new TalentModel("Jaded", "The character has suffered cruelties and emotional trauma repeatedly. They have built up a tolerance to mental suffering. The character increases their Resolve by two points for each rank of Jaded.", [new TalentPrerequisite("Stubborn")], 3),
                            new TalentModel("Out of Darkness", "Even when their psyche has taken a beating, the character has an organised mental framework that allows them to recover. Whenever the character makes a Discipline check to recover from Trauma, the difficulty of the check is reduced one step per rank of Out of Darkness.", [new TalentPrerequisite("Courageous")], 2),
                            new TalentModel("Stubborn", "The character may reroll one d20 when making a Discipline test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Discipline, 1)], 1),
                            new TalentModel("Wary", "The character is cautious in their trust and hesitant to believe the things that they are told. Any time the character is the target of a Persuade or Command test, any Momentum paid to add dice to their Discipline test add two d20 instead of one.", [new TalentPrerequisite("Stubborn")], 1),
                        ],
                        _a[skills_12.Skill.Education] = [
                            new TalentModel("Disciplined Student", "The character paid attention in class, was extensively self-taught, or both. They constantly sought out knowledge beyond the scope of the minimum necessary training. If they generate at least one success when attempting an Education test, they may immediately roll an additional d20 and add the result to the test.", [new ExpertisePrerequisite(skills_12.Skill.Education, 1)], 1),
                            new TalentModel("Knowledge Specialisation", "The character is particularly devoted to a particular topic (which is chosen at the same time as this talent, subject to the GM’s approval). When making an Education test related to that topic, the character gains +1d20 on their test. This talent can be taken multiple times, with each additional rank either granting a new specialisation or an additional +1d20 to an existing specialisation. (The normal limit of three bonus d20s applies.)", [new TalentPrerequisite("Disciplined Student")], TalentSpecial.MaximumRanks_EducationFocus),
                            new TalentModel("Maya Wired", "Years of experience with the datasphere has allowed the character to create and a master a huge suite of customised, automatic research tools that are anticipating their needs. As long as the character has access to their geist (and their geist has access to Maya, Arachne, or a similar datasphere), whenever they attempt an Education test to recall information quickly, the geist may assist on the test, and roll 2d20 rather than the normal 1d20 for assistance. (Their automated systems deliver information they need to know so instantaneously it’s as if they already knew it themselves.)", [new TalentPrerequisite("Research Specialist"), new ExpertisePrerequisite(skills_12.Skill.Education, 2)], 1),
                            new TalentModel("Research Specialist", "After spending hours buried in the nooks and crannies of various dataspheres, the character is an expert at finding the information that they need. When making a skill test to research a topic, the character gains bonus Momentum equal to their ranks in Research Specialist.", [new TalentPrerequisite("Disciplined Student")], 3),
                            new TalentModel("Trivia Master", "The character keeps up on current events, both globally and throughout the Human Sphere. On any Education test that involves pop culture, trivia, or current events within the past twenty years, the character reduces the difficulty by one step per rank of Trivia Master, to a minimum of Simple (D0).", [new TalentPrerequisite("Disciplined Student")], 3),
                            new TalentModel("Untraceable Researcher", "The danger of relying on the knowledge of the datasphere is that there are those who can trace and track your use of it. There are tricks to avoid such attention, however, and the character is a master of them. They reduce the difficulty of any Stealth check to avoid detection as a result of their research checks by two steps, to a minimum of Simple (D0).", [new TalentPrerequisite("Research Specialist")], 1),
                        ],
                        _a[skills_12.Skill.Extraplanetary] = [
                            new TalentModel("EVA Expert", "The character has learned how to work fine tools effectively, even when wearing the thick gloves that are part of a pressure suit. The character may ignore any difficulty increases or other penalties associated with wearing a pressure suit or otherwise encumbering equipment.", [new TalentPrerequisite("Space Walker")], 1),
                            new TalentModel("Gravity Savant", "The character has worked in a broad range of different gravitational environments and has learned to quickly adapt to such changes. The character can ignore any penalties associated with working in situations of gravity that differ from Earth normal.", [new TalentPrerequisite("EVA Expert"), new ExpertisePrerequisite(skills_12.Skill.Extraplanetary, 2)], 1),
                            new TalentModel("Meteor Head", "The character may reroll one d20 when making an Extraplanetary test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Extraplanetary, 1)], 1),
                            new TalentModel("Radiation Resistance", "Either due to a genetic quirk or a deliberate anatomical modification, the character is less subject to the effects of cosmic radiation. The character reduces the difficulty of all Resistance tests against the effect of radiation exposure by two steps, to a minimum of Simple (D0).", [new TalentPrerequisite("Slow Metabolism"), new ExpertisePrerequisite(skills_12.Skill.Extraplanetary, 2)], 1),
                            new TalentModel("Slow Metabolism", "The character has learned to function at a decreased atmospheric pressure and with a reduced level of oxygen in order to extend operating time in pressure suits. Any time the character begins strenuous activity in an EVA suit, they may make an Average (D1) Extraplanetary test. On a success, they do not use up any of the suit’s Oxygen Loads.", [new TalentPrerequisite("Meteor Head")], 1),
                            new TalentModel("Spacewalker", "The character has significant experience in using EVA suits and operating in zero-g environments. Whenever a test is required for working in such an environment, the character gains two d20s to their Extraplanetary pool for every Momentum spent instead of one.", [new TalentPrerequisite("Meteor Head")], 1),
                            new TalentModel("Star Sneak", "Years of extraterrestrial experience have familiarized the character with aspects of the environment which landlubbers find it difficult to grok (such as the presence of a meaningful z-axis in day-to-day life in zero-g). While in space or upon alien worlds, the character may substitute their Extraplanetary skill for Stealth tests.", [new TalentPrerequisite("Meteor Head")], 1),
                        ],
                        _a[skills_12.Skill.Hacking] = [
                            new TalentModel("Hacker", "When making an Infowar attack, the character may reroll a number of damage dice equal to the number of Hacking talents they have acquired. (As normal, dice may only be re-rolled once.)", [new ExpertisePrerequisite(skills_12.Skill.Hacking, 1)], 1),
                            new TalentModel("Paranoid", "The character, their geist, and their systems are always ready for enemy intrusion. As a reaction the character may respond to any Infowar attack with an Infowar attack of their own with any software immediately to hand at a penalty of +2 difficulty. This attack is resolved before the enemy attack and if it causes the enemy to suffer a breach, then their hack is prevented. <br/><br/>Each additional rank of Paranoid reduces the difficulty of the reaction hack by one. (With three ranks of Paranoid, therefore, the penalty is completely eliminated.)", [new TalentPrerequisite("Tricks of the Trade"), new ExpertisePrerequisite(skills_12.Skill.Hacking, 2)], 3),
                            new TalentModel("Phisher", "The character has made it a practice to collect access to other people’s comlogs and financial details. When making a Fake ID, the resulting Fake ID gains +1 to its rating.", [new TalentPrerequisite("Hacker")], 1),
                            new TalentModel("Piggyback", "The character maintains a log of easily hackable devices and common admin codes, which when referenced allow the hacker to extend their quantronic reach. When performing a remote Infowar attack, piggybacking off these systems allows the hacker to extend their usual hacking ranger from Close to Medium range at a penalty of +1 difficulty.", [new TalentPrerequisite("Phisher")], 1),
                            new TalentModel("Quantronic Flak", "The character has created a number of protocols and subroutines that generates a burst of signal interference nearby. As a minor action, the character’s current zone gains 2[CD] Interference Soak per rank of Quantronic Flak, which disappears at the start of the character’s next turn.", [new TalentPrerequisite("Hacker")], 2),
                            new TalentModel("Quantronic Leap", "When the character spends Momentum during an Infowar attack to affect a secondary target, it only costs one Momentum. In addition, the character can use the secondary target Momentum spend on Infowar attacks a number of times equal to their ranks in Quantronic Leap.", [new TalentPrerequisite("Piggyback"), new ExpertisePrerequisite(skills_12.Skill.Hacking, 2)], 3),
                            new TalentModel("Tricks of the Trade", "The character may reroll one d20 when making a Hacking test, but must accept the new result.", [new TalentPrerequisite("Hacker")], 1),
                        ],
                        _a[skills_12.Skill.Lifestyle] = [
                            new TalentModel("Backdoor Assets", "Having contacts with access to valuable assets can be the quickest way to acquire needed equipment. Characters with access to Backdoor Assets may reduce the restriction rating of any item or service by one per rank of Backdoor Assets, to a minimum of one, but the item or service is regarded as illegally-obtained, which may cause other problems later.", [new TalentPrerequisite("Network"), new ExpertisePrerequisite(skills_12.Skill.Lifestyle, 2)], 3),
                            new TalentModel("Bribery", "The character recognises that everyone has their price, and they know how to pay it – particularly without raising any flags. They may substitute their Lifestyle skill for Persuade when attempting to bribe an NPC.", [new TalentPrerequisite("Socialite")], 1),
                            new TalentModel("Elite Contact", "The character has established connections with individuals in positions of significant authority. Each time this talent is selected, the character gains an elite contact. (The player must specify the type and allegiance of the contact, which is subject to the GM’s approval.) The character may make a Daunting D3 Lifestyle test to ask the selected contact for a favour. On a success, the contact responds with resources proportionate to their level of importance – providing one asset, plus one additional asset per point of Momentum spent. The character can make such a skill test once per month, and it takes an hour (if the character is on the same planet) or 2+4[CD] hours (if the character is on a different planet) to make the attempt. Elite Contact may be purchased multiple times, with each purchase establishing a new highly placed contact.", [new TalentPrerequisite("Network"), new ExpertisePrerequisite(skills_12.Skill.Lifestyle, 2)], 1),
                            new TalentModel("Investments", "Each rank of Investments increases the character’s Earnings Rating by one.", [new TalentPrerequisite("Socialite")], 3),
                            new TalentModel("Network", "The character has a broad range of contacts in different fields and in different regions. Any time they need assistance from other individuals, they may reduce the difficulty of a Lifestyle test to find a contact by one step per rank of Network, to a minimum of Simple (D0).", [new TalentPrerequisite("Socialite")], 3),
                            new TalentModel("Socialite", "The character may reroll one d20 when making a Lifestyle test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Lifestyle, 1)], 1),
                            new TalentModel("Social Mimic", "The character is skilled at blending into disparate cultures and social classes. There is no increase in difficulty for differences in social classes when passing.", [new TalentPrerequisite("Socialite")], 1),
                        ],
                        _a[skills_12.Skill.Medicine] = [
                            new TalentModel("Emergency Doctor", "When making a teamwork test with the Medicine skill to assist another character with the Recover action, the character may roll a number of dice equal to the character’s ranks in Medicine Focus.", [new TalentPrerequisite("Physician")], 1),
                            new TalentModel("Field Dressing", "The character has become particularly adept at practicing medicine in situations where few resources are available. They suffer no penalty for Medicine tests attempted without the use of MediKit or stocked medical facility.", [new TalentPrerequisite("Physician")], 1),
                            new TalentModel("Field Surgery", "Having worked with very limited resources in the past, the character has learned to take full advantage of them when available. Each dose of serum used by the character adds two bonus d20s to Medicine tests instead of one. (The normal limit of three bonus d20s still applies.)", [new TalentPrerequisite("Field Dressing")], 1),
                            new TalentModel("Miracle Worker", "When performing the Treatment action or assisting on the Recover action using the Medicine skill, the character gains two bonus Momentum, which may only be used to recover Vigour or treat Wounds.", [new TalentPrerequisite("Field Surgery"), new ExpertisePrerequisite(skills_12.Skill.Medicine, 2)], 1),
                            new TalentModel("Physician", "The character may reroll one d20 when making a Medicine test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Medicine, 1)], 1),
                            new TalentModel("Self-Treatment", "When performing a treat test on themselves, a character with Self-Treatment no longer increases the difficulty of the test by two.", [new TalentPrerequisite("Physician")], 1),
                            new TalentModel("Trauma Surgeon", "The character has learned techniques to aid a character in recovering from particularly grievous injuries. The character may reduce the difficulty of Medicine tests to treat Wounds by one step per rank of Trauma Surgeon they possess, to a minimum of Average (D1).", [new TalentPrerequisite("Field Surgery"), new ExpertisePrerequisite(skills_12.Skill.Medicine, 2)], 3),
                        ],
                        _a[skills_12.Skill.Observation] = [
                            new TalentModel("Acute Senses", "On a successful Observation test, the character gains bonus Momentum equal to their ranks in Acute Senses.", [new TalentPrerequisite("Sharp Senses")], 3),
                            new TalentModel("Danger Sense", "When making a face-to-face test to determine Surprise, the character can reroll any failed check.", [new TalentPrerequisite("Sharp Senses")], 1),
                            new TalentModel("Eidetic Memory", "The character can recall images, sounds, objects, and other memories with high precision even after only a momentary exposure. When examining such memories, they can even attempt Observation tests at a +1 difficulty to notice things they may have originally missed in the moment. (Such recall is not actually perfect, however, and GMs are encouraged to use complications on such tests to generate false information.)", [new TalentPrerequisite("Sense Memory"), new ExpertisePrerequisite(skills_12.Skill.Observation, 2)], 1),
                            new TalentModel("Night Vision", "The character ignores any penalties to skill tests as a result of poor illumination or low light levels. This talent does not help in total darkness, however.", [new TalentPrerequisite("Acute Senses"), new ExpertisePrerequisite(skills_12.Skill.Observation, 2)], 1),
                            new TalentModel("Sense of Direction", "The character has a perfect Sense of Direction. With an Average D1 Observation test, they can determine which direction is north. When attempting to retrace their footsteps or follow a path they’ve taken, the difficulty of the test is reduced by one per Observation talent the character has, which may reduce the difficulty to Simple (D0). (This benefit applies even if their senses were obscured. For example, if they were blindfolded or locked in the trunk of a car and attempting to figure out where it had taken them.)", [new TalentPrerequisite("Sharp Senses")], 1),
                            new TalentModel("Sense Memory", "The character has a knack for recalling patterns of sounds, smells, or colours. They are much more likely to recognise people, places, and objects they have interacted with, even when they are shrouded or attempts have been made to obscure, disguise, or hide them. When trying to detect, locate, or recognise such targets they gain a bonus 1d20 to any related skill tests. (This bonus die may be rolled by the GM to avoid revealing the subject of the Observation test before the test is made.)", [new TalentPrerequisite("Sharp Senses")], 1),
                            new TalentModel("Sharp Senses", "The character may reroll one d20 when making an Observation test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Observation, 1)], 1),
                        ],
                        _a[skills_12.Skill.Persuade] = [
                            new TalentModel("Charismatic", "The character may re-roll 1d20 on any Persuade test, but must keep the new result.", [new ExpertisePrerequisite(skills_12.Skill.Persuade, 1)], 1),
                            new TalentModel("Enticer", "The character is particularly adept at seducing others. When using affection, physical attraction, or the promise of sexual favours as part of negotiation, the character gains a number of bonus d20s equal to their ranks in Enticer. (The normal limit of three bonus d20s still applies.) Whether or not the character is honest with their seduction is irrelevant – the character is as effective with fake seduction as with honest attraction.", [new TalentPrerequisite("Charismatic")], 3),
                            new TalentModel("Equivocator", "The character is willing and able to tell any lie to overcome an opponent’s social defences. When attempting to deceive an opponent, the character gains two bonus d20s to their Persuade test per Momentum spent or Heat paid (instead of the normal one). The normal limit of three bonus d20s still applies.", [new TalentPrerequisite("Charismatic")], 1),
                            new TalentModel("Haggler", "The character is particularly proficient at striking a bargain, either to obtain goods or favours. They can use Persuade instead of Lifestyle when making attempting to acquire goods or strike a bargain.", [new TalentPrerequisite("Magnetic Personality"), new ExpertisePrerequisite(skills_12.Skill.Persuade, 2)], 1),
                            new TalentModel("Intimidator", "The character recognises others’ limitations and is always willing to exploit them. When attempting to intimidate an opponent, the character gains two d20s to their Persuade test per Momentum spent or Heat paid (instead of the normal one). The normal limit of three bonus d20s still applies.", [new TalentPrerequisite("Charismatic")], 1),
                            new TalentModel("Magnetic Personality", "When making Persuade tests, the character gains one bonus Momentum per rank of Magnetic Personality.", [new TalentPrerequisite("Charismatic")], 3),
                            new TalentModel("Relentless", "The character’s bonus damage to Psywar attacks is increased by +1[CD] per rank of Relentless.", [new TalentPrerequisite("Intimidator"), new ExpertisePrerequisite(skills_12.Skill.Persuade, 2)], 2),
                        ],
                        _a[skills_12.Skill.Pilot] = [
                            new TalentModel("Ace", "The character may reroll one d20 when making a Pilot test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Pilot, 1)], 1),
                            new TalentModel("Born to the Wheel", "Decrease the difficulty for any Pilot tests using ground-based vehicles by one, to a minimum of one.", [new TalentPrerequisite("Ace")], 1),
                            new TalentModel("Combat Pilot", "The character knows how to keep a vehicle running effectively, even when it’s seriously damaged. When performing a Pilot test with a damaged vehicle, the penalty from damage is reduced by one step per rank of Combat Pilot.", [new TalentPrerequisite("Ace")], 3),
                            new TalentModel("Push the Envelope", "The character is particularly adept at making vehicles perform beyond their design specifications. When making Pilot tests, the character gains one bonus Momentum per rank of Push the Envelope.", [new TalentPrerequisite("Ace")], 3),
                            new TalentModel("Ramming Speed", "When the character rams their vehicle into another, each point of Momentum spent for bonus damage adds two damage (instead of the normal one). ", [new TalentPrerequisite("Combat Pilot"), new ExpertisePrerequisite(skills_12.Skill.Pilot, 2)], 1),
                            new TalentModel("Storm Breaker", "When piloting watercraft, the character may ignore any penalties to a Pilot test that are due to choppy waters, severe weather, or other environmental conditions.", [new TalentPrerequisite("Ace")], 1),
                            new TalentModel("Top Gun", "The character may substitute their Pilot skill for Ballistics when firing weapons mounted on an airborne vehicle that they are also piloting.", [new TalentPrerequisite("Push the Envelope"), new ExpertisePrerequisite(skills_12.Skill.Pilot, 2)], 1),
                        ],
                        _a[skills_12.Skill.Psychology] = [
                            new TalentModel("Alien Specialist", "The character has spent considerable time studying the psychology of a particular non-human species. When making Psychology tests involving members of that species, the character gains +1d20 on their test. This talent can be taken multiple times, with each additional rank granting specialisation with a new alien species. (For the purposes of this talent, the character can select artificial intelligences as a non-human species.)", [new TalentPrerequisite("Counsellor")], 1),
                            new TalentModel("Battlefield Psychology", "When making a teamwork test with the Psychology skill to assist another character with the Recover action, the character may roll a number of dice equal to the character’s ranks in Psychology Focus.", [new TalentPrerequisite("Counsellor")], 1),
                            new TalentModel("Counsellor", "When making a Psychology test, the character may reroll any dice that did not generate a success on the initial roll, but they must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Psychology, 1)], 1),
                            new TalentModel("Lie Detector", "The character is a human lie detector. They roll an additional d20 when making Psychology tests to determine whether or not someone is lying.", [new TalentPrerequisite("Counsellor")], 1),
                            new TalentModel("Psychoanalyst", "The character is a trained psychologist and is often able to guide a patient’s focus in order to expedite the recovery process. The character may reduce the difficulty of treat tests using the Psychology skill by one step per rank of Psychoanalyst they possess to a minimum of one.", [new TalentPrerequisite("Remote Analyst"), new ExpertisePrerequisite(skills_12.Skill.Psychology, 2)], 3),
                            new TalentModel("Remote Analyst", "The character does not suffer any increase in difficulty to Psychology tests due to being unable to interact with the subject face-to-face.", [new TalentPrerequisite("Counsellor")], 1),
                            new TalentModel("Therapeutic Insight", "The character has a keen insight into those suffering from mental debilitation. When performing the Treat action or assisting on the Recover action using the Psychology skill, the character gains two bonus Momentum, which may only be used to recover Resolve or treat Trauma.", [new TalentPrerequisite("Battlefield Psychology"), new ExpertisePrerequisite(skills_12.Skill.Psychology, 2)], 1),
                        ],
                        _a[skills_12.Skill.Resistance] = [
                            new TalentModel("Fast Healer", "When attempting the Recover action, the character can add an additional d20 to the Resistance test per rank of Fast Healer.", [new TalentPrerequisite("Quick Recovery")], 3),
                            new TalentModel("Just a Scratch", "The character has a knack for ignoring minor injuries and pushing through the pain. When taking the Recover action, the character recovers one additional Vigour per rank of Just a Scratch.", [new TalentPrerequisite("Sturdy")], 3),
                            new TalentModel("Mithradatic", "The character is either naturally resistant to toxins or has become inured to them through constant exposure (possibly pharmacological). When a character needs to make a Resistance test against a poison, toxin, or the effects of drugs, they may reduce the difficulty by one step per rank of Mithradatic. This may reduce the difficulty to zero, eliminating the need for a test.", [new TalentPrerequisite("Sturdy")], 3),
                            new TalentModel("Quick Recovery", "When taking the Absterge action, the difficulty of the Resistance test to remove the condition is reduced by one step, to a minimum of Average (D1).", [new TalentPrerequisite("Just a Scratch"), new ExpertisePrerequisite(skills_12.Skill.Resistance, 2)], 1),
                            new TalentModel("Resilient", "When making a Resistance test to avoid a status condition, the difficulty of the Resistance test to resist the negative effects is reduced by one step per rank of Resilient. This may reduce the difficulty to Simple (D0), eliminating the need for a test.", [new TalentPrerequisite("Sturdy")], 3),
                            new TalentModel("Self-Medicating", "The character has learned how to cope with mental trauma through the heavy use of drugs, alcohol, or other pharmacological means, relying on their physical stamina to endure the results. If they’re able to self-medicate with such substances, the character can use their Resistance skill on any recovery test for which they would normally use Discipline. (This sort of behaviour isn’t healthy, of course, and GMs are encouraged to use complications on the recovery test to reflect this.)", [new TalentPrerequisite("Mithradatic"), new ExpertisePrerequisite(skills_12.Skill.Resistance, 2)], 1),
                            new TalentModel("Sturdy", "When making Resistance tests, the character may reroll any dice that did not generate a success on the initial roll, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Resistance, 1)], 1),
                        ],
                        _a[skills_12.Skill.Science] = [
                            new TalentModel("Applied Sciences", "The character has great experience in taking science out of the lab and into the field. They may substitute their Science skill for any skill tests involving areas of knowledge covered by or involving their Science Specialisation (such as Tech or Education).", [new TalentPrerequisite("Science Specialisation"), new ExpertisePrerequisite(skills_12.Skill.Science, 2)], 1),
                            new TalentModel("Genetic Engineer", "The character is not only familiar with the different organisms that dwell in the Human Sphere, they are also comfortable modifying them or even creating new forms of life. The character can use their Science skill instead of Tech or Medicine when performing genetic engineering and also gains +1d20 to such tests.", [new TalentPrerequisite("Science Specialisation"), new ExpertisePrerequisite(skills_12.Skill.Science, 2)], 1),
                            new TalentModel("Science Specialisation", "The character is particularly devoted to a particular branch of science (which is chosen at the same time as this talent, subject to the GM’s approval). When making a Science test related to that topic, the character gains +1d20 on their test. This talent can be taken multiple times, with each additional rank either granting a new specialisation or an additional +1d20 to an existing specialisation.", [new TalentPrerequisite("Scientist")], TalentSpecial.MaximumRanks_ScienceFocus),
                            new TalentModel("Scientific Intuition", "When making Science tests, the character gains one bonus Momentum per rank of Scientific Intuition.", [new TalentPrerequisite("Scientist")], 3),
                            new TalentModel("Scientist", "The character may reroll one d20 when making a Science test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Science, 1)], 1),
                            new TalentModel("Sorellian Genius", "The adjective of “sorellian”, invoked from the famous Sorel sisters who cracked the mysteries of wormhole travel, has become a popular adjective for gifted scientists. The character may reduce the difficulty of any Science test by one step per rank of Sorellian Genius, to a minimum of Simple (D0).", [new TalentPrerequisite("Scientist")], 3),
                        ],
                        _a[skills_12.Skill.Spacecraft] = [
                            new TalentModel("Alone in the Night", "It’s not unusual for spacecraft to encounter mechanical difficulties far from facilities where repairs can be made. Pilots often gain practical, hands-on experience with repairing their rides. The character can substitute their Spacecraft skill when making Tech tests to repair spacecraft.", [new TalentPrerequisite("Space Ace")], 1),
                            new TalentModel("Fleet Action", "The character has commanded squadrons of spacecraft during conflicts and has survived the experience with tales to tell. They may substitute their Spacecraft skill for Command in any such conflicts.", [new TalentPrerequisite("Star Fighter")], 1),
                            new TalentModel("Fly Casual", "When attempting to evade detection while flying a spacecraft, the character may substitute their Spacecraft skill for Stealth.", [new TalentPrerequisite("Space Ace")], 1),
                            new TalentModel("Space Ace", "The character may reroll one d20 when making a Spacecraft test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Spacecraft, 1)], 1),
                            new TalentModel("Starfighter", "The character may substitute their Spacecraft skill for Ballistics when firing weapons mounted on a space vehicle that they are also piloting.", [new TalentPrerequisite("Starslinger"), new ExpertisePrerequisite(skills_12.Skill.Spacecraft, 2)], 1),
                            new TalentModel("Starslinger", "When making Spacecraft tests involving piloting, the character decreases the difficulty rating by one per rank of Starslinger, to a minimum of Simple (D0).", [new TalentPrerequisite("Space Ace")], 3),
                            new TalentModel("Transatmospheric", "When flying a ship designed for both atmospheric and space flight, the character can substitute their Spacecraft skill for Pilot on tests.", [new TalentPrerequisite("Space Ace")], 1),
                        ],
                        _a[skills_12.Skill.Stealth] = [
                            new TalentModel("Camouflage", "The character recognises that often it is not important for just themselves to remain unseen, but also their allies and any equipment they might be using. When attempting to conceal anything vehicle sized or larger, any Momentum paid to add dice to their Stealth test adds two d20s instead of one.", [new TalentPrerequisite("Scout")], 1),
                            new TalentModel("Disguise", "The character has learned to capably impersonate a broad range of people, effectively blending into the background and acting like they belong. When making Stealth tests to make or use a disguise, they gain bonus Momentum equal to their ranks in Disguise.", [new TalentPrerequisite("Scout")], 1),
                            new TalentModel("Impersonation", "When impersonating another, the character may substitute their Stealth skill for Persuade or Command.", [new TalentPrerequisite("Duisguise"), new ExpertisePrerequisite(skills_12.Skill.Stealth, 2)], 1),
                            new TalentModel("Infiltration", "The character has learned a variety of techniques necessary to bypass security measures when infiltrating a target facility. The character may substitute Stealth for Thievery when attempting to bypass physical security measures.", [new TalentPrerequisite("Living Shadow"), new ExpertisePrerequisite(skills_12.Skill.Stealth, 2)], 1),
                            new TalentModel("Living Shadow", "When the character attempts to remain unseen or unnoticed, any Momentum spent or Heat paid to add dice to their Stealth test adds two d20s instead of one.", [new TalentPrerequisite("Scout")], 1),
                            new TalentModel("Quantronic Static", "When the character attempts to evade detection while hacking, any Momentum spent or Heat paid to add dice to their Stealth test adds two d20s instead of one.", [new TalentPrerequisite("Scout")], 1),
                            new TalentModel("Scout", "The character may reroll one d20 when making a Stealth test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Stealth, 1)], 1),
                        ],
                        _a[skills_12.Skill.Survival] = [
                            new TalentModel("Environmental Specialisation", "The character is particularly devoted to a particular kind of environment (Arctic, Desert, Jungle, Mountain, Forest, Plains, Subterranean, or Urban). When making a Survival test in or related to that environment, the character gains +1d20 on their test. This talent can be taken multiple times, with each additional rank either granting a new specialisation or an additional +1d20 to an existing specialisation.", [new TalentPrerequisite("Self-Sufficient")], TalentSpecial.MaximumRanks_SurvivalFocus),
                            new TalentModel("Natural Allies", "When interacting with creatures native to their Environmental Specialisation, the character may substitute their Survival skill for Animal Handling tests.", [new TalentPrerequisite("Environmental Specialisation"), new ExpertisePrerequisite(skills_12.Skill.Survival, 2)], 1),
                            new TalentModel("One With Your Surroundings", "While moving through their Environmental Specialisation, the character may substitute their Survival skill for Stealth tests.", [new TalentPrerequisite("Environmental Specialisation"), new ExpertisePrerequisite(skills_12.Skill.Survival, 2)], 1),
                            new TalentModel("Provider", "The character is particularly capable of finding the necessities of life. When attempting to find food, water, or shelter, each point of Momentum earned on the Survival test can be spent to provide necessities for two days (instead of the normal one).", [new TalentPrerequisite("Self-Sufficient")], 1),
                            new TalentModel("Scrounger", "Useful items and resources are often discarded or abandoned. A resourceful individual can often recover these for their own purposes. The character may reduce the restriction rating of any item by one per rank of Scrounger, to a minimum of one.", [new TalentPrerequisite("Provider"), new ExpertisePrerequisite(skills_12.Skill.Survival, 2)], 2),
                            new TalentModel("Self-Sufficient", "The character may reroll one d20 when making a Survival test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Survival, 1)], 1),
                            new TalentModel("Tracker", "The character is experienced with recognising all the signs of passage, from the subtle to the obvious. When tracking an opponent, the character reduces the difficulty of the Survival test by one step per rank of Tracker, to a minimum of Simple (D0).", [new TalentPrerequisite("Self-Sufficient")], 3),
                        ],
                        _a[skills_12.Skill.Tech] = [
                            new TalentModel("Design Savant", "The character has a knack for designing novel solutions to problems. Any time the character chooses to design a new piece of equipment – or modify an existing design – they may reduce the difficulty of the Tech test by one step per rank of Design Savant, to a minimum of Simple (D0).", [new TalentPrerequisite("Natural Engineer")], 3),
                            new TalentModel("Explosives Expert", "When setting an explosive charge, the character gains bonus Momentum equal to their ranks in Explosives Expert. ", [new TalentPrerequisite("Natural Engineer"), new ExpertisePrerequisite(skills_12.Skill.Tech, 2)], 3),
                            new TalentModel("Greasemonkey", "The character is familiar with mechanical systems, and recognises the most likely points of failure intuitively. When attempting to treat damage sustained by an object or construct (something with Structure and Faults, instead of Vigour and Wounds), the character gains two bonus Momentum.", [new TalentPrerequisite("Natural Engineer")], 1),
                            new TalentModel("Jury Rig", "Often when a critical piece of equipment breaks down – either due to wear and tear or damage – components necessary to replace it are unavailable. Characters with this talent have a knack for making do without. They suffer no penalty for Tech tests attempted without the use of proper tools. They can also make an Average D1 Tech test to temporarily repair a device when necessary parts are unavailable. On a success, the device will continue functioning for one hour. Each point of Momentum earned on the test can be spent to add an additional hour of function.", [new TalentPrerequisite("Snap Diagnosis"), new ExpertisePrerequisite(skills_12.Skill.Tech, 2)], 1),
                            new TalentModel("Makeshift Wizard", "When the character uses Parts, each Part expended grants two bonus d20s instead of the normal one. (The normal limit of three bonus d20s still applies.)", [new TalentPrerequisite("Greasemonkey"), new ExpertisePrerequisite(skills_12.Skill.Tech, 2)], 1),
                            new TalentModel("Natural Engineer", "When making a Tech test, the character may reroll any dice that did not generate a success on the initial roll, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Tech, 1)], 1),
                            new TalentModel("Snap Diagnosis", "The character is able to identify the problem with any broken or malfunctioning device – to recognise a vulnerability that could be used to compromise it. The character reduces the difficulty of any Tech test performed for diagnostic purposes by one, to a minimum of Simple (D0). When an Exploit action is taken, Snap Diagnosis also grants the Piercing weapon quality to the character’s subsequent attack with a value equal to their Tech Focus (which stacks with the normal Piercing quality granted by Exploit).", [new TalentPrerequisite("Natural Engineer")], 1),
                        ],
                        _a[skills_12.Skill.Thievery] = [
                            new TalentModel("Bypass Security", "The character has studied different security systems and has developed a broad range of different techniques to mitigate their efficiency. Any time the character attempts to pick a lock or overcome a security system – regardless of whether it is electronic or mechanical – they may reroll a number of d20s equal to their ranks in Bypass Security. The results on the rerolled dice must be accepted.", [new TalentPrerequisite("Thief")], 3),
                            new TalentModel("Inconspicuous", "Committing a crime is easy, getting away is harder. Through practice, the character has learned how to avoid notice and slip away undetected. They may substitute their Thievery skill for Stealth when attempting to escape from the scene of a crime, con job, heist, or other Thievery tasks.", [new TalentPrerequisite("Surreptitious Reconnaissance"), new ExpertisePrerequisite(skills_12.Skill.Thievery, 2)], 1),
                            new TalentModel("Life of Crime", "After years of dealing with the criminal underworld, the character has a basic familiarity of how to interact with the Submondo. When making a Persuade or Education test relating to or interacting with the criminal element, they gain bonus Momentum equal to their Life of Crime ranks.", [new TalentPrerequisite("Thief")], 3),
                            new TalentModel("Misdirection", "A successful theft relies on making sure the target has no reason to expect it. In a Face-to-Face Thievery test (such as against Observation to see if a theft is noticed), if the character generates at least one success they can immediately roll an additional d20 and add the result to the skill test.", [new TalentPrerequisite("Surreptitious Reconnaissance"), new ExpertisePrerequisite(skills_12.Skill.Thievery, 2)], 1),
                            new TalentModel("Pick Pocket", "The character is an expert on lifting and placing objects around someone’s person. When making a face-to-face Thievery test (against the target’s Observation) to remove an item from someone’s body, or to place an item on their person, the opponent’s difficulty to detect the crime is increased by one for each rank of Pick Pocket.", [new TalentPrerequisite("Thief")], 3),
                            new TalentModel("Surreptitious Reconnaissance", "When making Observation tests to case a joint, spot a mark, or otherwise prepare for Thievery tasks, the character can substitute their Thievery skill for Analysis or Observation tests.", [new TalentPrerequisite("Thief")], 1),
                            new TalentModel("Thief", "The character may reroll one d20 when making a Thievery test, but must accept the new result.", [new ExpertisePrerequisite(skills_12.Skill.Thievery, 1)], 1),
                        ],
                        _a
                    );
                    var _a;
                }
                Talents.prototype.getTalents = function () {
                    return this._talents;
                };
                Talents.prototype.getTalent = function (name) {
                    var talent = null;
                    var found = false;
                    for (var tal in this._talents) {
                        if (found) {
                            break;
                        }
                        for (var i = 0; i < this._talents[tal].length; i++) {
                            var t = this._talents[tal][i];
                            if (t.name === name) {
                                talent = t;
                                break;
                            }
                        }
                    }
                    return talent;
                };
                Talents.prototype.getTalentsForSkills = function (skills) {
                    var _this = this;
                    var talents = [];
                    skills.forEach(function (s, i) {
                        if (s === undefined) {
                            return;
                        }
                        for (var i = 0; i < _this._talents[s].length; i++) {
                            var include = true;
                            var talent = _this._talents[s][i];
                            talent.prerequisites.forEach(function (p, i) {
                                if (!p.isPrerequisiteFulfilled()) {
                                    include = false;
                                }
                            });
                            if (include) {
                                if (talent.maxRank > 1) {
                                    if (character_14.character.hasTalent(talent.name) && character_14.character.talents[talent.name].rank === talent.maxRank) {
                                        include = false;
                                    }
                                }
                                else if (talent.maxRank === TalentSpecial.MaximumRanks_EducationFocus) {
                                    if (character_14.character.hasTalent(talent.name) && character_14.character.talents[talent.name].rank === character_14.character.skills[skills_12.Skill.Education].focus) {
                                        include = false;
                                    }
                                }
                                else if (talent.maxRank === TalentSpecial.MaximumRanks_ScienceFocus) {
                                    if (character_14.character.hasTalent(talent.name) && character_14.character.talents[talent.name].rank === character_14.character.skills[skills_12.Skill.Science].focus) {
                                        include = false;
                                    }
                                }
                                else if (talent.maxRank === TalentSpecial.MaximumRanks_SurvivalFocus) {
                                    if (character_14.character.hasTalent(talent.name) && character_14.character.talents[talent.name].rank === character_14.character.skills[skills_12.Skill.Survival].focus) {
                                        include = false;
                                    }
                                }
                                else {
                                    if (character_14.character.hasTalent(talent.name)) {
                                        include = false;
                                    }
                                }
                                if (include) {
                                    var rank = character_14.character.hasTalent(talent.name)
                                        ? character_14.character.talents[talent.name].rank + 1
                                        : 1;
                                    talents.push(new TalentViewModel(talent.name, rank, talent.maxRank > 1, talent.description, s));
                                }
                            }
                        }
                    });
                    talents.sort(function (a, b) { return a.name.localeCompare(b.name); });
                    return talents;
                };
                Talents.prototype.getSkillForTalent = function (talent) {
                    var n = 0;
                    for (var skill in this._talents) {
                        for (var i = 0; i < this._talents[skill].length; i++) {
                            var t = this._talents[skill][i];
                            if (t.name === talent) {
                                return n;
                            }
                        }
                        n++;
                    }
                    return n;
                };
                return Talents;
            }());
            exports_23("Talents", Talents);
            exports_23("TalentsHelper", TalentsHelper = new Talents());
        }
    }
});
System.register("helpers/tribes", ["common/character", "helpers/attributes", "helpers/skills", "helpers/factions", "helpers/birthPlaces"], function(exports_24, context_24) {
    "use strict";
    var __moduleName = context_24 && context_24.id;
    var character_15, attributes_11, skills_13, factions_11, birthPlaces_4;
    var Tribe, TribeModel, TribeViewModel, Tribes, TribesHelper;
    return {
        setters:[
            function (character_15_1) {
                character_15 = character_15_1;
            },
            function (attributes_11_1) {
                attributes_11 = attributes_11_1;
            },
            function (skills_13_1) {
                skills_13 = skills_13_1;
            },
            function (factions_11_1) {
                factions_11 = factions_11_1;
            },
            function (birthPlaces_4_1) {
                birthPlaces_4 = birthPlaces_4_1;
            }],
        execute: function() {
            (function (Tribe) {
                Tribe[Tribe["BitterLeaves"] = 0] = "BitterLeaves";
                Tribe[Tribe["BringersOfPeace"] = 1] = "BringersOfPeace";
                Tribe[Tribe["GentleEmbrace"] = 2] = "GentleEmbrace";
                Tribe[Tribe["IceFangs"] = 3] = "IceFangs";
                Tribe[Tribe["RiverTribe"] = 4] = "RiverTribe";
                Tribe[Tribe["WhiteKnives"] = 5] = "WhiteKnives";
                Tribe[Tribe["MothTribe"] = 6] = "MothTribe";
                Tribe[Tribe["BrokenPlains"] = 7] = "BrokenPlains";
                Tribe[Tribe["DeathClaws"] = 8] = "DeathClaws";
                Tribe[Tribe["LongTalons"] = 9] = "LongTalons";
            })(Tribe || (Tribe = {}));
            exports_24("Tribe", Tribe);
            TribeModel = (function () {
                function TribeModel(name, attributes, skill, languages, rollSecondaryLanguage, roll) {
                    this.name = name;
                    this.languages = languages;
                    this.rollSecondaryLanguage = rollSecondaryLanguage;
                    this.attributes = attributes;
                    this.skill = skill;
                    this.roll = roll;
                }
                return TribeModel;
            }());
            TribeViewModel = (function (_super) {
                __extends(TribeViewModel, _super);
                function TribeViewModel(id, base) {
                    _super.call(this, base.name, base.attributes, base.skill, base.languages, base.rollSecondaryLanguage, base.roll);
                    this.id = id;
                }
                return TribeViewModel;
            }(TribeModel));
            exports_24("TribeViewModel", TribeViewModel);
            Tribes = (function () {
                function Tribes() {
                    this._tribes = (_a = {},
                        _a[Tribe.BitterLeaves] = new TribeModel("Bitter Leaves", [attributes_11.Attribute.Personality, attributes_11.Attribute.Agility], skills_13.Skill.Animal_Handling, ["Snarl"], true, 2),
                        _a[Tribe.BringersOfPeace] = new TribeModel("Bringers-of-Peace", [attributes_11.Attribute.Brawn, attributes_11.Attribute.Agility], skills_13.Skill.Close_Combat, ["Snarl", "Antipode Creole"], false, 6),
                        _a[Tribe.GentleEmbrace] = new TribeModel("Gentle Embrace of the Sagacious Progenitors", [attributes_11.Attribute.Willpower, attributes_11.Attribute.Agility], skills_13.Skill.Analysis, ["Snarl"], false, 8),
                        _a[Tribe.IceFangs] = new TribeModel("Ice Fangs", [attributes_11.Attribute.Brawn, attributes_11.Attribute.Agility], skills_13.Skill.Stealth, ["Snarl"], false, 10),
                        _a[Tribe.RiverTribe] = new TribeModel("River Tribe", [attributes_11.Attribute.Brawn, attributes_11.Attribute.Agility], skills_13.Skill.Observation, ["Snarl"], true, 14),
                        _a[Tribe.WhiteKnives] = new TribeModel("White Knives", [attributes_11.Attribute.Willpower, attributes_11.Attribute.Agility], skills_13.Skill.Stealth, ["Snarl"], false, 16),
                        _a[Tribe.MothTribe] = new TribeModel("3-Winged Moth Tribe", [attributes_11.Attribute.Intelligence, attributes_11.Attribute.Agility], skills_13.Skill.Analysis, ["Snarl"], true, 17),
                        _a[Tribe.BrokenPlains] = new TribeModel("Broken Plains Tribe", [attributes_11.Attribute.Awareness, attributes_11.Attribute.Agility], skills_13.Skill.Observation, ["Snarl", "Antipode Creole"], false, 18),
                        _a[Tribe.DeathClaws] = new TribeModel("Death Claws", [attributes_11.Attribute.Brawn, attributes_11.Attribute.Agility], skills_13.Skill.Resistance, ["Snarl"], false, 19),
                        _a[Tribe.LongTalons] = new TribeModel("Long Talons", [attributes_11.Attribute.Brawn, attributes_11.Attribute.Agility], skills_13.Skill.Survival, ["Snarl"], true, 20),
                        _a
                    );
                    var _a;
                }
                Tribes.prototype.getTribes = function () {
                    var tribes = [];
                    var n = 0;
                    for (var tribe in this._tribes) {
                        var tr = this._tribes[tribe];
                        tribes.push(new TribeViewModel(n, tr));
                        n++;
                    }
                    return tribes;
                };
                Tribes.prototype.generateTribe = function () {
                    var roll = Math.floor(Math.random() * 20) + 1;
                    var tribe = 0;
                    var n = 0;
                    for (var t in this._tribes) {
                        var tr = this._tribes[t];
                        if (tr.roll <= roll) {
                            tribe = n;
                            break;
                        }
                        n++;
                    }
                    return tribe;
                };
                Tribes.prototype.getTribe = function (tribe) {
                    return this._tribes[tribe];
                };
                Tribes.prototype.applyTribe = function (tribe) {
                    var tr = this.getTribe(tribe);
                    tr.attributes.forEach(function (attr) {
                        character_15.character.attributes[attr].value++;
                    });
                    if (tr.rollSecondaryLanguage) {
                        character_15.character.addLanguage(birthPlaces_4.BirthPlacesHelper.generateSecondaryLanguage(factions_11.Faction.Ariadna));
                    }
                };
                return Tribes;
            }());
            exports_24("TribesHelper", TribesHelper = new Tribes());
        }
    }
});
System.register("common/characterSerializer", ["common/character", "helpers/skills", "helpers/factions", "helpers/socialClasses", "helpers/homeEnvironments", "helpers/educations", "helpers/careers", "helpers/alienHosts", "helpers/alephForms", "helpers/equipment", "helpers/talents", "helpers/diceRoller"], function(exports_25, context_25) {
    "use strict";
    var __moduleName = context_25 && context_25.id;
    var character_16, skills_14, factions_12, socialClasses_5, homeEnvironments_1, educations_2, careers_6, alienHosts_10, alephForms_1, equipment_1, talents_1, diceRoller_5;
    var CharacterSerializer;
    return {
        setters:[
            function (character_16_1) {
                character_16 = character_16_1;
            },
            function (skills_14_1) {
                skills_14 = skills_14_1;
            },
            function (factions_12_1) {
                factions_12 = factions_12_1;
            },
            function (socialClasses_5_1) {
                socialClasses_5 = socialClasses_5_1;
            },
            function (homeEnvironments_1_1) {
                homeEnvironments_1 = homeEnvironments_1_1;
            },
            function (educations_2_1) {
                educations_2 = educations_2_1;
            },
            function (careers_6_1) {
                careers_6 = careers_6_1;
            },
            function (alienHosts_10_1) {
                alienHosts_10 = alienHosts_10_1;
            },
            function (alephForms_1_1) {
                alephForms_1 = alephForms_1_1;
            },
            function (equipment_1_1) {
                equipment_1 = equipment_1_1;
            },
            function (talents_1_1) {
                talents_1 = talents_1_1;
            },
            function (diceRoller_5_1) {
                diceRoller_5 = diceRoller_5_1;
            }],
        execute: function() {
            CharacterSerializer = (function () {
                function CharacterSerializer() {
                }
                CharacterSerializer.serialize = function (character) {
                    return [
                        { name: "game", value: "INFINITY" },
                        { name: "attributes", value: CharacterSerializer.serializeAttributes(character.attributes) },
                        { name: "modifiers", value: CharacterSerializer.serializeAttributes(character.modifiers) },
                        { name: "skills", value: CharacterSerializer.serializeSkills(character.skills) },
                        { name: "talents", value: CharacterSerializer.serializeTalents(character.talents) },
                        { name: "host", value: CharacterSerializer.serializeHost(character.host) },
                        { name: "hostName", value: character.hostName },
                        { name: "hostAbilities", value: CharacterSerializer.serializeArray(character.hostAbilities) },
                        { name: "faction", value: CharacterSerializer.serializeFaction(character.faction) },
                        { name: "heritage", value: CharacterSerializer.serializeFaction(character.heritage) },
                        { name: "hasDefected", value: character.hasDefected ? "1" : "0" },
                        { name: "alephForm", value: CharacterSerializer.serializeAlephForm(character.alephForm) },
                        { name: "birthPlace", value: character.birthPlace },
                        { name: "socialClass", value: CharacterSerializer.serializeSocialClass(character.socialClass) },
                        { name: "homeEnv", value: CharacterSerializer.serializeHomeEnvironment(character.homeEnvironment) },
                        { name: "education", value: CharacterSerializer.serializeEducation(character.education) },
                        { name: "careers", value: CharacterSerializer.serializeCareers(character.careers) },
                        { name: "languages", value: CharacterSerializer.serializeArray(character.languages) },
                        { name: "name", value: character.name },
                        { name: "age", value: character.age.toString() },
                        { name: "gender", value: character_16.Gender[character.gender] },
                        { name: "specialPoints", value: character.infinityPoints.toString() },
                        { name: "equipment", value: CharacterSerializer.serializeEquipment(character.equipment) },
                        { name: "weapons", value: CharacterSerializer.serializeWeapons(character.equipment) },
                        { name: "ammo", value: CharacterSerializer.serializeAmmo(character.equipment) },
                        { name: "armor", value: CharacterSerializer.serializeArmor(character.equipment) },
                        { name: "derived", value: character.resolve + "," + character.vigour + "," + character.firewall },
                        { name: "bonuses", value: character.meleeBonus + "," + character.rangedBonus + "," + character.infowarBonus + "," + character.psywarBonus },
                        { name: "earnings", value: character.getEarnings().toString() },
                        { name: "assets", value: (character.attributes[5].value + character.assets).toString() },
                        { name: "geistAttributes", value: CharacterSerializer.serializeAttributes(character.geist.attributes) },
                        { name: "geistSkills", value: CharacterSerializer.serializeGeistSkills(character.geist.skills) },
                        { name: "geistBonuses", value: character.geist.firewallBonus + "," + character.geist.moraleBonus },
                        { name: "youthEvent", value: character.youthEvent.description },
                        { name: "adolescenceEvent", value: character.adolescenceEvent.effect },
                        { name: "careerEvents", value: CharacterSerializer.serializeCareerEvents(character.careerEvents) },
                        { name: "description", value: character.description },
                        { name: "appearance", value: CharacterSerializer.serializeAppearance(character) },
                        { name: "morale", value: character.morale.toString() },
                        { name: "soak", value: character.armorBonus.toString() },
                        { name: "bts", value: character.bts.toString() },
                        { name: "traits", value: CharacterSerializer.serializeTraits(character.adolescenceEvent.trait, character.careerEvents.map(function (e) { return e.trait; })) },
                    ];
                };
                CharacterSerializer.serializeAttributes = function (attrs) {
                    var result = "";
                    attrs.forEach(function (a) {
                        result += a.value + ",";
                    });
                    return result;
                };
                CharacterSerializer.serializeSkills = function (skills) {
                    var result = "";
                    skills.forEach(function (s) {
                        result += skills_14.SkillsHelper.getSkillName(s.skill) + "," + s.expertise + "," + s.focus + "," + (s.isSignature ? "1" : "0") + "|";
                    });
                    return result;
                };
                CharacterSerializer.serializeGeistSkills = function (skills) {
                    var result = "";
                    skills.forEach(function (s) {
                        result += skills_14.SkillsHelper.getSkillName(s.skill) + "," + s.expertise + "," + s.focus + "|";
                    });
                    return result;
                };
                CharacterSerializer.serializeTalents = function (talents) {
                    var result = "";
                    for (var talent in talents) {
                        var t = talents[talent];
                        result += talent + "," + t.rank + "," + skills_14.SkillsHelper.getSkillName(talents_1.TalentsHelper.getSkillForTalent(talent)) + "|";
                    }
                    return result;
                };
                CharacterSerializer.serializeFaction = function (faction) {
                    return factions_12.FactionsHelper.getFaction(faction).name;
                };
                CharacterSerializer.serializeSocialClass = function (soc) {
                    return socialClasses_5.SocialClassesHelper.getSocialClass(soc).name;
                };
                CharacterSerializer.serializeHomeEnvironment = function (env) {
                    return homeEnvironments_1.HomeEnvironmentsHelper.getHomeEnvironment(env).name;
                };
                CharacterSerializer.serializeEducation = function (edu) {
                    return educations_2.EducationsHelper.getEducation(edu).name;
                };
                CharacterSerializer.serializeCareers = function (careers) {
                    var result = "";
                    for (var career in careers) {
                        var c = careers[career];
                        result += careers_6.Career[c.career] + "," + c.years + "|";
                    }
                    return result;
                };
                CharacterSerializer.serializeHost = function (host) {
                    return alienHosts_10.AlienHostsHelper.getAlienHost(host).name;
                };
                CharacterSerializer.serializeAlephForm = function (form) {
                    if (!form) {
                        return "";
                    }
                    return alephForms_1.AlephFormsHelper.getForm(form).name;
                };
                CharacterSerializer.serializeCareerEvents = function (events) {
                    var result = "";
                    events.forEach(function (e) {
                        result += e.effect + "|";
                    });
                    return result;
                };
                CharacterSerializer.serializeEquipment = function (eq) {
                    var result = "";
                    eq.forEach(function (item) {
                        if (equipment_1.EquipmentHelper.getWeaponByName(item)) {
                            result += equipment_1.EquipmentHelper.getWeaponByName(item).sheetName + "|";
                        }
                        else {
                            result += item + "|";
                        }
                    });
                    return result;
                };
                CharacterSerializer.serializeWeapons = function (eq) {
                    var result = "";
                    eq.forEach(function (item) {
                        if (equipment_1.EquipmentHelper.getWeaponByName(item)) {
                            var weapon = equipment_1.EquipmentHelper.getWeaponByName(item);
                            var props = weapon.properties;
                            result += weapon.sheetName + "," + (props.range ? props.range : "-") + "," + props.damageBonus + "," + props.damageDice + "," + (props.burst ? props.burst : "-") + "," + equipment_1.EquipmentHelper.sizeToString(props.size) + "," + props.qualities.join(">") + "|";
                        }
                    });
                    return result;
                };
                CharacterSerializer.serializeAmmo = function (eq) {
                    var result = "";
                    eq.forEach(function (item) {
                        if (item && item.indexOf("Reload") > -1) {
                            var quantity = item.substr(0, 1);
                            var type = equipment_1.EquipmentHelper.getAmmo(item.substr(2));
                            var props = type.properties;
                            result += quantity + "," + type.sheetName + "," + props.qualities.join(">") + "|";
                        }
                    });
                    return result;
                };
                CharacterSerializer.serializeArmor = function (eq) {
                    var result = "";
                    var totalAbs = 0;
                    eq.forEach(function (item) {
                        if (equipment_1.EquipmentHelper.getArmorByName(item)) {
                            var armor = equipment_1.EquipmentHelper.getArmorByName(item);
                            var props = armor.properties;
                            if (armor.listName === "Ad-Qali Armour 2") {
                                var location1 = diceRoller_5.DiceRoller.rollHitLocation();
                                var location2 = diceRoller_5.DiceRoller.rollHitLocation();
                                while (location2 === location1) {
                                    location2 = diceRoller_5.DiceRoller.rollHitLocation();
                                }
                                if (location1 === "head" || location2 === "head") {
                                    props.head = 0;
                                }
                                else if (location1 === "torso" || location2 === "torso") {
                                    props.torso = 0;
                                }
                                else if (location1.indexOf("arm") > -1 || location2.indexOf("arm") > -1) {
                                    props.arms = 0;
                                }
                                else if (location1.indexOf("leg") > -1 || location2.indexOf("leg") > -1) {
                                    props.legs = 0;
                                }
                            }
                            var abs = props.head + props.arms + props.torso + props.legs;
                            if (abs > totalAbs) {
                                totalAbs = abs;
                                result = item + "," + props.head + "," + props.arms + "," + props.torso + "," + props.legs + "," + props.qualities.join(">");
                            }
                        }
                    });
                    return result;
                };
                CharacterSerializer.serializeAppearance = function (character) {
                    return (character.height || "") + "|" + (character.weight || "") + "|" + (character.hair || "") + "|" + (character.eyes || "");
                };
                CharacterSerializer.serializeTraits = function (adolescenceTrait, careerTraits) {
                    var result = "" + adolescenceTrait;
                    careerTraits.forEach(function (t) {
                        if (t !== undefined && t.length > 0) {
                            result += "|" + t;
                        }
                    });
                    return result;
                };
                CharacterSerializer.serializeArray = function (array) {
                    var result = "";
                    array.forEach(function (item) {
                        result += item + "|";
                    });
                    return result;
                };
                return CharacterSerializer;
            }());
            exports_25("CharacterSerializer", CharacterSerializer);
        }
    }
});
System.register("common/eventChannel", [], function(exports_26, context_26) {
    "use strict";
    var __moduleName = context_26 && context_26.id;
    var EventIdentity, EventChannel, Events;
    return {
        setters:[],
        execute: function() {
            (function (EventIdentity) {
                EventIdentity[EventIdentity["ShowPage"] = 0] = "ShowPage";
                EventIdentity[EventIdentity["ShowHistory"] = 1] = "ShowHistory";
                EventIdentity[EventIdentity["HistoryBack"] = 2] = "HistoryBack";
                EventIdentity[EventIdentity["UpdateCharacter"] = 3] = "UpdateCharacter";
            })(EventIdentity || (EventIdentity = {}));
            exports_26("EventIdentity", EventIdentity);
            EventChannel = (function () {
                function EventChannel() {
                    this.listeners = {};
                }
                EventChannel.prototype.signal = function (id, arg) {
                    var listeners = this.listeners[id];
                    if (listeners && listeners.length > 0) {
                        listeners.forEach(function (listen) {
                            listen(arg);
                        });
                    }
                };
                EventChannel.prototype.listen = function (id, handler) {
                    var listeners = this.listeners[id];
                    if (listeners) {
                        listeners.push(handler);
                    }
                    else {
                        this.listeners[id] = [handler];
                    }
                };
                return EventChannel;
            }());
            exports_26("EventChannel", EventChannel);
            exports_26("Events", Events = new EventChannel());
        }
    }
});
System.register("common/extensions", [], function(exports_27, context_27) {
    "use strict";
    var __moduleName = context_27 && context_27.id;
    function CopyObject(target) {
        var sources = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            sources[_i - 1] = arguments[_i];
        }
        if (target === undefined || target === null) {
            throw new TypeError('CopyObject failed due to inconsistent cast.');
        }
        var to = Object(target);
        for (var i = 0; i < sources.length; i++) {
            var nextSource = sources[i];
            if (nextSource === undefined || nextSource === null) {
                continue;
            }
            nextSource = Object(nextSource);
            var keysArray = Object.keys(nextSource);
            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
                var nextKey = keysArray[nextIndex];
                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
                if (desc !== undefined && desc.enumerable) {
                    to[nextKey] = nextSource[nextKey];
                }
            }
        }
        return to;
    }
    exports_27("CopyObject", CopyObject);
    function DelayPromise(milliseconds) {
        return new Promise(function (resolve, reject) {
            setTimeout(resolve, milliseconds);
        });
    }
    exports_27("DelayPromise", DelayPromise);
    return {
        setters:[],
        execute: function() {
        }
    }
});
System.register("components/pageHeader", ['react'], function(exports_28, context_28) {
    "use strict";
    var __moduleName = context_28 && context_28.id;
    var React;
    var PageHeader;
    return {
        setters:[
            function (React_1) {
                React = React_1;
            }],
        execute: function() {
            PageHeader = (function (_super) {
                __extends(PageHeader, _super);
                function PageHeader(props) {
                    _super.call(this, props);
                }
                PageHeader.prototype.render = function () {
                    return (React.createElement("div", {className: "header"}, React.createElement("div", {className: "header-title"}, this.props.text)));
                };
                return PageHeader;
            }(React.Component));
            exports_28("PageHeader", PageHeader);
        }
    }
});
System.register("components/button", ['react', "common/character"], function(exports_29, context_29) {
    "use strict";
    var __moduleName = context_29 && context_29.id;
    var React, character_17;
    var Button;
    return {
        setters:[
            function (React_2) {
                React = React_2;
            },
            function (character_17_1) {
                character_17 = character_17_1;
            }],
        execute: function() {
            Button = (function (_super) {
                __extends(Button, _super);
                function Button(props) {
                    _super.call(this, props);
                }
                Button.prototype.render = function () {
                    var _this = this;
                    var lifePoints = this.props.lpCost
                        ? this.props.lpCost === -1
                            ? "+1 LP"
                            : "-" + this.props.lpCost + " LP"
                        : undefined;
                    var badge = this.props.lpCost && character_17.character.lifePoints >= this.props.lpCost
                        ? React.createElement("div", {className: "lp-badge"}, lifePoints)
                        : undefined;
                    var content = this.props.lpCost && character_17.character.lifePoints < this.props.lpCost
                        ? (React.createElement("div", null))
                        : (React.createElement("div", {className: "button-title"}, this.props.text));
                    var buttonClassName = character_17.character.lifePoints < this.props.lpCost
                        ? "button-hidden"
                        : this.props.className;
                    return (React.createElement("div", {className: buttonClassName, onClick: function () { return _this.props.onClick(); }}, content, badge));
                };
                return Button;
            }(React.Component));
            exports_29("Button", Button);
        }
    }
});
System.register("components/checkBox", ['react'], function(exports_30, context_30) {
    "use strict";
    var __moduleName = context_30 && context_30.id;
    var React;
    var CheckBox;
    return {
        setters:[
            function (React_3) {
                React = React_3;
            }],
        execute: function() {
            CheckBox = (function (_super) {
                __extends(CheckBox, _super);
                function CheckBox(props) {
                    _super.call(this, props);
                }
                CheckBox.prototype.render = function () {
                    var _a = this.props, value = _a.value, onChanged = _a.onChanged, isChecked = _a.isChecked;
                    return (React.createElement("input", {type: "checkbox", value: value, onChange: function (e) { return onChanged(value); }, checked: isChecked}));
                };
                return CheckBox;
            }(React.Component));
            exports_30("CheckBox", CheckBox);
        }
    }
});
System.register("pages/pathSelectionPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/checkBox", "helpers/sources"], function(exports_31, context_31) {
    "use strict";
    var __moduleName = context_31 && context_31.id;
    var React, character_18, navigator_1, pageFactory_1, pageHeader_1, button_1, checkBox_1, sources_10;
    var PathSelectionPage;
    return {
        setters:[
            function (React_4) {
                React = React_4;
            },
            function (character_18_1) {
                character_18 = character_18_1;
            },
            function (navigator_1_1) {
                navigator_1 = navigator_1_1;
            },
            function (pageFactory_1_1) {
                pageFactory_1 = pageFactory_1_1;
            },
            function (pageHeader_1_1) {
                pageHeader_1 = pageHeader_1_1;
            },
            function (button_1_1) {
                button_1 = button_1_1;
            },
            function (checkBox_1_1) {
                checkBox_1 = checkBox_1_1;
            },
            function (sources_10_1) {
                sources_10 = sources_10_1;
            }],
        execute: function() {
            PathSelectionPage = (function (_super) {
                __extends(PathSelectionPage, _super);
                function PathSelectionPage(props) {
                    _super.call(this, props);
                }
                PathSelectionPage.prototype.render = function () {
                    var _this = this;
                    var sources = sources_10.SourcesHelper.getSources().map(function (src, i) {
                        return (React.createElement("div", {key: i, className: "panel"}, React.createElement("div", {className: "source-select"}, React.createElement(checkBox_1.CheckBox, {value: i, onChanged: function (val) { return _this.onSourceChanged(val); }, isChecked: character_18.character.hasSource(i)})), React.createElement("div", {className: "source-name"}, src.name)));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_1.PageHeader, {text: "PATH CHOICE"}), React.createElement("div", {className: "page-text"}, "Select your sources and character creation path.", React.createElement("br", null), "Ask your GM for available sources."), React.createElement("div", {className: "source-list", cellSpacing: "0", cellPadding: "0"}, sources), React.createElement("br", null), React.createElement("br", null), React.createElement("div", {className: "center-container"}, React.createElement("div", {className: "path-choice"}, React.createElement("h3", {className: "option-header"}, "NORMAL"), React.createElement("br", null), "You gain ", React.createElement("b", null, "5 Life Points"), " to help you navigate the tumultous nature of your personal histories." + ' ' + "Excess Life Points may be traded for Infinity Points or Assets during the final step.", React.createElement("br", null), React.createElement("br", null), React.createElement("br", null), React.createElement("br", null), React.createElement(button_1.Button, {className: "button-dark", text: "Select", onClick: function () { _this.onNormalSelected(); }}), React.createElement("br", null)), React.createElement("div", {style: { width: "20px", display: "inline-block" }}, " "), React.createElement("div", {className: "path-choice"}, React.createElement("h3", {className: "option-header"}, "OPTIONAL"), React.createElement("br", null), React.createElement("strong", null, "Use only if your GM allows it!"), React.createElement("br", null), React.createElement("br", null), "You gain ", React.createElement("b", null, "12 Life Points"), " to help you make the choices you want during character creation." + ' ' + "Excess Life Points ", React.createElement("i", null, "cannot"), " be traded for Infinity Points or Assets during the final step.", React.createElement("br", null), React.createElement("br", null), React.createElement(button_1.Button, {className: "button-dark", text: "Select", onClick: function () { _this.onOptionalSelected(); }}), React.createElement("br", null)))));
                };
                PathSelectionPage.prototype.onSourceChanged = function (source) {
                    if (character_18.character.hasSource(source)) {
                        character_18.character.removeSource(source);
                    }
                    else {
                        character_18.character.addSource(source);
                    }
                    this.forceUpdate();
                };
                PathSelectionPage.prototype.onNormalSelected = function () {
                    character_18.character.lifePoints = 5;
                    character_18.character.isOptional = false;
                    navigator_1.Navigation.navigateToPage(pageFactory_1.PageIdentity.BirthHost);
                };
                PathSelectionPage.prototype.onOptionalSelected = function () {
                    character_18.character.lifePoints = 12;
                    character_18.character.isOptional = true;
                    navigator_1.Navigation.navigateToPage(pageFactory_1.PageIdentity.BirthHost);
                };
                return PathSelectionPage;
            }(React.Component));
            exports_31("PathSelectionPage", PathSelectionPage);
        }
    }
});
System.register("components/attributeImprovement", ['react', "helpers/attributes", "common/character"], function(exports_32, context_32) {
    "use strict";
    var __moduleName = context_32 && context_32.id;
    var React, attributes_12, character_19;
    var AttributeImprovement, AttributeImprovementCollectionMode, AttributeContainer, AttributeImprovementCollection;
    return {
        setters:[
            function (React_5) {
                React = React_5;
            },
            function (attributes_12_1) {
                attributes_12 = attributes_12_1;
            },
            function (character_19_1) {
                character_19 = character_19_1;
            }],
        execute: function() {
            AttributeImprovement = (function (_super) {
                __extends(AttributeImprovement, _super);
                function AttributeImprovement(props) {
                    _super.call(this, props);
                }
                AttributeImprovement.prototype.render = function () {
                    var _this = this;
                    var _a = this.props, attribute = _a.attribute, value = _a.value, showDecrease = _a.showDecrease, showIncrease = _a.showIncrease;
                    var dec = showDecrease
                        ? (React.createElement("img", {style: { float: "left" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecrease(); }}))
                        : undefined;
                    var inc = showIncrease
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncrease(); }}))
                        : undefined;
                    return (React.createElement("div", null, React.createElement("div", {className: "attribute-container"}, attributes_12.AttributesHelper.getAttributeName(attribute)), React.createElement("div", {className: "attribute-value"}, dec, value, inc)));
                };
                AttributeImprovement.prototype.onDecrease = function () {
                    this.props.controller.onDecrease(this.props.attribute);
                };
                AttributeImprovement.prototype.onIncrease = function () {
                    this.props.controller.onIncrease(this.props.attribute);
                };
                return AttributeImprovement;
            }(React.Component));
            exports_32("AttributeImprovement", AttributeImprovement);
            (function (AttributeImprovementCollectionMode) {
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Normal"] = 0] = "Normal";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Increase"] = 1] = "Increase";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Decrease"] = 2] = "Decrease";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["LifePoints"] = 3] = "LifePoints";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Conan"] = 4] = "Conan";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Geist"] = 5] = "Geist";
                AttributeImprovementCollectionMode[AttributeImprovementCollectionMode["Aleph"] = 6] = "Aleph";
            })(AttributeImprovementCollectionMode || (AttributeImprovementCollectionMode = {}));
            exports_32("AttributeImprovementCollectionMode", AttributeImprovementCollectionMode);
            AttributeContainer = (function () {
                function AttributeContainer(attribute, value, minValue, maxValue, showDecrease, showIncrease) {
                    this.attribute = attribute;
                    this.value = value;
                    this.minValue = minValue;
                    this.maxValue = maxValue;
                    this.showDecrease = showDecrease;
                    this.showIncrease = showIncrease;
                }
                return AttributeContainer;
            }());
            AttributeImprovementCollection = (function (_super) {
                __extends(AttributeImprovementCollection, _super);
                function AttributeImprovementCollection(props) {
                    _super.call(this, props);
                    this._absoluteMax = 12;
                    this._points = props.points;
                    this._attributes = [];
                    switch (props.mode) {
                        case AttributeImprovementCollectionMode.Normal:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                if (this.addAttribute(character_19.character.attributes[i].attribute)) {
                                    this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, 6, 8, true, false));
                                }
                            }
                            break;
                        case AttributeImprovementCollectionMode.Increase:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                if (this.addAttribute(character_19.character.attributes[i].attribute)) {
                                    this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, character_19.character.attributes[i].value, this._absoluteMax, false, character_19.character.attributes[i].value < this._absoluteMax));
                                }
                            }
                            break;
                        case AttributeImprovementCollectionMode.Decrease:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                if (this.addAttribute(character_19.character.attributes[i].attribute)) {
                                    this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, 1, character_19.character.attributes[i].value, true, false));
                                }
                            }
                            break;
                        case AttributeImprovementCollectionMode.LifePoints:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, character_19.character.attributes[i].value, 10, false, true));
                            }
                            break;
                        case AttributeImprovementCollectionMode.Conan:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, 6, 8, true, false));
                            }
                            break;
                        case AttributeImprovementCollectionMode.Geist:
                            for (var i = 0; i < character_19.character.geist.attributes.length; i++) {
                                this._attributes.push(new AttributeContainer(character_19.character.geist.attributes[i].attribute, character_19.character.geist.attributes[i].value, character_19.character.geist.attributes[i].value, 5, false, true));
                            }
                            break;
                        case AttributeImprovementCollectionMode.Aleph:
                            for (var i = 0; i < character_19.character.attributes.length; i++) {
                                this._attributes.push(new AttributeContainer(character_19.character.attributes[i].attribute, character_19.character.attributes[i].value, character_19.character.attributes[i].value, character_19.character.attributes[i].value + 1, false, true));
                            }
                            break;
                    }
                }
                AttributeImprovementCollection.prototype.render = function () {
                    var _this = this;
                    var attributes = this._attributes.map(function (a, i) {
                        return React.createElement(AttributeImprovement, {key: i, controller: _this, attribute: a.attribute, value: a.value, showIncrease: a.showIncrease, showDecrease: a.showDecrease});
                    });
                    return (React.createElement("div", null, attributes));
                };
                AttributeImprovementCollection.prototype.onDecrease = function (attr) {
                    for (var i = 0; i < this._attributes.length; i++) {
                        var a = this._attributes[i];
                        if (a.attribute === attr) {
                            a.value--;
                            if (this.props.mode === AttributeImprovementCollectionMode.Geist) {
                                character_19.character.geist.attributes[a.attribute].value = a.value;
                            }
                            else {
                                character_19.character.attributes[a.attribute].value = a.value;
                            }
                            break;
                        }
                    }
                    switch (this.props.mode) {
                        case AttributeImprovementCollectionMode.Normal:
                            this._points++;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Increase:
                        case AttributeImprovementCollectionMode.Geist:
                            this._points++;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Decrease:
                            this._points--;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue && this._points > 0;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.LifePoints:
                            character_19.character.lifePoints++;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Conan:
                            this._points++;
                            var numDec = 0;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                if (a.value === a.minValue) {
                                    numDec++;
                                }
                            }
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue && numDec < 2;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Aleph:
                            this._points++;
                            var numInc = 0;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                if (a.value === a.maxValue) {
                                    numInc++;
                                }
                            }
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value === a.maxValue;
                                a.showIncrease = a.value === a.minValue && this._points > 0;
                            }
                            break;
                    }
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    this.forceUpdate();
                };
                AttributeImprovementCollection.prototype.onIncrease = function (attr) {
                    for (var i = 0; i < this._attributes.length; i++) {
                        var a = this._attributes[i];
                        if (a.attribute === attr) {
                            a.value++;
                            if (this.props.mode === AttributeImprovementCollectionMode.Geist) {
                                character_19.character.geist.attributes[a.attribute].value = a.value;
                            }
                            else {
                                character_19.character.attributes[a.attribute].value = a.value;
                            }
                            break;
                        }
                    }
                    switch (this.props.mode) {
                        case AttributeImprovementCollectionMode.Normal:
                            this._points--;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue && this._points > 0;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Increase:
                        case AttributeImprovementCollectionMode.Geist:
                            this._points--;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue && this._points > 0;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Decrease:
                            this._points++;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue;
                            }
                            break;
                        case AttributeImprovementCollectionMode.LifePoints:
                            character_19.character.lifePoints--;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value > a.minValue;
                                a.showIncrease = a.value < a.maxValue && character_19.character.lifePoints > 0;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Conan:
                            this._points--;
                            var numDec = 0;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                if (a.value === a.minValue) {
                                    numDec++;
                                }
                            }
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = (a.value > a.minValue && numDec < 2) || a.value === a.maxValue;
                                a.showIncrease = this._points > 0;
                            }
                            break;
                        case AttributeImprovementCollectionMode.Aleph:
                            this._points--;
                            var numInc = 0;
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                if (a.value === a.maxValue) {
                                    numInc++;
                                }
                            }
                            for (var i = 0; i < this._attributes.length; i++) {
                                var a = this._attributes[i];
                                a.showDecrease = a.value === a.maxValue;
                                a.showIncrease = a.value === a.minValue && this._points > 0;
                            }
                            break;
                    }
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    this.forceUpdate();
                };
                AttributeImprovementCollection.prototype.addAttribute = function (attribute) {
                    if (!this.props.attributes) {
                        return true;
                    }
                    return this.props.attributes.indexOf(attribute) > -1;
                };
                return AttributeImprovementCollection;
            }(React.Component));
            exports_32("AttributeImprovementCollection", AttributeImprovementCollection);
        }
    }
});
System.register("pages/birthHostPage", ['react', "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/attributeImprovement"], function(exports_33, context_33) {
    "use strict";
    var __moduleName = context_33 && context_33.id;
    var React, navigator_2, pageFactory_2, pageHeader_2, button_2, attributeImprovement_1;
    var BirthHostPage;
    return {
        setters:[
            function (React_6) {
                React = React_6;
            },
            function (navigator_2_1) {
                navigator_2 = navigator_2_1;
            },
            function (pageFactory_2_1) {
                pageFactory_2 = pageFactory_2_1;
            },
            function (pageHeader_2_1) {
                pageHeader_2 = pageHeader_2_1;
            },
            function (button_2_1) {
                button_2 = button_2_1;
            },
            function (attributeImprovement_1_1) {
                attributeImprovement_1 = attributeImprovement_1_1;
            }],
        execute: function() {
            BirthHostPage = (function (_super) {
                __extends(BirthHostPage, _super);
                function BirthHostPage(props) {
                    _super.call(this, props);
                }
                BirthHostPage.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_2.PageHeader, {text: "BIRTH HOST"}), React.createElement("div", {className: "page-text"}, "Your life begins with attributes determined by a range of factors that influence your early life. Your Lifepath will take you through a series of events that will determine your" + ' ' + "starting Attributes. At this point, all Attributes start at 7. You may lower any Attribute by 1 to increase another by 1. No Attribute may go below 6 or above 8 at this point."), React.createElement("div", {className: "panel"}, React.createElement(attributeImprovement_1.AttributeImprovementCollection, {mode: attributeImprovement_1.AttributeImprovementCollectionMode.Normal, points: 0})), React.createElement(button_2.Button, {text: "NEXT", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                BirthHostPage.prototype.onNext = function () {
                    navigator_2.Navigation.navigateToPage(pageFactory_2.PageIdentity.BirthHost_LifePoints);
                };
                return BirthHostPage;
            }(React.Component));
            exports_33("BirthHostPage", BirthHostPage);
        }
    }
});
System.register("pages/birthHostPage_LifePoints", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/attributeImprovement"], function(exports_34, context_34) {
    "use strict";
    var __moduleName = context_34 && context_34.id;
    var React, character_20, navigator_3, pageFactory_3, pageHeader_3, button_3, attributeImprovement_2;
    var BirthHostPage_LifePoints;
    return {
        setters:[
            function (React_7) {
                React = React_7;
            },
            function (character_20_1) {
                character_20 = character_20_1;
            },
            function (navigator_3_1) {
                navigator_3 = navigator_3_1;
            },
            function (pageFactory_3_1) {
                pageFactory_3 = pageFactory_3_1;
            },
            function (pageHeader_3_1) {
                pageHeader_3 = pageHeader_3_1;
            },
            function (button_3_1) {
                button_3 = button_3_1;
            },
            function (attributeImprovement_2_1) {
                attributeImprovement_2 = attributeImprovement_2_1;
            }],
        execute: function() {
            BirthHostPage_LifePoints = (function (_super) {
                __extends(BirthHostPage_LifePoints, _super);
                function BirthHostPage_LifePoints(props) {
                    _super.call(this, props);
                }
                BirthHostPage_LifePoints.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_3.PageHeader, {text: "BIRTH HOST"}), React.createElement("div", {className: "page-text"}, "You may now increase attributes using Life Points.1 Life Points equals 1 point of increase in an attribute." + ' ' + "No attributes can be raised higher than 10, and any attributes above 8 usually represent some form of genetic tweaking or similar modification."), React.createElement("div", {className: "panel"}, React.createElement(attributeImprovement_2.AttributeImprovementCollection, {mode: attributeImprovement_2.AttributeImprovementCollectionMode.LifePoints, points: 0})), React.createElement(button_3.Button, {text: "HOST BODY", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                BirthHostPage_LifePoints.prototype.onNext = function () {
                    character_20.character.calculateModifiers();
                    navigator_3.Navigation.navigateToPage(pageFactory_3.PageIdentity.HostBody);
                };
                return BirthHostPage_LifePoints;
            }(React.Component));
            exports_34("BirthHostPage_LifePoints", BirthHostPage_LifePoints);
        }
    }
});
System.register("components/dialog", ['react', 'react-dom', "components/button"], function(exports_35, context_35) {
    "use strict";
    var __moduleName = context_35 && context_35.id;
    var React, ReactDOM, button_4;
    var _Dialog, _DialogYesNo, DialogControl, Dialog;
    return {
        setters:[
            function (React_8) {
                React = React_8;
            },
            function (ReactDOM_1) {
                ReactDOM = ReactDOM_1;
            },
            function (button_4_1) {
                button_4 = button_4_1;
            }],
        execute: function() {
            _Dialog = (function (_super) {
                __extends(_Dialog, _super);
                function _Dialog(props) {
                    _super.call(this, props);
                }
                _Dialog.prototype.render = function () {
                    var _this = this;
                    var _a = this.props, message = _a.message, isVisible = _a.isVisible;
                    var visibilityClass = isVisible
                        ? "dialog-visible"
                        : "dialog-hidden";
                    var containerClass = isVisible
                        ? "dialog-container dialog-container-visible"
                        : "dialog-container";
                    return (React.createElement("div", {className: visibilityClass}, React.createElement("div", {className: "dialog-bg"}), React.createElement("div", {className: containerClass}, this.props.message, React.createElement("br", null), React.createElement("div", {className: "button-container"}, React.createElement(button_4.Button, {text: "OK", className: "button", onClick: function () { _this.onDismiss(); }})))));
                };
                _Dialog.prototype.onDismiss = function () {
                    if (this.props.onDismiss) {
                        this.props.onDismiss();
                    }
                    Dialog.hide();
                };
                return _Dialog;
            }(React.Component));
            _DialogYesNo = (function (_super) {
                __extends(_DialogYesNo, _super);
                function _DialogYesNo(props) {
                    _super.call(this, props);
                }
                _DialogYesNo.prototype.render = function () {
                    var _this = this;
                    var _a = this.props, message = _a.message, isVisible = _a.isVisible;
                    var visibilityClass = isVisible
                        ? "dialog-visible"
                        : "dialog-hidden";
                    var containerClass = isVisible
                        ? "dialog-container dialog-container-visible"
                        : "dialog-container";
                    return (React.createElement("div", {className: visibilityClass}, React.createElement("div", {className: "dialog-bg"}), React.createElement("div", {className: containerClass}, this.props.message, React.createElement("br", null), React.createElement("div", {className: "button-container"}, React.createElement(button_4.Button, {text: "Yes", className: "button", onClick: function () { _this.onConfirm(); }}), React.createElement(button_4.Button, {text: "No", className: "button", onClick: function () { _this.onDismiss(); }})))));
                };
                _DialogYesNo.prototype.onConfirm = function () {
                    if (this.props.onConfirm) {
                        this.props.onConfirm();
                    }
                    Dialog.hide();
                };
                _DialogYesNo.prototype.onDismiss = function () {
                    if (this.props.onDismiss) {
                        this.props.onDismiss();
                    }
                    Dialog.hide();
                };
                return _DialogYesNo;
            }(React.Component));
            DialogControl = (function () {
                function DialogControl() {
                }
                DialogControl.prototype.show = function (message, onDismiss) {
                    this._message = message;
                    this._dissmissFunc = onDismiss;
                    this.render(true);
                };
                DialogControl.prototype.showYesNo = function (message, onYes, onNo) {
                    this._message = message;
                    this._confirmFunc = onYes;
                    this._dissmissFunc = onNo;
                    this.render(true, true);
                };
                DialogControl.prototype.hide = function () {
                    this.render(false);
                };
                DialogControl.prototype.render = function (visible, yesNo) {
                    if (!yesNo) {
                        ReactDOM.render(React.createElement(_Dialog, {
                            message: this._message,
                            onDismiss: this._dissmissFunc,
                            isVisible: visible
                        }), document.getElementById("dialog"));
                    }
                    else {
                        ReactDOM.render(React.createElement(_DialogYesNo, {
                            message: this._message,
                            onConfirm: this._confirmFunc,
                            onDismiss: this._dissmissFunc,
                            isVisible: visible
                        }), document.getElementById("dialog"));
                    }
                };
                return DialogControl;
            }());
            exports_35("Dialog", Dialog = new DialogControl());
        }
    }
});
System.register("pages/hostBodyPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "helpers/alienHosts", "helpers/factions", "helpers/attributes"], function(exports_36, context_36) {
    "use strict";
    var __moduleName = context_36 && context_36.id;
    var React, character_21, navigator_4, pageFactory_4, pageHeader_4, button_5, alienHosts_11, factions_13, attributes_13;
    var HostBodyPage;
    return {
        setters:[
            function (React_9) {
                React = React_9;
            },
            function (character_21_1) {
                character_21 = character_21_1;
            },
            function (navigator_4_1) {
                navigator_4 = navigator_4_1;
            },
            function (pageFactory_4_1) {
                pageFactory_4 = pageFactory_4_1;
            },
            function (pageHeader_4_1) {
                pageHeader_4 = pageHeader_4_1;
            },
            function (button_5_1) {
                button_5 = button_5_1;
            },
            function (alienHosts_11_1) {
                alienHosts_11 = alienHosts_11_1;
            },
            function (factions_13_1) {
                factions_13 = factions_13_1;
            },
            function (attributes_13_1) {
                attributes_13 = attributes_13_1;
            }],
        execute: function() {
            HostBodyPage = (function (_super) {
                __extends(HostBodyPage, _super);
                function HostBodyPage(props) {
                    _super.call(this, props);
                }
                HostBodyPage.prototype.render = function () {
                    var _this = this;
                    var hosts = alienHosts_11.AlienHostsHelper.getAlienHosts().map(function (host, i) {
                        var attributes = host.attributeBonuses.map(function (attr, i) {
                            return (React.createElement("div", {key: i}, attributes_13.AttributesHelper.getAttributeName(i).substring(0, 3), " ", attr >= 0 ? "+" : "", attr));
                        });
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, host.name), React.createElement("td", null, React.createElement("small", null, host.faction)), React.createElement("td", null, attributes), React.createElement("td", null, host.cost), React.createElement("td", null, React.createElement(button_5.Button, {text: "Select", className: "button-small", onClick: function () { return _this.onHostSelected(host.id); }}))));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_4.PageHeader, {text: "HOST BODY"}), React.createElement("div", {className: "page-text"}, "Select your host body (contrary to the book, no roll is needed, this step has been simplified)." + ' ' + "A non-Human host gives you attribute bonuses" + ' ' + "as well as special abilities. But there is a Lifepoint cost attached." + ' ' + "Below you can see the available hosts."), React.createElement("div", {className: "panel"}, React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attributes")), React.createElement("td", null, React.createElement("h3", null, "Cost")), React.createElement("td", null))), React.createElement("tbody", null, hosts)))));
                };
                HostBodyPage.prototype.onHostSelected = function (host) {
                    character_21.character.host = host;
                    var alienHost = alienHosts_11.AlienHostsHelper.getAlienHost(host);
                    alienHosts_11.AlienHostsHelper.applyAlienHost(host);
                    if (host === alienHosts_11.AlienHost.Human) {
                        navigator_4.Navigation.navigateToPage(pageFactory_4.PageIdentity.Faction);
                    }
                    else {
                        switch (host) {
                            case alienHosts_11.AlienHost.Antipode:
                            case alienHosts_11.AlienHost.Dogface:
                            case alienHosts_11.AlienHost.Wulver:
                                factions_13.FactionsHelper.applyFaction(factions_13.Faction.Ariadna);
                                break;
                            case alienHosts_11.AlienHost.Helot:
                                factions_13.FactionsHelper.applyFaction(factions_13.Faction.PanOceania);
                                break;
                        }
                        navigator_4.Navigation.navigateToPage(pageFactory_4.PageIdentity.FactionDetails);
                    }
                };
                return HostBodyPage;
            }(React.Component));
            exports_36("HostBodyPage", HostBodyPage);
        }
    }
});
System.register("components/factionSelection", ['react', "common/character", "helpers/factions", "helpers/skills", "components/button"], function(exports_37, context_37) {
    "use strict";
    var __moduleName = context_37 && context_37.id;
    var React, character_22, factions_14, skills_15, button_6;
    var FactionSelection;
    return {
        setters:[
            function (React_10) {
                React = React_10;
            },
            function (character_22_1) {
                character_22 = character_22_1;
            },
            function (factions_14_1) {
                factions_14 = factions_14_1;
            },
            function (skills_15_1) {
                skills_15 = skills_15_1;
            },
            function (button_6_1) {
                button_6 = button_6_1;
            }],
        execute: function() {
            FactionSelection = (function (_super) {
                __extends(FactionSelection, _super);
                function FactionSelection(props) {
                    _super.call(this, props);
                }
                FactionSelection.prototype.render = function () {
                    var _this = this;
                    var factions = factions_14.FactionsHelper.getFactions().map(function (f, i) {
                        if ((_this.props.showOnlyNonHeritageFactions && f.needsHeritage) ||
                            (f.id === character_22.character.faction && !_this.props.showOwnFaction)) {
                            return undefined;
                        }
                        var skills = _this.props.showSkills
                            ? f.skills.map(function (s, i) {
                                return (React.createElement("div", {key: i}, skills_15.SkillsHelper.getSkillName(s)));
                            })
                            : undefined;
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, f.name), React.createElement("td", null, skills), React.createElement("td", null, React.createElement(button_6.Button, {className: "button-small", text: "Select", onClick: function () { _this.props.onSelection(f.id); }}))));
                    });
                    var skillsHeader = this.props.showSkills ? (React.createElement("h3", null, "Skills")) : undefined;
                    var cancel = this.props.showCancel ? (React.createElement(button_6.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})) : undefined;
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT FACTION"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, skillsHeader), React.createElement("td", null))), React.createElement("tbody", null, factions)), cancel));
                };
                return FactionSelection;
            }(React.Component));
            exports_37("FactionSelection", FactionSelection);
        }
    }
});
System.register("pages/factionPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/factionSelection", "helpers/factions"], function(exports_38, context_38) {
    "use strict";
    var __moduleName = context_38 && context_38.id;
    var React, character_23, navigator_5, pageFactory_5, pageHeader_5, button_7, factionSelection_1, factions_15;
    var FactionPage;
    return {
        setters:[
            function (React_11) {
                React = React_11;
            },
            function (character_23_1) {
                character_23 = character_23_1;
            },
            function (navigator_5_1) {
                navigator_5 = navigator_5_1;
            },
            function (pageFactory_5_1) {
                pageFactory_5 = pageFactory_5_1;
            },
            function (pageHeader_5_1) {
                pageHeader_5 = pageHeader_5_1;
            },
            function (button_7_1) {
                button_7 = button_7_1;
            },
            function (factionSelection_1_1) {
                factionSelection_1 = factionSelection_1_1;
            },
            function (factions_15_1) {
                factions_15 = factions_15_1;
            }],
        execute: function() {
            FactionPage = (function (_super) {
                __extends(FactionPage, _super);
                function FactionPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                FactionPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_23.character.isOptional
                        ? (React.createElement(button_7.Button, {text: "ROLL FACTION", className: "button-dark", onClick: function () { _this.rollFaction(); }}))
                        : undefined;
                    var select = (React.createElement(button_7.Button, {text: "SELECT FACTION", lpCost: 1, className: "button-dark", onClick: function () { _this.showFactions(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "Where were you born and to which faction do you owe allegiance? Your faction is the political faction you currently belong to. Your heritage is the faction you were born into."), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(factionSelection_1.FactionSelection, {showSkills: true, onSelection: function (faction) {
                            character_23.character.paidForFaction = true;
                            _this.selectFaction(faction);
                            character_23.character.lifePoints--;
                        }, onCancel: function () { _this.hideFactions(); }, showCancel: true}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_5.PageHeader, {text: "FACTION"}), content));
                };
                FactionPage.prototype.rollFaction = function () {
                    var faction = factions_15.FactionsHelper.generateFaction();
                    this.selectFaction(faction);
                };
                FactionPage.prototype.showFactions = function () {
                    this.setState({ showSelection: true });
                };
                FactionPage.prototype.hideFactions = function () {
                    this.setState({ showSelection: false });
                };
                FactionPage.prototype.selectFaction = function (faction) {
                    if (faction === factions_15.Faction.Defection) {
                        character_23.character.hasDefected = true;
                        character_23.character.faction = factions_15.FactionsHelper.generateFaction(true);
                        character_23.character.heritage = factions_15.FactionsHelper.generateFaction(true);
                        while (character_23.character.faction === character_23.character.heritage) {
                            character_23.character.heritage = factions_15.FactionsHelper.generateFaction(true);
                        }
                    }
                    else {
                        character_23.character.faction = faction;
                    }
                    factions_15.FactionsHelper.applyFaction(character_23.character.faction);
                    var fac = factions_15.FactionsHelper.getFaction(character_23.character.faction);
                    if (fac.needsHeritage) {
                        navigator_5.Navigation.navigateToPage(pageFactory_5.PageIdentity.Heritage);
                    }
                    else {
                        character_23.character.heritage = character_23.character.faction;
                        navigator_5.Navigation.navigateToPage(pageFactory_5.PageIdentity.FactionDetails);
                    }
                };
                return FactionPage;
            }(React.Component));
            exports_38("FactionPage", FactionPage);
        }
    }
});
System.register("pages/heritagePage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/factionSelection", "helpers/factions"], function(exports_39, context_39) {
    "use strict";
    var __moduleName = context_39 && context_39.id;
    var React, character_24, navigator_6, pageFactory_6, pageHeader_6, button_8, factionSelection_2, factions_16;
    var HeritagePage;
    return {
        setters:[
            function (React_12) {
                React = React_12;
            },
            function (character_24_1) {
                character_24 = character_24_1;
            },
            function (navigator_6_1) {
                navigator_6 = navigator_6_1;
            },
            function (pageFactory_6_1) {
                pageFactory_6 = pageFactory_6_1;
            },
            function (pageHeader_6_1) {
                pageHeader_6 = pageHeader_6_1;
            },
            function (button_8_1) {
                button_8 = button_8_1;
            },
            function (factionSelection_2_1) {
                factionSelection_2 = factionSelection_2_1;
            },
            function (factions_16_1) {
                factions_16 = factions_16_1;
            }],
        execute: function() {
            HeritagePage = (function (_super) {
                __extends(HeritagePage, _super);
                function HeritagePage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                HeritagePage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_24.character.isOptional
                        ? (React.createElement(button_8.Button, {text: "ROLL HERITAGE", className: "button-dark", onClick: function () { _this.rollFaction(); }}))
                        : undefined;
                    var select = (React.createElement(button_8.Button, {text: "SELECT HERITAGE", lpCost: character_24.character.paidForFaction ? 0 : 1, className: "button-dark", onClick: function () { _this.showFactions(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "You owe allegiance to the ", React.createElement("b", null, factions_16.FactionsHelper.getFaction(character_24.character.faction).name), " faction, but which faction were you born into?"), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(factionSelection_2.FactionSelection, {showOnlyNonHeritageFactions: true, showCancel: true, onSelection: function (faction) {
                            _this.selectFaction(faction);
                            if (!character_24.character.paidForFaction) {
                                character_24.character.lifePoints--;
                            }
                        }, onCancel: function () { _this.hideFactions(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_6.PageHeader, {text: "HERITAGE"}), content));
                };
                HeritagePage.prototype.rollFaction = function () {
                    var faction = factions_16.FactionsHelper.generateHeritage();
                    this.selectFaction(faction);
                };
                HeritagePage.prototype.showFactions = function () {
                    this.setState({ showSelection: true });
                };
                HeritagePage.prototype.hideFactions = function () {
                    this.setState({ showSelection: false });
                };
                HeritagePage.prototype.selectFaction = function (faction) {
                    character_24.character.heritage = faction;
                    navigator_6.Navigation.navigateToPage(pageFactory_6.PageIdentity.FactionDetails);
                };
                return HeritagePage;
            }(React.Component));
            exports_39("HeritagePage", HeritagePage);
        }
    }
});
System.register("components/skill", ['react', "common/character", "helpers/skills"], function(exports_40, context_40) {
    "use strict";
    var __moduleName = context_40 && context_40.id;
    var React, character_25, skills_16;
    var SkillView;
    return {
        setters:[
            function (React_13) {
                React = React_13;
            },
            function (character_25_1) {
                character_25 = character_25_1;
            },
            function (skills_16_1) {
                skills_16 = skills_16_1;
            }],
        execute: function() {
            SkillView = (function (_super) {
                __extends(SkillView, _super);
                function SkillView(props) {
                    _super.call(this, props);
                }
                SkillView.prototype.render = function () {
                    var _a = this.props, skill = _a.skill, points = _a.points;
                    var signature = character_25.character.skills[skill].isSignature
                        ? (React.createElement("span", {className: "signature"}, "S"))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_16.SkillsHelper.getSkillName(skill), signature), React.createElement("div", {className: "skill-expertise"}, "Expertise" + ' ' + "(+", points, ") ", character_25.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_25.character.skills[skill].focus)));
                };
                return SkillView;
            }(React.Component));
            exports_40("SkillView", SkillView);
        }
    }
});
System.register("components/radioButton", ['react'], function(exports_41, context_41) {
    "use strict";
    var __moduleName = context_41 && context_41.id;
    var React;
    var RadioButton;
    return {
        setters:[
            function (React_14) {
                React = React_14;
            }],
        execute: function() {
            RadioButton = (function (_super) {
                __extends(RadioButton, _super);
                function RadioButton(props) {
                    _super.call(this, props);
                }
                RadioButton.prototype.render = function () {
                    var _a = this.props, groupId = _a.groupId, value = _a.value, onChanged = _a.onChanged, disabled = _a.disabled;
                    var isDisabled = disabled ? true : false;
                    return (React.createElement("input", {type: "radio", name: groupId, value: value, onChange: function (e) { return onChanged(value); }, disabled: isDisabled}));
                };
                return RadioButton;
            }(React.Component));
            exports_41("RadioButton", RadioButton);
        }
    }
});
System.register("components/signatureSkillChoice", ['react', "helpers/skills", "components/radioButton"], function(exports_42, context_42) {
    "use strict";
    var __moduleName = context_42 && context_42.id;
    var React, skills_17, radioButton_1;
    var SignatureSkillChoice;
    return {
        setters:[
            function (React_15) {
                React = React_15;
            },
            function (skills_17_1) {
                skills_17 = skills_17_1;
            },
            function (radioButton_1_1) {
                radioButton_1 = radioButton_1_1;
            }],
        execute: function() {
            SignatureSkillChoice = (function (_super) {
                __extends(SignatureSkillChoice, _super);
                function SignatureSkillChoice(props) {
                    _super.call(this, props);
                }
                SignatureSkillChoice.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (skill, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", null, skills_17.SkillsHelper.getSkillName(skill)), React.createElement("td", null, React.createElement(radioButton_1.RadioButton, {groupId: "signature", value: skill, onChanged: function (skill) { return _this.onSkillSelected(skill); }}))));
                    });
                    return (React.createElement("table", {className: "selection-list"}, React.createElement("tbody", null, skills)));
                };
                SignatureSkillChoice.prototype.onSkillSelected = function (skill) {
                    this.props.onSkillSelected(skill);
                    this.forceUpdate();
                };
                return SignatureSkillChoice;
            }(React.Component));
            exports_42("SignatureSkillChoice", SignatureSkillChoice);
        }
    }
});
System.register("components/talentDescription", ['react'], function(exports_43, context_43) {
    "use strict";
    var __moduleName = context_43 && context_43.id;
    var React;
    var TalentDescription;
    return {
        setters:[
            function (React_16) {
                React = React_16;
            }],
        execute: function() {
            TalentDescription = (function (_super) {
                __extends(TalentDescription, _super);
                function TalentDescription(props) {
                    _super.call(this, props);
                }
                TalentDescription.prototype.render = function () {
                    return (React.createElement("div", null, React.createElement("div", {style: { fontWeight: 'bold' }}, this.props.name), React.createElement("div", null, this.props.description)));
                };
                return TalentDescription;
            }(React.Component));
            exports_43("TalentDescription", TalentDescription);
        }
    }
});
System.register("pages/factionDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/factions", "helpers/alienHosts", "helpers/talents", "components/pageHeader", "components/skill", "components/button", "components/signatureSkillChoice", "components/talentDescription", "components/dialog"], function(exports_44, context_44) {
    "use strict";
    var __moduleName = context_44 && context_44.id;
    var React, character_26, navigator_7, pageFactory_7, factions_17, alienHosts_12, talents_2, pageHeader_7, skill_1, button_9, signatureSkillChoice_1, talentDescription_1, dialog_1;
    var FactionDetailsPage;
    return {
        setters:[
            function (React_17) {
                React = React_17;
            },
            function (character_26_1) {
                character_26 = character_26_1;
            },
            function (navigator_7_1) {
                navigator_7 = navigator_7_1;
            },
            function (pageFactory_7_1) {
                pageFactory_7 = pageFactory_7_1;
            },
            function (factions_17_1) {
                factions_17 = factions_17_1;
            },
            function (alienHosts_12_1) {
                alienHosts_12 = alienHosts_12_1;
            },
            function (talents_2_1) {
                talents_2 = talents_2_1;
            },
            function (pageHeader_7_1) {
                pageHeader_7 = pageHeader_7_1;
            },
            function (skill_1_1) {
                skill_1 = skill_1_1;
            },
            function (button_9_1) {
                button_9 = button_9_1;
            },
            function (signatureSkillChoice_1_1) {
                signatureSkillChoice_1 = signatureSkillChoice_1_1;
            },
            function (talentDescription_1_1) {
                talentDescription_1 = talentDescription_1_1;
            },
            function (dialog_1_1) {
                dialog_1 = dialog_1_1;
            }],
        execute: function() {
            FactionDetailsPage = (function (_super) {
                __extends(FactionDetailsPage, _super);
                function FactionDetailsPage(props) {
                    _super.call(this, props);
                    this._talentName = "";
                    this._talentDesc = "";
                }
                FactionDetailsPage.prototype.render = function () {
                    var _this = this;
                    var faction = factions_17.FactionsHelper.getFaction(character_26.character.faction);
                    var heritage = factions_17.FactionsHelper.getFaction(character_26.character.heritage);
                    var name = character_26.character.hasDefected
                        ? (React.createElement("span", null, "DEFECTED FROM ", heritage.name, " TO ", faction.name))
                        : faction.name === heritage.name
                            ? (React.createElement("span", null, faction.name))
                            : (React.createElement("span", null, faction.name, " (BORN IN ", heritage.name, ") "));
                    var skills = faction.skills.map(function (s, i) {
                        return (React.createElement(skill_1.SkillView, {key: i, skill: s, points: 1}));
                    });
                    var next = character_26.character.heritage !== factions_17.Faction.Aleph
                        ? factions_17.FactionsHelper.getBirthPlaceType(character_26.character.heritage)
                        : "ASPECT";
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_7.PageHeader, {text: "FACTION"}), React.createElement("div", {className: "header-text"}, name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SKILLS"), skills), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SIGNATURE SKILL"), React.createElement("div", {className: "desc-text"}, "Select your first ", React.createElement("b", null, "signature skill"), " to receive +1 Focus and your first talent."), React.createElement(signatureSkillChoice_1.SignatureSkillChoice, {skills: faction.skills, onSkillSelected: function (skill) { return _this.onSignatureSkillSelected(skill); }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "TALENT"), React.createElement(talentDescription_1.TalentDescription, {name: this._talentName.substring(0, this._talentName.indexOf("(")), description: this._talentDesc})), React.createElement(button_9.Button, {text: next, className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                FactionDetailsPage.prototype.onSignatureSkillSelected = function (skill) {
                    this._signatureSkill = skill;
                    var talent = talents_2.TalentsHelper.getTalentsForSkills([skill])[0];
                    this._talentName = talent.name;
                    this._talentDesc = talent.description;
                    this.forceUpdate();
                };
                FactionDetailsPage.prototype.onNext = function () {
                    if (this._signatureSkill == null) {
                        dialog_1.Dialog.show("You have not selected a signature skill.");
                        return;
                    }
                    character_26.character.skills[this._signatureSkill].focus++;
                    character_26.character.skills[this._signatureSkill].isSignature = true;
                    character_26.character.addTalent(this._talentName);
                    if (character_26.character.heritage !== factions_17.Faction.Aleph) {
                        if (character_26.character.host === alienHosts_12.AlienHost.Antipode) {
                            navigator_7.Navigation.navigateToPage(pageFactory_7.PageIdentity.Tribe);
                        }
                        else {
                            navigator_7.Navigation.navigateToPage(pageFactory_7.PageIdentity.BirthPlace);
                        }
                    }
                    else {
                        navigator_7.Navigation.navigateToPage(pageFactory_7.PageIdentity.AlepForms);
                    }
                };
                return FactionDetailsPage;
            }(React.Component));
            exports_44("FactionDetailsPage", FactionDetailsPage);
        }
    }
});
System.register("components/attribute", ['react'], function(exports_45, context_45) {
    "use strict";
    var __moduleName = context_45 && context_45.id;
    var React;
    var AttributeView;
    return {
        setters:[
            function (React_18) {
                React = React_18;
            }],
        execute: function() {
            AttributeView = (function (_super) {
                __extends(AttributeView, _super);
                function AttributeView(props) {
                    _super.call(this, props);
                }
                AttributeView.prototype.render = function () {
                    var _a = this.props, name = _a.name, value = _a.value, points = _a.points;
                    return (React.createElement("div", null, React.createElement("div", {className: "attribute-container"}, name), React.createElement("div", {className: "attribute-value"}, "(", points >= 0 ? "+" : "", points, ") ", value)));
                };
                return AttributeView;
            }(React.Component));
            exports_45("AttributeView", AttributeView);
        }
    }
});
System.register("components/birthPlaceSelection", ['react', "common/character", "helpers/birthPlaces", "helpers/attributes", "helpers/skills", "components/button"], function(exports_46, context_46) {
    "use strict";
    var __moduleName = context_46 && context_46.id;
    var React, character_27, birthPlaces_5, attributes_14, skills_18, button_10;
    var BirthPlaceSelection;
    return {
        setters:[
            function (React_19) {
                React = React_19;
            },
            function (character_27_1) {
                character_27 = character_27_1;
            },
            function (birthPlaces_5_1) {
                birthPlaces_5 = birthPlaces_5_1;
            },
            function (attributes_14_1) {
                attributes_14 = attributes_14_1;
            },
            function (skills_18_1) {
                skills_18 = skills_18_1;
            },
            function (button_10_1) {
                button_10 = button_10_1;
            }],
        execute: function() {
            BirthPlaceSelection = (function (_super) {
                __extends(BirthPlaceSelection, _super);
                function BirthPlaceSelection(props) {
                    _super.call(this, props);
                }
                BirthPlaceSelection.prototype.render = function () {
                    var _this = this;
                    var birthPlaces = birthPlaces_5.BirthPlacesHelper.getBirthPlaces(character_27.character.heritage).map(function (home, i) {
                        var attributes = home.attributes.map(function (attr, i) {
                            return (React.createElement("div", {key: i}, attributes_14.AttributesHelper.getAttributeName(attr), " +1"));
                        });
                        return (React.createElement("tr", {key: i}, React.createElement("td", null, home.name), React.createElement("td", null, attributes), React.createElement("td", null, skills_18.SkillsHelper.getSkillName(home.skill)), React.createElement("td", null, React.createElement(button_10.Button, {text: "Select", className: "button-small", onClick: function () { _this.props.onSelection(home.roll); }}))));
                    });
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT BIRTH PLACE"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attributes")), React.createElement("td", null, React.createElement("h3", null, "Skill")), React.createElement("td", null))), React.createElement("tbody", null, birthPlaces)), React.createElement(button_10.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return BirthPlaceSelection;
            }(React.Component));
            exports_46("BirthPlaceSelection", BirthPlaceSelection);
        }
    }
});
System.register("pages/birthPlacePage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/birthPlaceSelection", "helpers/birthPlaces", "helpers/factions", "helpers/sources", "helpers/alienHosts"], function(exports_47, context_47) {
    "use strict";
    var __moduleName = context_47 && context_47.id;
    var React, character_28, navigator_8, pageFactory_8, pageHeader_8, button_11, birthPlaceSelection_1, birthPlaces_6, factions_18, sources_11, alienHosts_13;
    var BirthPlacePage;
    return {
        setters:[
            function (React_20) {
                React = React_20;
            },
            function (character_28_1) {
                character_28 = character_28_1;
            },
            function (navigator_8_1) {
                navigator_8 = navigator_8_1;
            },
            function (pageFactory_8_1) {
                pageFactory_8 = pageFactory_8_1;
            },
            function (pageHeader_8_1) {
                pageHeader_8 = pageHeader_8_1;
            },
            function (button_11_1) {
                button_11 = button_11_1;
            },
            function (birthPlaceSelection_1_1) {
                birthPlaceSelection_1 = birthPlaceSelection_1_1;
            },
            function (birthPlaces_6_1) {
                birthPlaces_6 = birthPlaces_6_1;
            },
            function (factions_18_1) {
                factions_18 = factions_18_1;
            },
            function (sources_11_1) {
                sources_11 = sources_11_1;
            },
            function (alienHosts_13_1) {
                alienHosts_13 = alienHosts_13_1;
            }],
        execute: function() {
            BirthPlacePage = (function (_super) {
                __extends(BirthPlacePage, _super);
                function BirthPlacePage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                BirthPlacePage.prototype.render = function () {
                    var _this = this;
                    if (character_28.character.hasSource(sources_11.Source.PanOceania) &&
                        character_28.character.host === alienHosts_13.AlienHost.Helot) {
                        return this.renderHelot();
                    }
                    var type = factions_18.FactionsHelper.getBirthPlaceType(character_28.character.heritage);
                    var roll = !character_28.character.isOptional
                        ? (React.createElement(button_11.Button, {text: "ROLL " + type, className: "button-dark", onClick: function () { _this.rollBirthPlace(); }}))
                        : undefined;
                    var select = (React.createElement(button_11.Button, {text: "SELECT " + type, lpCost: 1, className: "button-dark", onClick: function () { _this.showBirthPlaces(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "Where were you born and raised?"), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(birthPlaceSelection_1.BirthPlaceSelection, {onSelection: function (id) { _this.selectBirthPlace(id); character_28.character.lifePoints--; }, onCancel: function () { _this.hideBirthPlaces(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_8.PageHeader, {text: type.toUpperCase()}), content));
                };
                BirthPlacePage.prototype.renderHelot = function () {
                    var _this = this;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_8.PageHeader, {text: factions_18.FactionsHelper.getBirthPlaceType(character_28.character.heritage)}), React.createElement("div", {className: "page-text"}, "Helots, without exception, call Varuna their home; the next Helot hatched off-world" + ' ' + "will be the first, if it ever happens at all."), React.createElement("div", {className: "button-container"}, React.createElement(button_11.Button, {text: "VARUNA", lpCost: 0, className: "button-dark", onClick: function () { _this.selectBirthPlace(12); }}))));
                };
                BirthPlacePage.prototype.rollBirthPlace = function () {
                    var birthPlace = birthPlaces_6.BirthPlacesHelper.generateBirthPlace(character_28.character.heritage, true);
                    this.selectBirthPlace(birthPlace.roll);
                };
                BirthPlacePage.prototype.showBirthPlaces = function () {
                    this.setState({ showSelection: true });
                };
                BirthPlacePage.prototype.hideBirthPlaces = function () {
                    this.setState({ showSelection: false });
                };
                BirthPlacePage.prototype.selectBirthPlace = function (id) {
                    var home = birthPlaces_6.BirthPlacesHelper.getBirthPlace(character_28.character.heritage, id);
                    character_28.character.birthPlace = home.name;
                    character_28.character.birthPlaceId = home.roll;
                    birthPlaces_6.BirthPlacesHelper.applyBirthPlace(home);
                    navigator_8.Navigation.navigateToPage(pageFactory_8.PageIdentity.BirthPlaceDetails);
                };
                return BirthPlacePage;
            }(React.Component));
            exports_47("BirthPlacePage", BirthPlacePage);
        }
    }
});
System.register("components/skillImprovement", ['react', "helpers/skills", "common/character"], function(exports_48, context_48) {
    "use strict";
    var __moduleName = context_48 && context_48.id;
    var React, skills_19, character_29;
    var SkillImprovement;
    return {
        setters:[
            function (React_21) {
                React = React_21;
            },
            function (skills_19_1) {
                skills_19 = skills_19_1;
            },
            function (character_29_1) {
                character_29 = character_29_1;
            }],
        execute: function() {
            SkillImprovement = (function (_super) {
                __extends(SkillImprovement, _super);
                function SkillImprovement(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_29.character.skills[this.props.skill].expertise;
                    this._originalFocus = character_29.character.skills[this.props.skill].focus;
                    this._points = 1;
                }
                SkillImprovement.prototype.componentWillUpdate = function () {
                    if (this._points === 1) {
                        this._originalExpertise = character_29.character.skills[this.props.skill].expertise;
                        this._originalFocus = character_29.character.skills[this.props.skill].focus;
                    }
                };
                SkillImprovement.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var max = character_29.character.skills[skill].isSignature ? 5 : 3;
                    var expertise = character_29.character.skills[skill].expertise;
                    var focus = character_29.character.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = expertise === this._originalExpertise && this._points > 0 && expertise < max;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus === this._originalFocus && focus !== expertise && this._points > 0 && focus < max;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    var signature = character_29.character.skills[skill].isSignature
                        ? (React.createElement("span", {className: "signature"}, "S"))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_19.SkillsHelper.getSkillName(skill), signature), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", decExp, " ", incExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", decFoc, " ", incFoc)));
                };
                SkillImprovement.prototype.onDecreaseExpertise = function () {
                    character_29.character.skills[this.props.skill].expertise--;
                    this._points++;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    //else {
                    this.forceUpdate();
                    //}
                };
                SkillImprovement.prototype.onIncreaseExpertise = function () {
                    character_29.character.skills[this.props.skill].expertise++;
                    this._points--;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    //else {
                    this.forceUpdate();
                    //}
                };
                SkillImprovement.prototype.onDecreaseFocus = function () {
                    character_29.character.skills[this.props.skill].focus--;
                    this._points++;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    //else {
                    this.forceUpdate();
                    //}
                };
                SkillImprovement.prototype.onIncreaseFocus = function () {
                    character_29.character.skills[this.props.skill].focus++;
                    this._points--;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    //else {
                    this.forceUpdate();
                    //}
                };
                return SkillImprovement;
            }(React.Component));
            exports_48("SkillImprovement", SkillImprovement);
        }
    }
});
System.register("components/dropDownInput", ['react'], function(exports_49, context_49) {
    "use strict";
    var __moduleName = context_49 && context_49.id;
    var React;
    var DropDownInput;
    return {
        setters:[
            function (React_22) {
                React = React_22;
            }],
        execute: function() {
            DropDownInput = (function (_super) {
                __extends(DropDownInput, _super);
                function DropDownInput(props) {
                    _super.call(this, props);
                }
                DropDownInput.prototype.render = function () {
                    var _a = this.props, items = _a.items, defaultValue = _a.defaultValue, onChange = _a.onChange;
                    var options = items.map(function (item, i) {
                        return React.createElement("option", {key: i, value: item}, item);
                    });
                    return (React.createElement("select", {value: defaultValue, onChange: function (e) { return onChange(e.target.selectedIndex); }}, options));
                };
                return DropDownInput;
            }(React.Component));
            exports_49("DropDownInput", DropDownInput);
        }
    }
});
System.register("pages/birthPlaceDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/birthPlaces", "helpers/attributes", "helpers/factions", "components/pageHeader", "components/attribute", "components/skillImprovement", "components/dropDownInput", "components/button", "components/dialog", "helpers/alienHosts"], function(exports_50, context_50) {
    "use strict";
    var __moduleName = context_50 && context_50.id;
    var React, character_30, navigator_9, pageFactory_9, birthPlaces_7, attributes_15, factions_19, pageHeader_9, attribute_2, skillImprovement_1, dropDownInput_1, button_12, dialog_2, alienHosts_14;
    var BirthPlaceDetailsPage;
    return {
        setters:[
            function (React_23) {
                React = React_23;
            },
            function (character_30_1) {
                character_30 = character_30_1;
            },
            function (navigator_9_1) {
                navigator_9 = navigator_9_1;
            },
            function (pageFactory_9_1) {
                pageFactory_9 = pageFactory_9_1;
            },
            function (birthPlaces_7_1) {
                birthPlaces_7 = birthPlaces_7_1;
            },
            function (attributes_15_1) {
                attributes_15 = attributes_15_1;
            },
            function (factions_19_1) {
                factions_19 = factions_19_1;
            },
            function (pageHeader_9_1) {
                pageHeader_9 = pageHeader_9_1;
            },
            function (attribute_2_1) {
                attribute_2 = attribute_2_1;
            },
            function (skillImprovement_1_1) {
                skillImprovement_1 = skillImprovement_1_1;
            },
            function (dropDownInput_1_1) {
                dropDownInput_1 = dropDownInput_1_1;
            },
            function (button_12_1) {
                button_12 = button_12_1;
            },
            function (dialog_2_1) {
                dialog_2 = dialog_2_1;
            },
            function (alienHosts_14_1) {
                alienHosts_14 = alienHosts_14_1;
            }],
        execute: function() {
            BirthPlaceDetailsPage = (function (_super) {
                __extends(BirthPlaceDetailsPage, _super);
                function BirthPlaceDetailsPage(props) {
                    _super.call(this, props);
                    var birthPlace = birthPlaces_7.BirthPlacesHelper.getBirthPlace(character_30.character.heritage, character_30.character.birthPlaceId);
                    this._languages = birthPlace.languageOptions;
                    this._language = this._languages ? this._languages[0] : null;
                    this._skillsDone = false;
                }
                BirthPlaceDetailsPage.prototype.render = function () {
                    var _this = this;
                    var birthPlace = birthPlaces_7.BirthPlacesHelper.getBirthPlace(character_30.character.heritage, character_30.character.birthPlaceId);
                    var attributes = birthPlace.attributes.map(function (a, i) {
                        return (React.createElement(attribute_2.AttributeView, {key: i, name: attributes_15.AttributesHelper.getAttributeName(a), points: 1, value: character_30.character.attributes[a].value}));
                    });
                    var homeland = character_30.character.homeland
                        ? " (" + character_30.character.homeland + ")"
                        : undefined;
                    var languages = birthPlace.languageOptions
                        ? React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "OPTIONAL LANGUAGE"), React.createElement(dropDownInput_1.DropDownInput, {items: birthPlace.languageOptions, defaultValue: this._language, onChange: function (index) { return _this.selectLanguage(index); }}))
                        : undefined;
                    var nextLabel = character_30.character.host === alienHosts_14.AlienHost.Helot
                        ? "SISSOLU WATERS"
                        : "SOCIAL CLASS";
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_9.PageHeader, {text: factions_19.FactionsHelper.getBirthPlaceType(character_30.character.heritage).toUpperCase()}), React.createElement("div", {className: "header-text"}, birthPlace.name, homeland), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTES"), attributes), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SKILL"), React.createElement(skillImprovement_1.SkillImprovement, {skill: birthPlace.skill, onDone: function (done) { return _this._skillsDone = done; }})), languages, React.createElement(button_12.Button, {text: nextLabel, className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                BirthPlaceDetailsPage.prototype.selectLanguage = function (index) {
                    this._language = this._languages[index];
                    this.forceUpdate();
                };
                BirthPlaceDetailsPage.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_2.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    if (this._language) {
                        character_30.character.addLanguage(this._language);
                    }
                    if (character_30.character.host === alienHosts_14.AlienHost.Helot) {
                        navigator_9.Navigation.navigateToPage(pageFactory_9.PageIdentity.SissoluWaters);
                    }
                    else {
                        navigator_9.Navigation.navigateToPage(pageFactory_9.PageIdentity.SocialClass);
                    }
                };
                return BirthPlaceDetailsPage;
            }(React.Component));
            exports_50("BirthPlaceDetailsPage", BirthPlaceDetailsPage);
        }
    }
});
System.register("components/tribeSelection", ['react', "helpers/tribes", "helpers/attributes", "helpers/skills", "components/button"], function(exports_51, context_51) {
    "use strict";
    var __moduleName = context_51 && context_51.id;
    var React, tribes_1, attributes_16, skills_20, button_13;
    var TribeSelection;
    return {
        setters:[
            function (React_24) {
                React = React_24;
            },
            function (tribes_1_1) {
                tribes_1 = tribes_1_1;
            },
            function (attributes_16_1) {
                attributes_16 = attributes_16_1;
            },
            function (skills_20_1) {
                skills_20 = skills_20_1;
            },
            function (button_13_1) {
                button_13 = button_13_1;
            }],
        execute: function() {
            TribeSelection = (function (_super) {
                __extends(TribeSelection, _super);
                function TribeSelection(props) {
                    _super.call(this, props);
                }
                TribeSelection.prototype.render = function () {
                    var _this = this;
                    var tribes = tribes_1.TribesHelper.getTribes().map(function (tribe, i) {
                        var attributes = tribe.attributes.map(function (attr, i) {
                            return (React.createElement("div", {key: i}, attributes_16.AttributesHelper.getAttributeName(attr), " +1"));
                        });
                        return (React.createElement("tr", {key: i}, React.createElement("td", null, tribe.name), React.createElement("td", null, attributes), React.createElement("td", null, skills_20.SkillsHelper.getSkillName(tribe.skill)), React.createElement("td", null, React.createElement(button_13.Button, {text: "Select", className: "button-small", onClick: function () { _this.props.onSelection(tribe.id); }}))));
                    });
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT ANTIPODEAN TRIBE"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attributes")), React.createElement("td", null, React.createElement("h3", null, "Skill")), React.createElement("td", null))), React.createElement("tbody", null, tribes)), React.createElement(button_13.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return TribeSelection;
            }(React.Component));
            exports_51("TribeSelection", TribeSelection);
        }
    }
});
System.register("pages/tribePage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/tribeSelection", "helpers/tribes"], function(exports_52, context_52) {
    "use strict";
    var __moduleName = context_52 && context_52.id;
    var React, character_31, navigator_10, pageFactory_10, pageHeader_10, button_14, tribeSelection_1, tribes_2;
    var TribePage;
    return {
        setters:[
            function (React_25) {
                React = React_25;
            },
            function (character_31_1) {
                character_31 = character_31_1;
            },
            function (navigator_10_1) {
                navigator_10 = navigator_10_1;
            },
            function (pageFactory_10_1) {
                pageFactory_10 = pageFactory_10_1;
            },
            function (pageHeader_10_1) {
                pageHeader_10 = pageHeader_10_1;
            },
            function (button_14_1) {
                button_14 = button_14_1;
            },
            function (tribeSelection_1_1) {
                tribeSelection_1 = tribeSelection_1_1;
            },
            function (tribes_2_1) {
                tribes_2 = tribes_2_1;
            }],
        execute: function() {
            TribePage = (function (_super) {
                __extends(TribePage, _super);
                function TribePage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                TribePage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_31.character.isOptional
                        ? (React.createElement(button_14.Button, {text: "ROLL TRIBE", className: "button-dark", onClick: function () { _this.rollTribe(); }}))
                        : undefined;
                    var select = (React.createElement(button_14.Button, {text: "SELECT TRIBE", lpCost: 1, className: "button-dark", onClick: function () { _this.showTribes(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "What tribe do you belong to?"), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(tribeSelection_1.TribeSelection, {onSelection: function (id) { _this.selectTribe(id); character_31.character.lifePoints--; }, onCancel: function () { _this.hideTribes(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_10.PageHeader, {text: "ANTIPODEAN TRIBE"}), content));
                };
                TribePage.prototype.rollTribe = function () {
                    var tribe = tribes_2.TribesHelper.generateTribe();
                    this.selectTribe(tribe);
                };
                TribePage.prototype.showTribes = function () {
                    this.setState({ showSelection: true });
                };
                TribePage.prototype.hideTribes = function () {
                    this.setState({ showSelection: false });
                };
                TribePage.prototype.selectTribe = function (tribe) {
                    var tr = tribes_2.TribesHelper.getTribe(tribe);
                    character_31.character.birthPlace = tr.name;
                    character_31.character.birthPlaceId = tribe;
                    tribes_2.TribesHelper.applyTribe(tribe);
                    navigator_10.Navigation.navigateToPage(pageFactory_10.PageIdentity.TribeDetails);
                };
                return TribePage;
            }(React.Component));
            exports_52("TribePage", TribePage);
        }
    }
});
System.register("pages/tribeDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/tribes", "helpers/attributes", "components/pageHeader", "components/attribute", "components/skillImprovement", "components/button", "components/dialog"], function(exports_53, context_53) {
    "use strict";
    var __moduleName = context_53 && context_53.id;
    var React, character_32, navigator_11, pageFactory_11, tribes_3, attributes_17, pageHeader_11, attribute_3, skillImprovement_2, button_15, dialog_3;
    var TribeDetailsPage;
    return {
        setters:[
            function (React_26) {
                React = React_26;
            },
            function (character_32_1) {
                character_32 = character_32_1;
            },
            function (navigator_11_1) {
                navigator_11 = navigator_11_1;
            },
            function (pageFactory_11_1) {
                pageFactory_11 = pageFactory_11_1;
            },
            function (tribes_3_1) {
                tribes_3 = tribes_3_1;
            },
            function (attributes_17_1) {
                attributes_17 = attributes_17_1;
            },
            function (pageHeader_11_1) {
                pageHeader_11 = pageHeader_11_1;
            },
            function (attribute_3_1) {
                attribute_3 = attribute_3_1;
            },
            function (skillImprovement_2_1) {
                skillImprovement_2 = skillImprovement_2_1;
            },
            function (button_15_1) {
                button_15 = button_15_1;
            },
            function (dialog_3_1) {
                dialog_3 = dialog_3_1;
            }],
        execute: function() {
            TribeDetailsPage = (function (_super) {
                __extends(TribeDetailsPage, _super);
                function TribeDetailsPage(props) {
                    _super.call(this, props);
                    this._skillsDone = false;
                }
                TribeDetailsPage.prototype.render = function () {
                    var _this = this;
                    var tribe = tribes_3.TribesHelper.getTribe(character_32.character.birthPlaceId);
                    var attributes = tribe.attributes.map(function (a, i) {
                        return (React.createElement(attribute_3.AttributeView, {key: i, name: attributes_17.AttributesHelper.getAttributeName(a), points: 1, value: character_32.character.attributes[a].value}));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_11.PageHeader, {text: "ANTIPODEAN TRIBE"}), React.createElement("div", {className: "header-text"}, tribe.name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTES"), attributes), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SKILL"), React.createElement(skillImprovement_2.SkillImprovement, {skill: tribe.skill, onDone: function (done) { _this._skillsDone = done; }})), React.createElement(button_15.Button, {text: "SOCIAL CLASS", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                TribeDetailsPage.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_3.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_11.Navigation.navigateToPage(pageFactory_11.PageIdentity.SocialClass);
                };
                return TribeDetailsPage;
            }(React.Component));
            exports_53("TribeDetailsPage", TribeDetailsPage);
        }
    }
});
System.register("pages/sissoluWatersPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "helpers/birthPlaces"], function(exports_54, context_54) {
    "use strict";
    var __moduleName = context_54 && context_54.id;
    var React, character_33, navigator_12, pageFactory_12, pageHeader_12, button_16, birthplaces_1;
    var SissoluWatersPage;
    return {
        setters:[
            function (React_27) {
                React = React_27;
            },
            function (character_33_1) {
                character_33 = character_33_1;
            },
            function (navigator_12_1) {
                navigator_12 = navigator_12_1;
            },
            function (pageFactory_12_1) {
                pageFactory_12 = pageFactory_12_1;
            },
            function (pageHeader_12_1) {
                pageHeader_12 = pageHeader_12_1;
            },
            function (button_16_1) {
                button_16 = button_16_1;
            },
            function (birthplaces_1_1) {
                birthplaces_1 = birthplaces_1_1;
            }],
        execute: function() {
            SissoluWatersPage = (function (_super) {
                __extends(SissoluWatersPage, _super);
                function SissoluWatersPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                SissoluWatersPage.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_12.PageHeader, {text: "SISSOLU WATERS"}), React.createElement("div", null, React.createElement("div", {className: "page-text"}, "From what Sissolu Waters do you hail?"), React.createElement("div", {className: "button-container"}, React.createElement(button_16.Button, {text: "ROLL SISSOLU WATERS", className: "button-dark", onClick: function () { _this.rollWaters(); }})))));
                };
                SissoluWatersPage.prototype.rollWaters = function () {
                    var waters = birthplaces_1.BirthPlacesHelper.generateSissoluWaters();
                    this.selectWaters(waters.roll);
                };
                SissoluWatersPage.prototype.showWaters = function () {
                    this.setState({ showSelection: true });
                };
                SissoluWatersPage.prototype.hideWaters = function () {
                    this.setState({ showSelection: false });
                };
                SissoluWatersPage.prototype.selectWaters = function (waters) {
                    var wat = birthplaces_1.BirthPlacesHelper.getSissoluWater(waters);
                    character_33.character.birthPlace += " (" + wat.name + ")";
                    character_33.character.sissoluWaters = waters;
                    birthplaces_1.BirthPlacesHelper.applySissoluWaters(waters);
                    navigator_12.Navigation.navigateToPage(pageFactory_12.PageIdentity.SissoluWatersDetails);
                };
                return SissoluWatersPage;
            }(React.Component));
            exports_54("SissoluWatersPage", SissoluWatersPage);
        }
    }
});
System.register("pages/sissoluWatersDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/birthPlaces", "components/pageHeader", "components/dropDownInput", "components/button"], function(exports_55, context_55) {
    "use strict";
    var __moduleName = context_55 && context_55.id;
    var React, character_34, navigator_13, pageFactory_13, birthPlaces_8, pageHeader_13, dropDownInput_2, button_17;
    var SissoluWatersDetailsPage;
    return {
        setters:[
            function (React_28) {
                React = React_28;
            },
            function (character_34_1) {
                character_34 = character_34_1;
            },
            function (navigator_13_1) {
                navigator_13 = navigator_13_1;
            },
            function (pageFactory_13_1) {
                pageFactory_13 = pageFactory_13_1;
            },
            function (birthPlaces_8_1) {
                birthPlaces_8 = birthPlaces_8_1;
            },
            function (pageHeader_13_1) {
                pageHeader_13 = pageHeader_13_1;
            },
            function (dropDownInput_2_1) {
                dropDownInput_2 = dropDownInput_2_1;
            },
            function (button_17_1) {
                button_17 = button_17_1;
            }],
        execute: function() {
            SissoluWatersDetailsPage = (function (_super) {
                __extends(SissoluWatersDetailsPage, _super);
                function SissoluWatersDetailsPage(props) {
                    _super.call(this, props);
                    var waters = birthPlaces_8.BirthPlacesHelper.getSissoluWater(character_34.character.sissoluWaters);
                    this._languages = waters.languages.length > 1 ? waters.languages[1].split("|") : undefined;
                    if (this._languages) {
                        this._language = this._languages ? this._languages[0] : null;
                    }
                }
                SissoluWatersDetailsPage.prototype.render = function () {
                    var _this = this;
                    var waters = birthPlaces_8.BirthPlacesHelper.getSissoluWater(character_34.character.sissoluWaters);
                    var optionalLangs = waters.languages.length > 1 ? waters.languages[1].split("|") : undefined;
                    var languages = optionalLangs
                        ? React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "OPTIONAL LANGUAGE"), React.createElement(dropDownInput_2.DropDownInput, {items: optionalLangs, defaultValue: this._language, onChange: function (index) { return _this.selectLanguage(index); }}))
                        : undefined;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_13.PageHeader, {text: "SISSOLU WATERS"}), React.createElement("div", {className: "header-text"}, waters.name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "page-text"}, "If your Sissolu Waters provides an optional language, select it below before proceeding.")), languages, React.createElement(button_17.Button, {text: "SOCIAL CLASS", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                SissoluWatersDetailsPage.prototype.selectLanguage = function (index) {
                    this._language = this._languages[index];
                    this.forceUpdate();
                };
                SissoluWatersDetailsPage.prototype.onNext = function () {
                    if (this._language) {
                        character_34.character.addLanguage(this._language);
                    }
                    navigator_13.Navigation.navigateToPage(pageFactory_13.PageIdentity.SocialClass);
                };
                return SissoluWatersDetailsPage;
            }(React.Component));
            exports_55("SissoluWatersDetailsPage", SissoluWatersDetailsPage);
        }
    }
});
System.register("components/socialClassSelection", ['react', "helpers/socialClasses", "helpers/attributes", "components/button"], function(exports_56, context_56) {
    "use strict";
    var __moduleName = context_56 && context_56.id;
    var React, socialClasses_6, attributes_18, button_18;
    var SocialClassSelection;
    return {
        setters:[
            function (React_29) {
                React = React_29;
            },
            function (socialClasses_6_1) {
                socialClasses_6 = socialClasses_6_1;
            },
            function (attributes_18_1) {
                attributes_18 = attributes_18_1;
            },
            function (button_18_1) {
                button_18 = button_18_1;
            }],
        execute: function() {
            SocialClassSelection = (function (_super) {
                __extends(SocialClassSelection, _super);
                function SocialClassSelection(props) {
                    _super.call(this, props);
                }
                SocialClassSelection.prototype.render = function () {
                    var _this = this;
                    var socialClasses = socialClasses_6.SocialClassesHelper.getSocialClasses().map(function (soc, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, soc.name), React.createElement("td", null, attributes_18.AttributesHelper.getAttributeName(soc.attribute)), React.createElement("td", null, soc.earnings), React.createElement("td", null, React.createElement(button_18.Button, {className: "button-small", text: "Select", onClick: function () { _this.props.onSelection(soc.id); }}))));
                    });
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT SOCIAL CLASS"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attribute")), React.createElement("td", null, React.createElement("h3", null, "Earnings")), React.createElement("td", null))), React.createElement("tbody", null, socialClasses)), React.createElement(button_18.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return SocialClassSelection;
            }(React.Component));
            exports_56("SocialClassSelection", SocialClassSelection);
        }
    }
});
System.register("pages/socialClassPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/socialClassSelection", "helpers/socialClasses"], function(exports_57, context_57) {
    "use strict";
    var __moduleName = context_57 && context_57.id;
    var React, character_35, navigator_14, pageFactory_14, pageHeader_14, button_19, socialClassSelection_1, socialClasses_7;
    var SocialClassPage;
    return {
        setters:[
            function (React_30) {
                React = React_30;
            },
            function (character_35_1) {
                character_35 = character_35_1;
            },
            function (navigator_14_1) {
                navigator_14 = navigator_14_1;
            },
            function (pageFactory_14_1) {
                pageFactory_14 = pageFactory_14_1;
            },
            function (pageHeader_14_1) {
                pageHeader_14 = pageHeader_14_1;
            },
            function (button_19_1) {
                button_19 = button_19_1;
            },
            function (socialClassSelection_1_1) {
                socialClassSelection_1 = socialClassSelection_1_1;
            },
            function (socialClasses_7_1) {
                socialClasses_7 = socialClasses_7_1;
            }],
        execute: function() {
            SocialClassPage = (function (_super) {
                __extends(SocialClassPage, _super);
                function SocialClassPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                SocialClassPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_35.character.isOptional
                        ? (React.createElement(button_19.Button, {text: "ROLL SOCIAL CLASS", className: "button-dark", onClick: function () { _this.rollSocialClass(); }}))
                        : undefined;
                    var select = (React.createElement(button_19.Button, {text: "SELECT SOCIAL CLASS", lpCost: 1, className: "button-dark", onClick: function () { _this.showSocialClasses(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "Now that you know where you were born and raised, let’s find out more about how you grew up." + ' ' + "What were your economic circumstances? First determine your social status by rolling" + ' ' + "or choosing your social class."), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(socialClassSelection_1.SocialClassSelection, {onSelection: function (faction) {
                            character_35.character.paidForSocialClass = true;
                            _this.selectSocialClass(faction);
                            character_35.character.lifePoints--;
                        }, onCancel: function () { _this.hideSocialClasses(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_14.PageHeader, {text: "STATUS: SOCIAL CLASS"}), content));
                };
                SocialClassPage.prototype.rollSocialClass = function () {
                    var soc = socialClasses_7.SocialClassesHelper.generateSocialClass();
                    this.selectSocialClass(soc);
                };
                SocialClassPage.prototype.showSocialClasses = function () {
                    this.setState({ showSelection: true });
                };
                SocialClassPage.prototype.hideSocialClasses = function () {
                    this.setState({ showSelection: false });
                };
                SocialClassPage.prototype.selectSocialClass = function (socialClass) {
                    character_35.character.socialClass = socialClass;
                    socialClasses_7.SocialClassesHelper.applySocialClass(socialClass);
                    navigator_14.Navigation.navigateToPage(pageFactory_14.PageIdentity.HomeEnvironment);
                };
                return SocialClassPage;
            }(React.Component));
            exports_57("SocialClassPage", SocialClassPage);
        }
    }
});
System.register("components/homeEnvironmentSelection", ['react', "helpers/homeEnvironments", "helpers/attributes", "helpers/skills", "components/button"], function(exports_58, context_58) {
    "use strict";
    var __moduleName = context_58 && context_58.id;
    var React, homeEnvironments_2, attributes_19, skills_21, button_20;
    var HomeEnvironmentSelection;
    return {
        setters:[
            function (React_31) {
                React = React_31;
            },
            function (homeEnvironments_2_1) {
                homeEnvironments_2 = homeEnvironments_2_1;
            },
            function (attributes_19_1) {
                attributes_19 = attributes_19_1;
            },
            function (skills_21_1) {
                skills_21 = skills_21_1;
            },
            function (button_20_1) {
                button_20 = button_20_1;
            }],
        execute: function() {
            HomeEnvironmentSelection = (function (_super) {
                __extends(HomeEnvironmentSelection, _super);
                function HomeEnvironmentSelection(props) {
                    _super.call(this, props);
                }
                HomeEnvironmentSelection.prototype.render = function () {
                    var _this = this;
                    var envs = homeEnvironments_2.HomeEnvironmentsHelper.getHomeEnvironments().map(function (env, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, env.name), React.createElement("td", null, attributes_19.AttributesHelper.getAttributeName(env.attribute)), React.createElement("td", null, skills_21.SkillsHelper.getSkillName(env.skill)), React.createElement("td", null, React.createElement(button_20.Button, {className: "button-small", text: "Select", onClick: function () { _this.props.onSelection(env.id); }}))));
                    });
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT HOME ENVIRONMENT"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attribute")), React.createElement("td", null, React.createElement("h3", null, "Skill")), React.createElement("td", null))), React.createElement("tbody", null, envs)), React.createElement(button_20.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return HomeEnvironmentSelection;
            }(React.Component));
            exports_58("HomeEnvironmentSelection", HomeEnvironmentSelection);
        }
    }
});
System.register("pages/homeEnvironmentPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/homeEnvironmentSelection", "helpers/homeEnvironments"], function(exports_59, context_59) {
    "use strict";
    var __moduleName = context_59 && context_59.id;
    var React, character_36, navigator_15, pageFactory_15, pageHeader_15, button_21, homeEnvironmentSelection_1, homeEnvironments_3;
    var HomeEnvironmentPage;
    return {
        setters:[
            function (React_32) {
                React = React_32;
            },
            function (character_36_1) {
                character_36 = character_36_1;
            },
            function (navigator_15_1) {
                navigator_15 = navigator_15_1;
            },
            function (pageFactory_15_1) {
                pageFactory_15 = pageFactory_15_1;
            },
            function (pageHeader_15_1) {
                pageHeader_15 = pageHeader_15_1;
            },
            function (button_21_1) {
                button_21 = button_21_1;
            },
            function (homeEnvironmentSelection_1_1) {
                homeEnvironmentSelection_1 = homeEnvironmentSelection_1_1;
            },
            function (homeEnvironments_3_1) {
                homeEnvironments_3 = homeEnvironments_3_1;
            }],
        execute: function() {
            HomeEnvironmentPage = (function (_super) {
                __extends(HomeEnvironmentPage, _super);
                function HomeEnvironmentPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                HomeEnvironmentPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_36.character.isOptional
                        ? (React.createElement(button_21.Button, {text: "ROLL ENVIRONMENT", className: "button-dark", onClick: function () { _this.rollHomeEnvironment(); }}))
                        : undefined;
                    var select = (React.createElement(button_21.Button, {text: "SELECT ENVIRONMENT", lpCost: character_36.character.paidForSocialClass ? 0 : 1, className: "button-dark", onClick: function () { _this.showHomeEnvironments(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "What was life like and what type of people were you surrounded by?" + ' ' + "Continue Determining your social status by rolling or choosing the" + ' ' + "kind of home environment you grew up in."), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(homeEnvironmentSelection_1.HomeEnvironmentSelection, {onSelection: function (env) {
                            _this.selectHomeEnvironment(env);
                            if (!character_36.character.paidForSocialClass) {
                                character_36.character.lifePoints--;
                            }
                        }, onCancel: function () { _this.hideHomeEnvironments(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_15.PageHeader, {text: "STATUS: HOME ENVIRONMENT"}), content));
                };
                HomeEnvironmentPage.prototype.rollHomeEnvironment = function () {
                    var env = homeEnvironments_3.HomeEnvironmentsHelper.generateHomeEnvironment();
                    this.selectHomeEnvironment(env);
                };
                HomeEnvironmentPage.prototype.showHomeEnvironments = function () {
                    this.setState({ showSelection: true });
                };
                HomeEnvironmentPage.prototype.hideHomeEnvironments = function () {
                    this.setState({ showSelection: false });
                };
                HomeEnvironmentPage.prototype.selectHomeEnvironment = function (env) {
                    character_36.character.homeEnvironment = env;
                    homeEnvironments_3.HomeEnvironmentsHelper.applyHomeEnvironment(env);
                    navigator_15.Navigation.navigateToPage(pageFactory_15.PageIdentity.StatusDetails);
                };
                return HomeEnvironmentPage;
            }(React.Component));
            exports_59("HomeEnvironmentPage", HomeEnvironmentPage);
        }
    }
});
System.register("pages/statusDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/socialClasses", "helpers/homeEnvironments", "helpers/attributes", "components/pageHeader", "components/attribute", "components/skillImprovement", "components/button", "components/dialog", "helpers/alienHosts"], function(exports_60, context_60) {
    "use strict";
    var __moduleName = context_60 && context_60.id;
    var React, character_37, navigator_16, pageFactory_16, socialClasses_8, homeEnvironments_4, attributes_20, pageHeader_16, attribute_4, skillImprovement_3, button_22, dialog_4, alienHosts_15;
    var StatusDetailsPage;
    return {
        setters:[
            function (React_33) {
                React = React_33;
            },
            function (character_37_1) {
                character_37 = character_37_1;
            },
            function (navigator_16_1) {
                navigator_16 = navigator_16_1;
            },
            function (pageFactory_16_1) {
                pageFactory_16 = pageFactory_16_1;
            },
            function (socialClasses_8_1) {
                socialClasses_8 = socialClasses_8_1;
            },
            function (homeEnvironments_4_1) {
                homeEnvironments_4 = homeEnvironments_4_1;
            },
            function (attributes_20_1) {
                attributes_20 = attributes_20_1;
            },
            function (pageHeader_16_1) {
                pageHeader_16 = pageHeader_16_1;
            },
            function (attribute_4_1) {
                attribute_4 = attribute_4_1;
            },
            function (skillImprovement_3_1) {
                skillImprovement_3 = skillImprovement_3_1;
            },
            function (button_22_1) {
                button_22 = button_22_1;
            },
            function (dialog_4_1) {
                dialog_4 = dialog_4_1;
            },
            function (alienHosts_15_1) {
                alienHosts_15 = alienHosts_15_1;
            }],
        execute: function() {
            StatusDetailsPage = (function (_super) {
                __extends(StatusDetailsPage, _super);
                function StatusDetailsPage(props) {
                    _super.call(this, props);
                    this._skillsDone = false;
                }
                StatusDetailsPage.prototype.render = function () {
                    var _this = this;
                    var socialClass = socialClasses_8.SocialClassesHelper.getSocialClass(character_37.character.socialClass);
                    var environment = homeEnvironments_4.HomeEnvironmentsHelper.getHomeEnvironment(character_37.character.homeEnvironment);
                    var socialClassAttributeReduction = 0;
                    if (socialClass.attribute === environment.attribute) {
                        socialClassAttributeReduction = -1;
                    }
                    var nextLabel = character_37.character.host === alienHosts_15.AlienHost.Helot
                        ? "FRY EVENT"
                        : "YOUTH EVENT";
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_16.PageHeader, {text: "STATUS"}), React.createElement("div", {className: "header-text"}, socialClass.name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTE"), React.createElement(attribute_4.AttributeView, {name: attributes_20.AttributesHelper.getAttributeName(socialClass.attribute), points: 1, value: character_37.character.attributes[socialClass.attribute].value + socialClassAttributeReduction})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, environment.name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTE"), React.createElement(attribute_4.AttributeView, {name: attributes_20.AttributesHelper.getAttributeName(environment.attribute), points: 1, value: character_37.character.attributes[environment.attribute].value}), React.createElement("div", {className: "header-small"}, "SKILL"), React.createElement(skillImprovement_3.SkillImprovement, {skill: environment.skill, onDone: function (done) { _this._skillsDone = done; }})), React.createElement(button_22.Button, {text: nextLabel, className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                StatusDetailsPage.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_4.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_16.Navigation.navigateToPage(pageFactory_16.PageIdentity.YouthEvent);
                };
                return StatusDetailsPage;
            }(React.Component));
            exports_60("StatusDetailsPage", StatusDetailsPage);
        }
    }
});
System.register("components/youthEventSelection", ['react', "helpers/youthEvents", "components/button"], function(exports_61, context_61) {
    "use strict";
    var __moduleName = context_61 && context_61.id;
    var React, youthEvents_3, button_23;
    var YouthEventSelection;
    return {
        setters:[
            function (React_34) {
                React = React_34;
            },
            function (youthEvents_3_1) {
                youthEvents_3 = youthEvents_3_1;
            },
            function (button_23_1) {
                button_23 = button_23_1;
            }],
        execute: function() {
            YouthEventSelection = (function (_super) {
                __extends(YouthEventSelection, _super);
                function YouthEventSelection(props) {
                    _super.call(this, props);
                }
                YouthEventSelection.prototype.render = function () {
                    var _this = this;
                    var eventElements = [];
                    var events = {};
                    for (var i = 1; i <= 19; i++) {
                        for (var j = 1; j <= 6; j++) {
                            var event = youthEvents_3.YouthEventsHelper.getEvent(i, j);
                            var category;
                            var n = -1;
                            n = event.description.indexOf(":");
                            if (n === -1) {
                                n = event.description.indexOf(" ");
                            }
                            category = event.description.substring(0, n) + "...";
                            var ev = "..." + event.description.substring(n + 1);
                            if (events[category] === undefined) {
                                events[category] = [];
                            }
                            var exists = false;
                            for (var k = 0; k < events[category].length; k++) {
                                if (events[category][k].description === event.description) {
                                    exists = true;
                                    break;
                                }
                            }
                            if (!exists) {
                                events[category].push(event);
                            }
                        }
                    }
                    var n = 0;
                    for (var category in events) {
                        var evs = events[category].map(function (ev, i) {
                            return (React.createElement("div", {key: i, className: "youth-event", onClick: function () { return _this.props.onSelection(ev); }}, "...", ev.description));
                        });
                        eventElements.push((React.createElement("div", {key: n++}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, category), evs), React.createElement("br", null))));
                    }
                    return (React.createElement("div", null, React.createElement("div", {className: "header-text"}, "SELECT YOUTH EVENT"), React.createElement("br", null), eventElements, React.createElement(button_23.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return YouthEventSelection;
            }(React.Component));
            exports_61("YouthEventSelection", YouthEventSelection);
        }
    }
});
System.register("pages/youthEventPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/youthEventSelection", "helpers/youthEvents", "helpers/fryEvents", "helpers/alienHosts"], function(exports_62, context_62) {
    "use strict";
    var __moduleName = context_62 && context_62.id;
    var React, character_38, navigator_17, pageFactory_17, pageHeader_17, button_24, youthEventSelection_1, youthEvents_4, fryEvents_1, alienHosts_16;
    var YouthEventPage;
    return {
        setters:[
            function (React_35) {
                React = React_35;
            },
            function (character_38_1) {
                character_38 = character_38_1;
            },
            function (navigator_17_1) {
                navigator_17 = navigator_17_1;
            },
            function (pageFactory_17_1) {
                pageFactory_17 = pageFactory_17_1;
            },
            function (pageHeader_17_1) {
                pageHeader_17 = pageHeader_17_1;
            },
            function (button_24_1) {
                button_24 = button_24_1;
            },
            function (youthEventSelection_1_1) {
                youthEventSelection_1 = youthEventSelection_1_1;
            },
            function (youthEvents_4_1) {
                youthEvents_4 = youthEvents_4_1;
            },
            function (fryEvents_1_1) {
                fryEvents_1 = fryEvents_1_1;
            },
            function (alienHosts_16_1) {
                alienHosts_16 = alienHosts_16_1;
            }],
        execute: function() {
            YouthEventPage = (function (_super) {
                __extends(YouthEventPage, _super);
                function YouthEventPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false,
                        showEvent: false
                    };
                }
                YouthEventPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_38.character.isOptional || character_38.character.host === alienHosts_16.AlienHost.Helot
                        ? (React.createElement(button_24.Button, {text: "ROLL EVENT", className: "button-dark", onClick: function () { _this.rollYouthEvent(); }}))
                        : undefined;
                    var select = character_38.character.host !== alienHosts_16.AlienHost.Helot
                        ? (React.createElement(button_24.Button, {text: "SELECT EVENT", lpCost: 1, className: "button-dark", onClick: function () { _this.showYouthEvents(); }}))
                        : undefined;
                    var reroll = character_38.character.host !== alienHosts_16.AlienHost.Helot
                        ? (React.createElement(button_24.Button, {className: "button-dark", lpCost: 1, text: "REROLL", onClick: function () { _this.reroll(); }}))
                        : undefined;
                    var pageText = character_38.character.host !== alienHosts_16.AlienHost.Helot
                        ? "Each event indicates something that had a massive impact on your youth. It might be something you’ve long since put past you or it may still be the core of your later life, but either way, you’ll want to use the simple description as a springboard for your imagination and detail exactly what happened."
                        : "Being a fry is both like and unlike being a human child. While Humans and Helots alike are routinely shocked by how much they have in common despite their obvious differences, fryhood tends to be a fairly dramatic time for Helots and their pods.";
                    var content = !this.state.showSelection && !this.state.showEvent ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, pageText), React.createElement("div", {className: "button-container"}, roll, select)))
                        : this.state.showSelection ?
                            (React.createElement(youthEventSelection_1.YouthEventSelection, {onSelection: function (ev) { _this.selectYouthEvent(ev); character_38.character.lifePoints--; }, onCancel: function () { _this.hideYouthEvents(); }}))
                            : this.state.showEvent ?
                                (React.createElement("div", {className: "page"}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, character_38.character.youthEvent.description), React.createElement("br", null), reroll), React.createElement(button_24.Button, {className: "button-next", text: "EDUCATION", onClick: function () { _this.onNext(); }})))
                                : undefined;
                    var header = character_38.character.host === alienHosts_16.AlienHost.Helot
                        ? "FRY EVENT"
                        : "YOUTH EVENT";
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_17.PageHeader, {text: header}), content));
                };
                YouthEventPage.prototype.rollYouthEvent = function () {
                    if (character_38.character.host === alienHosts_16.AlienHost.Helot) {
                        var ev = fryEvents_1.FryEventsHelper.generateEvent();
                        character_38.character.youthEvent = new youthEvents_4.YouthEventModel(ev.effect, ev.onApply);
                    }
                    else {
                        var ev = youthEvents_4.YouthEventsHelper.generateEvent();
                        character_38.character.youthEvent = ev;
                    }
                    this.setState({ showSelection: false, showEvent: true });
                };
                YouthEventPage.prototype.showYouthEvents = function () {
                    this.setState({ showSelection: true, showEvent: false });
                };
                YouthEventPage.prototype.hideYouthEvents = function () {
                    this.setState({ showSelection: false, showEvent: false });
                };
                YouthEventPage.prototype.selectYouthEvent = function (env) {
                    character_38.character.youthEvent = env;
                    this.onNext();
                };
                YouthEventPage.prototype.reroll = function () {
                    character_38.character.lifePoints--;
                    this.rollYouthEvent();
                    this.forceUpdate();
                };
                YouthEventPage.prototype.onNext = function () {
                    character_38.character.youthEvent.apply();
                    if (youthEvents_4.YouthEventsHelper.getDetailView(character_38.character.youthEvent)) {
                        navigator_17.Navigation.navigateToPage(pageFactory_17.PageIdentity.YouthEventDetails);
                    }
                    else {
                        navigator_17.Navigation.navigateToPage(pageFactory_17.PageIdentity.Education);
                    }
                };
                return YouthEventPage;
            }(React.Component));
            exports_62("YouthEventPage", YouthEventPage);
        }
    }
});
System.register("events/reduceAttributeEvent", ['react', "common/character", "common/navigator", "components/attributeImprovement", "components/button", "components/dialog", "pages/pageFactory"], function(exports_63, context_63) {
    "use strict";
    var __moduleName = context_63 && context_63.id;
    var React, character_39, navigator_18, attributeImprovement_3, button_25, dialog_5, pageFactory_18;
    var ReduceAttributeEvent;
    return {
        setters:[
            function (React_36) {
                React = React_36;
            },
            function (character_39_1) {
                character_39 = character_39_1;
            },
            function (navigator_18_1) {
                navigator_18 = navigator_18_1;
            },
            function (attributeImprovement_3_1) {
                attributeImprovement_3 = attributeImprovement_3_1;
            },
            function (button_25_1) {
                button_25 = button_25_1;
            },
            function (dialog_5_1) {
                dialog_5 = dialog_5_1;
            },
            function (pageFactory_18_1) {
                pageFactory_18 = pageFactory_18_1;
            }],
        execute: function() {
            ReduceAttributeEvent = (function (_super) {
                __extends(ReduceAttributeEvent, _super);
                function ReduceAttributeEvent(props) {
                    _super.call(this, props);
                    this._attrsDone = false;
                }
                ReduceAttributeEvent.prototype.render = function () {
                    var _this = this;
                    var next = character_39.character.careers.length > 0
                        ? React.createElement(button_25.Button, {text: "NEXT", className: "button-next", onClick: function () { return navigator_18.Navigation.navigateToPage(pageFactory_18.PageIdentity.AfterEvent); }})
                        : React.createElement(button_25.Button, {text: "EDUCATION", className: "button-next", onClick: function () { return navigator_18.Navigation.navigateToPage(pageFactory_18.PageIdentity.Education); }});
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement(attributeImprovement_3.AttributeImprovementCollection, {mode: attributeImprovement_3.AttributeImprovementCollectionMode.Decrease, points: this.props.points, attributes: this.props.attributes, onDone: function (done) { return _this._attrsDone = done; }})), next));
                };
                ReduceAttributeEvent.prototype.onNext = function () {
                    if (!this._attrsDone) {
                        dialog_5.Dialog.show("You have not reduced one of your attributes.");
                        return;
                    }
                    navigator_18.Navigation.navigateToPage(pageFactory_18.PageIdentity.AfterEvent);
                };
                return ReduceAttributeEvent;
            }(React.Component));
            exports_63("ReduceAttributeEvent", ReduceAttributeEvent);
        }
    }
});
System.register("events/resurrectedEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory", "helpers/attributes"], function(exports_64, context_64) {
    "use strict";
    var __moduleName = context_64 && context_64.id;
    var React, character_40, navigator_19, button_26, pageFactory_19, attributes_21;
    var ResurrectedEvent;
    return {
        setters:[
            function (React_37) {
                React = React_37;
            },
            function (character_40_1) {
                character_40 = character_40_1;
            },
            function (navigator_19_1) {
                navigator_19 = navigator_19_1;
            },
            function (button_26_1) {
                button_26 = button_26_1;
            },
            function (pageFactory_19_1) {
                pageFactory_19 = pageFactory_19_1;
            },
            function (attributes_21_1) {
                attributes_21 = attributes_21_1;
            }],
        execute: function() {
            ResurrectedEvent = (function (_super) {
                __extends(ResurrectedEvent, _super);
                function ResurrectedEvent(props) {
                    _super.call(this, props);
                }
                ResurrectedEvent.prototype.render = function () {
                    var _this = this;
                    var std = character_40.character.lifePoints >= 1
                        ? React.createElement(button_26.Button, {className: "button-dark", text: "Select", lpCost: 1, onClick: function () { _this.onStandardSelected(); }})
                        : "Not affordable";
                    var nabia = character_40.character.lifePoints >= 3
                        ? React.createElement(button_26.Button, {className: "button-dark", text: "Select", lpCost: 3, onClick: function () { _this.onNabiaSelected(); }})
                        : "Not affordable";
                    var orlando = character_40.character.lifePoints >= 3
                        ? React.createElement(button_26.Button, {className: "button-dark", text: "Select", lpCost: 3, onClick: function () { _this.onOrlandoSelected(); }})
                        : "Not affordable";
                    var siren = character_40.character.lifePoints >= 3
                        ? React.createElement(button_26.Button, {className: "button-dark", text: "Select", lpCost: 3, onClick: function () { _this.onSirenSelected(); }})
                        : "Not affordable";
                    var titan = character_40.character.lifePoints >= 2
                        ? React.createElement(button_26.Button, {className: "button-dark", text: "Select", lpCost: 3, onClick: function () { _this.onTitanSelected(); }})
                        : "Not affordable";
                    return (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "You have died and been resurrected. By default, you will be placed in an Antiquated Lhost. If you can afford it, you may spend Life Points to be placed in a more advanced Lhost instead."), React.createElement("div", {className: "panel"}, React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, "Attributes"), React.createElement("td", null, "Abilities"), React.createElement("td", null))), React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "ANTIQUATED LHOST"), React.createElement("td", null, "-1 to all attributes"), React.createElement("td", null, "Inured to disease"), React.createElement("td", null, React.createElement(button_26.Button, {className: "button-dark", text: "Select", onClick: function () { _this.onAntiquatedSelected(); }}))), React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "STANDARD LHOST"), React.createElement("td", null, "No attribute reduction"), React.createElement("td", null, "Inured to disease", React.createElement("br", null), "+1 Armor Soak"), React.createElement("td", null, std)), React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "NABIA LHOST"), React.createElement("td", null, "-1 AGI/COO, +1 BRW"), React.createElement("td", null, "Inured to Aquatic Pressure, Cold, Disease", React.createElement("br", null), "Amphibious", React.createElement("br", null), "+1 Armor Soak", React.createElement("br", null), "+1 BTS"), React.createElement("td", null, nabia)), React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "ORLANDO LHOST"), React.createElement("td", null, "-1 WIL, +1 BRW/COO"), React.createElement("td", null, "Inured to disease", React.createElement("br", null), "Ballistics Expert System 1", React.createElement("br", null), "Close Combat Expert System 1"), React.createElement("td", null, orlando)), React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "SIREN LHOST"), React.createElement("td", null, "+1 AGI/PER"), React.createElement("td", null, "Inured to disease", React.createElement("br", null), "Persuade Expert System 1", React.createElement("br", null), "+1 Morale"), React.createElement("td", null, siren)), React.createElement("tr", null, React.createElement("td", {className: "selection-header"}, "TITAN LHOST"), React.createElement("td", null, "-1 AGI/PER/COO, +2 BRW"), React.createElement("td", null, "Inured to disease, vacuum", React.createElement("br", null), "+2 Armor Soak", React.createElement("br", null), "+2 BTS"), React.createElement("td", null, titan)))))));
                };
                ResurrectedEvent.prototype.onAntiquatedSelected = function () {
                    character_40.character.attributes.forEach(function (attr) {
                        character_40.character.attributes[attr.attribute].value--;
                    });
                    this.addHostAbility("Inured to disease");
                    character_40.character.hostName = "Antiquated Lhost";
                    this.onNext();
                };
                ResurrectedEvent.prototype.onStandardSelected = function () {
                    this.addHostAbility("Inured to disease");
                    character_40.character.lifePoints--;
                    character_40.character.hostName = "Standard Lhost";
                    character_40.character.armorBonus++;
                    this.onNext();
                };
                ResurrectedEvent.prototype.onNabiaSelected = function () {
                    character_40.character.attributes[attributes_21.Attribute.Agility].value--;
                    character_40.character.attributes[attributes_21.Attribute.Coordination].value--;
                    character_40.character.attributes[attributes_21.Attribute.Brawn].value++;
                    this.addHostAbility("Inured to disease");
                    this.addHostAbility("Inured to aquatic pressure");
                    this.addHostAbility("Inured to cold");
                    this.addHostAbility("Amphibious (-3D traversing aquatic terrain)");
                    character_40.character.lifePoints -= 3;
                    character_40.character.hostName = "Nabia Lhost";
                    character_40.character.armorBonus++;
                    character_40.character.bts++;
                    this.onNext();
                };
                ResurrectedEvent.prototype.onOrlandoSelected = function () {
                    character_40.character.attributes[attributes_21.Attribute.Willpower].value--;
                    character_40.character.attributes[attributes_21.Attribute.Coordination].value++;
                    character_40.character.attributes[attributes_21.Attribute.Brawn].value++;
                    this.addHostAbility("Inured to disease");
                    this.addHostAbility("Ballistics Expert System 1");
                    this.addHostAbility("Close Combat Expert System 1");
                    character_40.character.lifePoints -= 3;
                    character_40.character.hostName = "Orlando Lhost";
                    this.onNext();
                };
                ResurrectedEvent.prototype.onSirenSelected = function () {
                    character_40.character.attributes[attributes_21.Attribute.Agility].value++;
                    character_40.character.attributes[attributes_21.Attribute.Personality].value++;
                    this.addHostAbility("Inured to disease");
                    this.addHostAbility("Persuade Expert System 1");
                    character_40.character.lifePoints -= 3;
                    character_40.character.hostName = "Siren Lhost";
                    character_40.character.morale++;
                    this.onNext();
                };
                ResurrectedEvent.prototype.onTitanSelected = function () {
                    character_40.character.attributes[attributes_21.Attribute.Agility].value--;
                    character_40.character.attributes[attributes_21.Attribute.Personality].value--;
                    character_40.character.attributes[attributes_21.Attribute.Coordination].value--;
                    character_40.character.attributes[attributes_21.Attribute.Brawn].value += 2;
                    this.addHostAbility("Inured to disease");
                    this.addHostAbility("Inured to vacuum");
                    character_40.character.lifePoints -= 2;
                    character_40.character.hostName = "Titan Lhost";
                    character_40.character.armorBonus += 2;
                    character_40.character.bts += 2;
                    this.onNext();
                };
                ResurrectedEvent.prototype.addHostAbility = function (ability) {
                    if (!character_40.character.hostAbilities.some(function (a) { return a === ability; })) {
                        character_40.character.hostAbilities.push(ability);
                    }
                };
                ResurrectedEvent.prototype.onNext = function () {
                    if (character_40.character.education >= 0) {
                        navigator_19.Navigation.navigateToPage(pageFactory_19.PageIdentity.AfterEvent);
                    }
                    else {
                        navigator_19.Navigation.navigateToPage(pageFactory_19.PageIdentity.Education);
                    }
                };
                return ResurrectedEvent;
            }(React.Component));
            exports_64("ResurrectedEvent", ResurrectedEvent);
        }
    }
});
System.register("pages/youthEventDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "events/reduceAttributeEvent", "events/resurrectedEvent"], function(exports_65, context_65) {
    "use strict";
    var __moduleName = context_65 && context_65.id;
    var React, character_41, navigator_20, pageFactory_20, pageHeader_18, reduceAttributeEvent_1, resurrectedEvent_1;
    var YouthEventDetailsPage;
    return {
        setters:[
            function (React_38) {
                React = React_38;
            },
            function (character_41_1) {
                character_41 = character_41_1;
            },
            function (navigator_20_1) {
                navigator_20 = navigator_20_1;
            },
            function (pageFactory_20_1) {
                pageFactory_20 = pageFactory_20_1;
            },
            function (pageHeader_18_1) {
                pageHeader_18 = pageHeader_18_1;
            },
            function (reduceAttributeEvent_1_1) {
                reduceAttributeEvent_1 = reduceAttributeEvent_1_1;
            },
            function (resurrectedEvent_1_1) {
                resurrectedEvent_1 = resurrectedEvent_1_1;
            }],
        execute: function() {
            YouthEventDetailsPage = (function (_super) {
                __extends(YouthEventDetailsPage, _super);
                function YouthEventDetailsPage(props) {
                    _super.call(this, props);
                }
                YouthEventDetailsPage.prototype.render = function () {
                    var event = character_41.character.youthEvent.description;
                    var page = event.indexOf("Biological/Chemical weapons") > -1
                        ? (React.createElement(reduceAttributeEvent_1.ReduceAttributeEvent, {points: 1}))
                        : event.indexOf("Died!") > -1
                            ? (React.createElement(resurrectedEvent_1.ResurrectedEvent, null))
                            : undefined;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_18.PageHeader, {text: "YOUTH EVENT"}), React.createElement("div", {className: "page-text"}, event), page));
                };
                YouthEventDetailsPage.prototype.onNext = function () {
                    navigator_20.Navigation.navigateToPage(pageFactory_20.PageIdentity.Education);
                };
                return YouthEventDetailsPage;
            }(React.Component));
            exports_65("YouthEventDetailsPage", YouthEventDetailsPage);
        }
    }
});
System.register("components/educationSelection", ['react', "helpers/educations", "helpers/skills", "helpers/attributes", "components/button"], function(exports_66, context_66) {
    "use strict";
    var __moduleName = context_66 && context_66.id;
    var React, educations_3, skills_22, attributes_22, button_27;
    var EducationSelection;
    return {
        setters:[
            function (React_39) {
                React = React_39;
            },
            function (educations_3_1) {
                educations_3 = educations_3_1;
            },
            function (skills_22_1) {
                skills_22 = skills_22_1;
            },
            function (attributes_22_1) {
                attributes_22 = attributes_22_1;
            },
            function (button_27_1) {
                button_27 = button_27_1;
            }],
        execute: function() {
            EducationSelection = (function (_super) {
                __extends(EducationSelection, _super);
                function EducationSelection(props) {
                    _super.call(this, props);
                }
                EducationSelection.prototype.render = function () {
                    var _this = this;
                    var edus = educations_3.EducationsHelper.getEducations().map(function (edu, i) {
                        var attributes = (React.createElement("div", {key: i}, "+2 ", attributes_22.AttributesHelper.getAttributeName(edu.plus2).substr(0, 3), React.createElement("br", null), "+1 ", attributes_22.AttributesHelper.getAttributeName(edu.plus1).substr(0, 3), React.createElement("br", null), "-1 ", attributes_22.AttributesHelper.getAttributeName(edu.minus1).substr(0, 3)));
                        var mandatory = edu.mandatory.map(function (m, i) {
                            return (React.createElement("div", {key: i}, skills_22.SkillsHelper.getSkillName(m)));
                        });
                        var elective = edu.elective.map(function (e, i) {
                            return (React.createElement("div", {key: i}, skills_22.SkillsHelper.getSkillName(e)));
                        });
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, edu.name), React.createElement("td", null, attributes), React.createElement("td", null, mandatory), React.createElement("td", null, elective), React.createElement("td", null, React.createElement(button_27.Button, {className: "button-small", text: "Select", onClick: function () { _this.props.onSelection(edu.id); }}))));
                    });
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT EDUCATION"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, React.createElement("h3", null, "Attributes")), React.createElement("td", null, React.createElement("h3", null, "Mandatory Skills")), React.createElement("td", null, React.createElement("h3", null, "Elective Skills")), React.createElement("td", null))), React.createElement("tbody", null, edus)), React.createElement(button_27.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return EducationSelection;
            }(React.Component));
            exports_66("EducationSelection", EducationSelection);
        }
    }
});
System.register("pages/educationPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/educationSelection", "helpers/educations"], function(exports_67, context_67) {
    "use strict";
    var __moduleName = context_67 && context_67.id;
    var React, character_42, navigator_21, pageFactory_21, pageHeader_19, button_28, educationSelection_1, educations_4;
    var EducationPage;
    return {
        setters:[
            function (React_40) {
                React = React_40;
            },
            function (character_42_1) {
                character_42 = character_42_1;
            },
            function (navigator_21_1) {
                navigator_21 = navigator_21_1;
            },
            function (pageFactory_21_1) {
                pageFactory_21 = pageFactory_21_1;
            },
            function (pageHeader_19_1) {
                pageHeader_19 = pageHeader_19_1;
            },
            function (button_28_1) {
                button_28 = button_28_1;
            },
            function (educationSelection_1_1) {
                educationSelection_1 = educationSelection_1_1;
            },
            function (educations_4_1) {
                educations_4 = educations_4_1;
            }],
        execute: function() {
            EducationPage = (function (_super) {
                __extends(EducationPage, _super);
                function EducationPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false
                    };
                }
                EducationPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_42.character.isOptional
                        ? (React.createElement(button_28.Button, {text: "ROLL EDUCATION", className: "button-dark", onClick: function () { _this.rollEducation(); }}))
                        : undefined;
                    var select = (React.createElement(button_28.Button, {text: "SELECT EDUCATION", lpCost: 1, className: "button-dark", onClick: function () { _this.showEducations(); }}));
                    var content = !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "What kind of education did you get?"), React.createElement("div", {className: "button-container"}, roll, select)))
                        : (React.createElement(educationSelection_1.EducationSelection, {onSelection: function (env) { _this.selectEducation(env); character_42.character.lifePoints--; }, onCancel: function () { _this.hideEducations(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_19.PageHeader, {text: "EDUCATION"}), content));
                };
                EducationPage.prototype.rollEducation = function () {
                    var edu = educations_4.EducationsHelper.generateEducation();
                    this.selectEducation(edu);
                };
                EducationPage.prototype.showEducations = function () {
                    this.setState({ showSelection: true });
                };
                EducationPage.prototype.hideEducations = function () {
                    this.setState({ showSelection: false });
                };
                EducationPage.prototype.selectEducation = function (edu) {
                    character_42.character.education = edu;
                    educations_4.EducationsHelper.applyEducation(edu);
                    navigator_21.Navigation.navigateToPage(pageFactory_21.PageIdentity.EducationDetails);
                };
                return EducationPage;
            }(React.Component));
            exports_67("EducationPage", EducationPage);
        }
    }
});
System.register("components/electiveSkillImprovement", ['react', "common/character", "helpers/skills"], function(exports_68, context_68) {
    "use strict";
    var __moduleName = context_68 && context_68.id;
    var React, character_43, skills_23;
    var ElectiveSkill, ElectiveSkillImprovement;
    return {
        setters:[
            function (React_41) {
                React = React_41;
            },
            function (character_43_1) {
                character_43 = character_43_1;
            },
            function (skills_23_1) {
                skills_23 = skills_23_1;
            }],
        execute: function() {
            ElectiveSkill = (function (_super) {
                __extends(ElectiveSkill, _super);
                function ElectiveSkill(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_43.character.skills[this.props.skill].expertise;
                    this._originalFocus = character_43.character.skills[this.props.skill].focus;
                    this._points = 1;
                }
                ElectiveSkill.prototype.componentWillUpdate = function () {
                    if (this._points === 1) {
                        this._originalExpertise = character_43.character.skills[this.props.skill].expertise;
                        this._originalFocus = character_43.character.skills[this.props.skill].focus;
                    }
                };
                ElectiveSkill.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var max = character_43.character.skills[skill].isSignature ? 5 : 3;
                    var expertise = character_43.character.skills[skill].expertise;
                    var focus = character_43.character.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = expertise === this._originalExpertise &&
                        focus === this._originalFocus &&
                        this.props.controller.points > 0 &&
                        !this.props.hideModifiers &&
                        expertise < max;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus === this._originalFocus &&
                        focus !== expertise &&
                        expertise === this._originalExpertise &&
                        this.props.controller.points > 0 &&
                        !this.props.hideModifiers &&
                        focus < max;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_23.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", decExp, " ", incExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", decFoc, " ", incFoc)));
                };
                ElectiveSkill.prototype.onDecreaseExpertise = function () {
                    character_43.character.skills[this.props.skill].expertise--;
                    this._points++;
                    this.addToExcludedSkills();
                    this.props.onExpertiseDecreased();
                };
                ElectiveSkill.prototype.onIncreaseExpertise = function () {
                    character_43.character.skills[this.props.skill].expertise++;
                    this._points--;
                    this.removeFromExcludedSkills();
                    this.props.onExpertiseIncreased();
                };
                ElectiveSkill.prototype.onDecreaseFocus = function () {
                    character_43.character.skills[this.props.skill].focus--;
                    this._points++;
                    this.addToExcludedSkills();
                    this.props.onFocusDecreased();
                };
                ElectiveSkill.prototype.onIncreaseFocus = function () {
                    character_43.character.skills[this.props.skill].focus++;
                    this._points--;
                    this.removeFromExcludedSkills();
                    this.props.onFocusIncreased();
                };
                ElectiveSkill.prototype.addToExcludedSkills = function () {
                    var n = character_43.character.excludedElectiveSkills.indexOf(this.props.skill);
                    if (n === -1) {
                        character_43.character.excludedElectiveSkills.push(this.props.skill);
                    }
                };
                ElectiveSkill.prototype.removeFromExcludedSkills = function () {
                    var n = character_43.character.excludedElectiveSkills.indexOf(this.props.skill);
                    if (n > -1) {
                        character_43.character.excludedElectiveSkills.splice(n, 1);
                    }
                };
                return ElectiveSkill;
            }(React.Component));
            ElectiveSkillImprovement = (function (_super) {
                __extends(ElectiveSkillImprovement, _super);
                function ElectiveSkillImprovement(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._points = props.points;
                    character_43.character.excludedElectiveSkills = [];
                    (_a = character_43.character.excludedElectiveSkills).push.apply(_a, this.props.skills);
                    this._otherSkills = skills_23.SkillsHelper.getSkills().filter(function (s) {
                        return _this.props.skills.indexOf(s) === -1;
                    });
                    this.state = {
                        showSkills: false
                    };
                    var _a;
                }
                ElectiveSkillImprovement.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (s, i) {
                        return (React.createElement("div", {key: i}, React.createElement(ElectiveSkill, {skill: s, controller: _this, onExpertiseDecreased: function () { return _this.update(false); }, onExpertiseIncreased: function () { return _this.update(true); }, onFocusDecreased: function () { return _this.update(false); }, onFocusIncreased: function () { return _this.update(true); }})));
                    });
                    var otherSkills = this.state.showSkills
                        ? this._otherSkills.map(function (s, i) {
                            return (React.createElement("div", {key: i}, React.createElement(ElectiveSkill, {skill: s, hideModifiers: character_43.character.lifePoints === 0, controller: _this, onExpertiseDecreased: function () { return _this.update(false, false); }, onExpertiseIncreased: function () { return _this.update(true, true); }, onFocusDecreased: function () { return _this.update(false, false); }, onFocusIncreased: function () { return _this.update(true, true); }})));
                        })
                        : undefined;
                    var toggle = this.state.showSkills
                        ? React.createElement("img", {style: { transform: "translate(5px, 5px)" }, height: "20", src: "res/img/up.png", onClick: function () { _this.setState({ showSkills: false }); }})
                        : React.createElement("img", {style: { transform: "translate(5px, 5px)" }, height: "20", src: "res/img/down.png", onClick: function () { _this.setState({ showSkills: true }); }});
                    var other = this._otherSkills.length > 0
                        ? (React.createElement("div", {style: { backgroundColor: "#0a334c" }}, React.createElement("b", null, "Other elective skills"), " (costs 1 Life Point to increase)", toggle, React.createElement("br", null), otherSkills))
                        : undefined;
                    return (React.createElement("div", null, skills, other));
                };
                Object.defineProperty(ElectiveSkillImprovement.prototype, "points", {
                    get: function () {
                        return this._points;
                    },
                    enumerable: true,
                    configurable: true
                });
                ElectiveSkillImprovement.prototype.update = function (decreasePoint, decreaseLifePoints) {
                    this._points += decreasePoint ? -1 : 1;
                    if (decreaseLifePoints === true) {
                        character_43.character.lifePoints--;
                    }
                    else if (decreaseLifePoints === false) {
                        character_43.character.lifePoints++;
                    }
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    this.forceUpdate();
                };
                return ElectiveSkillImprovement;
            }(React.Component));
            exports_68("ElectiveSkillImprovement", ElectiveSkillImprovement);
        }
    }
});
System.register("components/signatureSkillSelection", ['react', "common/character", "helpers/skills"], function(exports_69, context_69) {
    "use strict";
    var __moduleName = context_69 && context_69.id;
    var React, character_44, skills_24;
    var SignatureSkill, SignatureSkillSelection;
    return {
        setters:[
            function (React_42) {
                React = React_42;
            },
            function (character_44_1) {
                character_44 = character_44_1;
            },
            function (skills_24_1) {
                skills_24 = skills_24_1;
            }],
        execute: function() {
            SignatureSkill = (function (_super) {
                __extends(SignatureSkill, _super);
                function SignatureSkill(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_44.character.skills[this.props.skill].expertise;
                    this._originalFocus = character_44.character.skills[this.props.skill].focus;
                    this._points = 1;
                }
                SignatureSkill.prototype.componentWillUpdate = function () {
                    if (this._points === 1) {
                        this._originalExpertise = character_44.character.skills[this.props.skill].expertise;
                        this._originalFocus = character_44.character.skills[this.props.skill].focus;
                    }
                };
                SignatureSkill.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var expertise = character_44.character.skills[skill].expertise;
                    var focus = character_44.character.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = expertise === this._originalExpertise && focus === this._originalFocus && this.props.controller.points > 0;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus === this._originalFocus && focus !== expertise && expertise === this._originalExpertise && this.props.controller.points > 0;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_24.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", decExp, " ", incExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", decFoc, " ", incFoc)));
                };
                SignatureSkill.prototype.onDecreaseExpertise = function () {
                    this._points++;
                    character_44.character.skills[this.props.skill].expertise--;
                    character_44.character.skills[this.props.skill].isSignature = false;
                    this.props.onExpertiseDecreased();
                };
                SignatureSkill.prototype.onIncreaseExpertise = function () {
                    this._points--;
                    character_44.character.skills[this.props.skill].expertise++;
                    character_44.character.skills[this.props.skill].isSignature = true;
                    this.props.onExpertiseIncreased();
                };
                SignatureSkill.prototype.onDecreaseFocus = function () {
                    this._points++;
                    character_44.character.skills[this.props.skill].focus--;
                    character_44.character.skills[this.props.skill].isSignature = false;
                    this.props.onFocusDecreased();
                };
                SignatureSkill.prototype.onIncreaseFocus = function () {
                    this._points--;
                    character_44.character.skills[this.props.skill].focus++;
                    character_44.character.skills[this.props.skill].isSignature = true;
                    this.props.onFocusIncreased();
                };
                return SignatureSkill;
            }(React.Component));
            SignatureSkillSelection = (function (_super) {
                __extends(SignatureSkillSelection, _super);
                function SignatureSkillSelection(props) {
                    _super.call(this, props);
                    this._points = 1;
                }
                SignatureSkillSelection.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (s, i) {
                        return (React.createElement("div", {key: i}, React.createElement(SignatureSkill, {key: i, skill: s, controller: _this, onExpertiseDecreased: function () { return _this.update(null, false); }, onExpertiseIncreased: function () { return _this.update(s, true); }, onFocusDecreased: function () { return _this.update(null, false); }, onFocusIncreased: function () { return _this.update(s, true); }})));
                    });
                    return (React.createElement("div", null, skills));
                };
                Object.defineProperty(SignatureSkillSelection.prototype, "points", {
                    get: function () {
                        return this._points;
                    },
                    enumerable: true,
                    configurable: true
                });
                SignatureSkillSelection.prototype.update = function (skill, decreasePoint) {
                    this._points += decreasePoint ? -1 : 1;
                    this.props.onSelection(skill);
                    this.forceUpdate();
                };
                return SignatureSkillSelection;
            }(React.Component));
            exports_69("SignatureSkillSelection", SignatureSkillSelection);
        }
    }
});
System.register("components/talentList", ['react', "helpers/talents", "components/checkBox"], function(exports_70, context_70) {
    "use strict";
    var __moduleName = context_70 && context_70.id;
    var React, talents_3, checkBox_2;
    var TalentList;
    return {
        setters:[
            function (React_43) {
                React = React_43;
            },
            function (talents_3_1) {
                talents_3 = talents_3_1;
            },
            function (checkBox_2_1) {
                checkBox_2 = checkBox_2_1;
            }],
        execute: function() {
            TalentList = (function (_super) {
                __extends(TalentList, _super);
                function TalentList(props) {
                    _super.call(this, props);
                    this._talents = [];
                    this._selectedIndex = 0;
                }
                TalentList.prototype.componentWillReceiveProps = function (props) {
                    this._selectedIndex = 0;
                    this.props.onSelection("");
                };
                TalentList.prototype.render = function () {
                    var _this = this;
                    this._talents = talents_3.TalentsHelper.getTalentsForSkills(this.props.skills.slice());
                    this._talents = this._talents.filter(function (value, index, array) { return !array.filter(function (v, i) { return value.name === v.name && i < index; }).length; });
                    var talents = this._talents.map(function (t, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header-small"}, t.name), React.createElement("td", null, t.description), React.createElement("td", null, React.createElement(checkBox_2.CheckBox, {value: t.name, isChecked: _this._talent === t.name, onChanged: function (val) {
                            _this.selectTalent(val);
                        }}))));
                    });
                    return (React.createElement("table", {className: "selection-list"}, React.createElement("tbody", null, talents)));
                };
                TalentList.prototype.selectTalent = function (talent) {
                    this._talent = talent;
                    this.props.onSelection(this._talent);
                    this.forceUpdate();
                };
                return TalentList;
            }(React.Component));
            exports_70("TalentList", TalentList);
        }
    }
});
System.register("components/equipmentList", ['react'], function(exports_71, context_71) {
    "use strict";
    var __moduleName = context_71 && context_71.id;
    var React;
    var EquipmentList;
    return {
        setters:[
            function (React_44) {
                React = React_44;
            }],
        execute: function() {
            EquipmentList = (function (_super) {
                __extends(EquipmentList, _super);
                function EquipmentList(props) {
                    _super.call(this, props);
                    this._selectCount = 0;
                }
                EquipmentList.prototype.render = function () {
                    var _this = this;
                    this._selectCount = 0;
                    var equipment = this.props.equipment.map(function (eq, i) {
                        if (eq.indexOf('|') > -1) {
                            var eqs_1 = eq.split('|');
                            var eqList = eqs_1.map(function (e, j) {
                                return (React.createElement("option", {key: j, value: e}, e));
                            });
                            var index_1 = _this._selectCount++;
                            return (React.createElement("select", {key: i, onChange: function (e) { return _this.props.onSelected(eqs_1[e.target.selectedIndex], index_1); }}, eqList));
                        }
                        else {
                            return (React.createElement("div", {key: i}, eq));
                        }
                    });
                    return (React.createElement("div", null, equipment));
                };
                return EquipmentList;
            }(React.Component));
            exports_71("EquipmentList", EquipmentList);
        }
    }
});
System.register("pages/educationDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/educations", "helpers/attributes", "components/pageHeader", "components/attribute", "components/skillImprovement", "components/button", "components/electiveSkillImprovement", "components/signatureSkillSelection", "components/talentList", "components/equipmentList", "components/dialog"], function(exports_72, context_72) {
    "use strict";
    var __moduleName = context_72 && context_72.id;
    var React, character_45, navigator_22, pageFactory_22, educations_5, attributes_23, pageHeader_20, attribute_5, skillImprovement_4, button_29, electiveSkillImprovement_1, signatureSkillSelection_1, talentList_1, equipmentList_1, dialog_6;
    var EducationDetailsPage;
    return {
        setters:[
            function (React_45) {
                React = React_45;
            },
            function (character_45_1) {
                character_45 = character_45_1;
            },
            function (navigator_22_1) {
                navigator_22 = navigator_22_1;
            },
            function (pageFactory_22_1) {
                pageFactory_22 = pageFactory_22_1;
            },
            function (educations_5_1) {
                educations_5 = educations_5_1;
            },
            function (attributes_23_1) {
                attributes_23 = attributes_23_1;
            },
            function (pageHeader_20_1) {
                pageHeader_20 = pageHeader_20_1;
            },
            function (attribute_5_1) {
                attribute_5 = attribute_5_1;
            },
            function (skillImprovement_4_1) {
                skillImprovement_4 = skillImprovement_4_1;
            },
            function (button_29_1) {
                button_29 = button_29_1;
            },
            function (electiveSkillImprovement_1_1) {
                electiveSkillImprovement_1 = electiveSkillImprovement_1_1;
            },
            function (signatureSkillSelection_1_1) {
                signatureSkillSelection_1 = signatureSkillSelection_1_1;
            },
            function (talentList_1_1) {
                talentList_1 = talentList_1_1;
            },
            function (equipmentList_1_1) {
                equipmentList_1 = equipmentList_1_1;
            },
            function (dialog_6_1) {
                dialog_6 = dialog_6_1;
            }],
        execute: function() {
            EducationDetailsPage = (function (_super) {
                __extends(EducationDetailsPage, _super);
                function EducationDetailsPage(props) {
                    var _this = this;
                    _super.call(this, props);
                    var education = educations_5.EducationsHelper.getEducation(character_45.character.education);
                    this._signatureSkills = [];
                    education.mandatory.forEach(function (skill) {
                        if (_this._signatureSkills.indexOf(skill) === -1) {
                            if (!character_45.character.skills[skill].isSignature) {
                                _this._signatureSkills.push(skill);
                            }
                        }
                    });
                    education.elective.forEach(function (skill) {
                        if (!character_45.character.skills[skill].isSignature) {
                            if (_this._signatureSkills.indexOf(skill) === -1) {
                                _this._signatureSkills.push(skill);
                            }
                        }
                    });
                    this._selectedEquipment = [];
                    var n = 0;
                    education.equipment.forEach(function (e) {
                        if (e.indexOf('|') > -1) {
                            _this._selectedEquipment[n] = e.split('|')[0];
                            n++;
                        }
                    });
                    this._mandatoryDone = false;
                    this._electiveDone = false;
                }
                EducationDetailsPage.prototype.render = function () {
                    var _this = this;
                    var education = educations_5.EducationsHelper.getEducation(character_45.character.education);
                    var attributes = (React.createElement("div", null, React.createElement(attribute_5.AttributeView, {name: attributes_23.AttributesHelper.getAttributeName(education.plus2), points: 2, value: character_45.character.attributes[education.plus2].value}), React.createElement(attribute_5.AttributeView, {name: attributes_23.AttributesHelper.getAttributeName(education.plus1), points: 1, value: character_45.character.attributes[education.plus1].value}), React.createElement(attribute_5.AttributeView, {name: attributes_23.AttributesHelper.getAttributeName(education.minus1), points: -1, value: character_45.character.attributes[education.minus1].value})));
                    var mandatory = education.mandatory.map(function (m, i) {
                        return (React.createElement(skillImprovement_4.SkillImprovement, {key: i, skill: m, onDone: function (done) { _this._mandatoryDone = done; _this.onUpdate(); }}));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_20.PageHeader, {text: "EDUCATION"}), React.createElement("div", {className: "header-text"}, education.name), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTES"), attributes), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "MANDATORY SKILLS"), mandatory), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ELECTIVE SKILLS"), React.createElement(electiveSkillImprovement_1.ElectiveSkillImprovement, {skills: education.elective, points: 2, onDone: function (done) { _this._electiveDone = done; _this.onUpdate(); }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SIGNATURE SKILL"), React.createElement(signatureSkillSelection_1.SignatureSkillSelection, {skills: this._signatureSkills, onSelection: function (skill) { return _this.onSignatureSkillSelected(skill); }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "TALENT"), React.createElement(talentList_1.TalentList, {skills: [this._selectedSignatureSkill], onSelection: function (talent) { return _this.onTalentSelected(talent); }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "EQUIPMENT"), React.createElement(equipmentList_1.EquipmentList, {equipment: education.equipment, onSelected: function (eq, i) { return _this.onEquipmentSelected(eq, i); }})), React.createElement(button_29.Button, {text: "ADOLESCENCE EVENT", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                EducationDetailsPage.prototype.onUpdate = function () {
                    this.forceUpdate();
                };
                EducationDetailsPage.prototype.onSignatureSkillSelected = function (skill) {
                    this._selectedSignatureSkill = skill;
                    this.forceUpdate();
                };
                EducationDetailsPage.prototype.onTalentSelected = function (talent) {
                    this._selectedTalent = talent;
                };
                EducationDetailsPage.prototype.onEquipmentSelected = function (eq, index) {
                    this._selectedEquipment[index] = eq;
                };
                EducationDetailsPage.prototype.onNext = function () {
                    if (!this._mandatoryDone) {
                        dialog_6.Dialog.show("You have not distributed all mandatory skill points.");
                        return;
                    }
                    if (!this._electiveDone) {
                        dialog_6.Dialog.show("You have not distributed all elective skill points.");
                        return;
                    }
                    if (this._selectedSignatureSkill == null) {
                        dialog_6.Dialog.show("You have not selected a signature skill.");
                        return;
                    }
                    if (this._selectedTalent === null || this._selectedTalent.length === 0) {
                        dialog_6.Dialog.show("You have not selected a talent.");
                        return;
                    }
                    character_45.character.addTalent(this._selectedTalent);
                    this._selectedEquipment.forEach(function (eq) {
                        character_45.character.addEquipment(eq);
                    });
                    navigator_22.Navigation.navigateToPage(pageFactory_22.PageIdentity.AdolescenceEvent);
                };
                return EducationDetailsPage;
            }(React.Component));
            exports_72("EducationDetailsPage", EducationDetailsPage);
        }
    }
});
System.register("components/adolescenceEventSelection", ['react', "helpers/adolescenceEvents", "components/button"], function(exports_73, context_73) {
    "use strict";
    var __moduleName = context_73 && context_73.id;
    var React, adolescenceEvents_2, button_30;
    var AdolescenceEventSelection;
    return {
        setters:[
            function (React_46) {
                React = React_46;
            },
            function (adolescenceEvents_2_1) {
                adolescenceEvents_2 = adolescenceEvents_2_1;
            },
            function (button_30_1) {
                button_30 = button_30_1;
            }],
        execute: function() {
            AdolescenceEventSelection = (function (_super) {
                __extends(AdolescenceEventSelection, _super);
                function AdolescenceEventSelection(props) {
                    _super.call(this, props);
                }
                AdolescenceEventSelection.prototype.render = function () {
                    var _this = this;
                    var evs = adolescenceEvents_2.AdolescenceEventsHelper.getEvents();
                    var eventElements = [];
                    var n = 0;
                    for (var table in evs) {
                        var events = evs[table].map(function (e, i) {
                            return (React.createElement("div", {key: i}, React.createElement("div", {style: { backgroundColor: "#0a334c" }}, React.createElement("div", null, e.event), React.createElement("br", null), React.createElement(button_30.Button, {className: "button-small", text: "SELECT", onClick: function () { _this.selectEvent(e); }})), React.createElement("br", null)));
                        });
                        eventElements.push((React.createElement("div", {key: n++}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, "Table ", table), events), React.createElement("br", null))));
                    }
                    return (React.createElement("div", null, React.createElement("div", {className: "header-text"}, "SELECT ADOLESCENCE EVENT"), React.createElement("br", null), eventElements, React.createElement(button_30.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                AdolescenceEventSelection.prototype.selectEvent = function (ev) {
                    this.props.onSelection(ev);
                };
                return AdolescenceEventSelection;
            }(React.Component));
            exports_73("AdolescenceEventSelection", AdolescenceEventSelection);
        }
    }
});
System.register("pages/adolescenceEventPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/adolescenceEventSelection", "helpers/adolescenceEvents"], function(exports_74, context_74) {
    "use strict";
    var __moduleName = context_74 && context_74.id;
    var React, character_46, navigator_23, pageFactory_23, pageHeader_21, button_31, adolescenceEventSelection_1, adolescenceEvents_3;
    var AdolescenceEventPage;
    return {
        setters:[
            function (React_47) {
                React = React_47;
            },
            function (character_46_1) {
                character_46 = character_46_1;
            },
            function (navigator_23_1) {
                navigator_23 = navigator_23_1;
            },
            function (pageFactory_23_1) {
                pageFactory_23 = pageFactory_23_1;
            },
            function (pageHeader_21_1) {
                pageHeader_21 = pageHeader_21_1;
            },
            function (button_31_1) {
                button_31 = button_31_1;
            },
            function (adolescenceEventSelection_1_1) {
                adolescenceEventSelection_1 = adolescenceEventSelection_1_1;
            },
            function (adolescenceEvents_3_1) {
                adolescenceEvents_3 = adolescenceEvents_3_1;
            }],
        execute: function() {
            AdolescenceEventPage = (function (_super) {
                __extends(AdolescenceEventPage, _super);
                function AdolescenceEventPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false,
                        showEvent: false
                    };
                }
                AdolescenceEventPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_46.character.isOptional ?
                        (React.createElement(button_31.Button, {text: "ROLL EVENT", className: "button-dark", onClick: function () { _this.rollAdolescenceEvent(); }}))
                        : undefined;
                    var select = (React.createElement(button_31.Button, {text: "SELECT EVENT", lpCost: 1, className: "button-dark", onClick: function () { _this.showAdolescenceEvents(); }}));
                    var reroll = (React.createElement(button_31.Button, {className: "button-dark", lpCost: 1, text: "REROLL", onClick: function () { _this.reroll(); }}));
                    var content = !this.state.showEvent && !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "At some point during your adolescence, you experienced a defining event which still shapes who you are today."), React.createElement("div", {className: "button-container"}, roll, select)))
                        : this.state.showSelection ?
                            (React.createElement("div", null, React.createElement(adolescenceEventSelection_1.AdolescenceEventSelection, {onSelection: function (ev) { _this.selectAdolescenceEvent(ev); character_46.character.lifePoints--; }, onCancel: function () { return _this.hideAdolescenceEvents(); }})))
                            : this.state.showEvent ?
                                (React.createElement("div", {className: "page"}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, character_46.character.adolescenceEvent.event), React.createElement("br", null), reroll), React.createElement(button_31.Button, {className: "button-next", text: "CAREER", onClick: function () { _this.onNext(); }})))
                                : undefined;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_21.PageHeader, {text: "ADOLESCENCE EVENT"}), content));
                };
                AdolescenceEventPage.prototype.rollAdolescenceEvent = function () {
                    var ev = adolescenceEvents_3.AdolescenceEventsHelper.generateEvent();
                    character_46.character.adolescenceEvent = ev;
                    this.setState({ showSelection: false, showEvent: true });
                };
                AdolescenceEventPage.prototype.reroll = function () {
                    character_46.character.lifePoints--;
                    this.rollAdolescenceEvent();
                    this.forceUpdate();
                };
                AdolescenceEventPage.prototype.showAdolescenceEvents = function () {
                    this.setState({ showSelection: true, showEvent: false });
                };
                AdolescenceEventPage.prototype.hideAdolescenceEvents = function () {
                    this.setState({ showSelection: false, showEvent: false });
                };
                AdolescenceEventPage.prototype.selectAdolescenceEvent = function (ev) {
                    character_46.character.adolescenceEvent = ev;
                    this.setState({ showSelection: false, showEvent: true });
                };
                AdolescenceEventPage.prototype.onNext = function () {
                    if (character_46.character.adolescenceEvent.onApply) {
                        character_46.character.adolescenceEvent.onApply();
                    }
                    if (character_46.character.adolescenceEvent.detailView) {
                        character_46.character.pendingEvents.push(character_46.character.adolescenceEvent);
                        navigator_23.Navigation.navigateToPage(pageFactory_23.PageIdentity.EventDetails);
                    }
                    else {
                        navigator_23.Navigation.navigateToPage(pageFactory_23.PageIdentity.Career1);
                    }
                };
                return AdolescenceEventPage;
            }(React.Component));
            exports_74("AdolescenceEventPage", AdolescenceEventPage);
        }
    }
});
System.register("events/increaseUntrainedSkillEvent", ['react', "common/character", "common/navigator", "components/electiveSkillImprovement", "components/button", "components/dialog", "helpers/skills", "pages/pageFactory"], function(exports_75, context_75) {
    "use strict";
    var __moduleName = context_75 && context_75.id;
    var React, character_47, navigator_24, electiveSkillImprovement_2, button_32, dialog_7, skills_25, pageFactory_24;
    var IncreaseUntrainedSkillEvent;
    return {
        setters:[
            function (React_48) {
                React = React_48;
            },
            function (character_47_1) {
                character_47 = character_47_1;
            },
            function (navigator_24_1) {
                navigator_24 = navigator_24_1;
            },
            function (electiveSkillImprovement_2_1) {
                electiveSkillImprovement_2 = electiveSkillImprovement_2_1;
            },
            function (button_32_1) {
                button_32 = button_32_1;
            },
            function (dialog_7_1) {
                dialog_7 = dialog_7_1;
            },
            function (skills_25_1) {
                skills_25 = skills_25_1;
            },
            function (pageFactory_24_1) {
                pageFactory_24 = pageFactory_24_1;
            }],
        execute: function() {
            IncreaseUntrainedSkillEvent = (function (_super) {
                __extends(IncreaseUntrainedSkillEvent, _super);
                function IncreaseUntrainedSkillEvent(props) {
                    _super.call(this, props);
                    this._skills = [];
                    for (var i = skills_25.Skill.Acrobatics; i <= skills_25.Skill.Thievery; i++) {
                        if (character_47.character.skills[i].expertise === 0) {
                            this._skills.push(i);
                        }
                    }
                    this._skillsDone = false;
                }
                IncreaseUntrainedSkillEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement(electiveSkillImprovement_2.ElectiveSkillImprovement, {skills: this._skills, points: this.props.points, onDone: function (done) { return _this._skillsDone = done; }})), React.createElement(button_32.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                IncreaseUntrainedSkillEvent.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_7.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_24.Navigation.navigateToPage(pageFactory_24.PageIdentity.AfterEvent);
                };
                return IncreaseUntrainedSkillEvent;
            }(React.Component));
            exports_75("IncreaseUntrainedSkillEvent", IncreaseUntrainedSkillEvent);
        }
    }
});
System.register("events/increaseSkillEvent", ['react', "common/navigator", "components/electiveSkillImprovement", "components/button", "components/dialog", "pages/pageFactory"], function(exports_76, context_76) {
    "use strict";
    var __moduleName = context_76 && context_76.id;
    var React, navigator_25, electiveSkillImprovement_3, button_33, dialog_8, pageFactory_25;
    var IncreaseSkillEvent;
    return {
        setters:[
            function (React_49) {
                React = React_49;
            },
            function (navigator_25_1) {
                navigator_25 = navigator_25_1;
            },
            function (electiveSkillImprovement_3_1) {
                electiveSkillImprovement_3 = electiveSkillImprovement_3_1;
            },
            function (button_33_1) {
                button_33 = button_33_1;
            },
            function (dialog_8_1) {
                dialog_8 = dialog_8_1;
            },
            function (pageFactory_25_1) {
                pageFactory_25 = pageFactory_25_1;
            }],
        execute: function() {
            IncreaseSkillEvent = (function (_super) {
                __extends(IncreaseSkillEvent, _super);
                function IncreaseSkillEvent(props) {
                    _super.call(this, props);
                    this._skillsDone = false;
                }
                IncreaseSkillEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement(electiveSkillImprovement_3.ElectiveSkillImprovement, {skills: this.props.skills, points: this.props.points, onDone: function (done) { _this._skillsDone = done; }})), React.createElement(button_33.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                IncreaseSkillEvent.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_8.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_25.Navigation.navigateToPage(pageFactory_25.PageIdentity.AfterEvent);
                };
                return IncreaseSkillEvent;
            }(React.Component));
            exports_76("IncreaseSkillEvent", IncreaseSkillEvent);
        }
    }
});
System.register("events/increaseAllSkillsEvent", ['react', "common/navigator", "components/skillImprovement", "components/button", "components/dialog", "pages/pageFactory"], function(exports_77, context_77) {
    "use strict";
    var __moduleName = context_77 && context_77.id;
    var React, navigator_26, skillImprovement_5, button_34, dialog_9, pageFactory_26;
    var IncreaseAllSkillsEvent;
    return {
        setters:[
            function (React_50) {
                React = React_50;
            },
            function (navigator_26_1) {
                navigator_26 = navigator_26_1;
            },
            function (skillImprovement_5_1) {
                skillImprovement_5 = skillImprovement_5_1;
            },
            function (button_34_1) {
                button_34 = button_34_1;
            },
            function (dialog_9_1) {
                dialog_9 = dialog_9_1;
            },
            function (pageFactory_26_1) {
                pageFactory_26 = pageFactory_26_1;
            }],
        execute: function() {
            IncreaseAllSkillsEvent = (function (_super) {
                __extends(IncreaseAllSkillsEvent, _super);
                function IncreaseAllSkillsEvent(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._skillsDone = [];
                    this.props.skills.forEach(function (s, i) { return _this._skillsDone[i] = false; });
                }
                IncreaseAllSkillsEvent.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (s, i) {
                        return React.createElement(skillImprovement_5.SkillImprovement, {key: i, skill: s, onDone: function (done) { _this._skillsDone[i] = done; }});
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, skills), React.createElement(button_34.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                IncreaseAllSkillsEvent.prototype.onNext = function () {
                    if (!this._skillsDone.every(function (s) { return s === true; })) {
                        dialog_9.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_26.Navigation.navigateToPage(pageFactory_26.PageIdentity.AfterEvent);
                };
                return IncreaseAllSkillsEvent;
            }(React.Component));
            exports_77("IncreaseAllSkillsEvent", IncreaseAllSkillsEvent);
        }
    }
});
System.register("events/increaseSkippedElectiveSkillsEvent", ['react', "common/character", "common/navigator", "components/electiveSkillImprovement", "components/button", "components/dialog", "pages/pageFactory"], function(exports_78, context_78) {
    "use strict";
    var __moduleName = context_78 && context_78.id;
    var React, character_48, navigator_27, electiveSkillImprovement_4, button_35, dialog_10, pageFactory_27;
    var IncreaseSkippedElectiveSkillsEvent;
    return {
        setters:[
            function (React_51) {
                React = React_51;
            },
            function (character_48_1) {
                character_48 = character_48_1;
            },
            function (navigator_27_1) {
                navigator_27 = navigator_27_1;
            },
            function (electiveSkillImprovement_4_1) {
                electiveSkillImprovement_4 = electiveSkillImprovement_4_1;
            },
            function (button_35_1) {
                button_35 = button_35_1;
            },
            function (dialog_10_1) {
                dialog_10 = dialog_10_1;
            },
            function (pageFactory_27_1) {
                pageFactory_27 = pageFactory_27_1;
            }],
        execute: function() {
            IncreaseSkippedElectiveSkillsEvent = (function (_super) {
                __extends(IncreaseSkippedElectiveSkillsEvent, _super);
                function IncreaseSkippedElectiveSkillsEvent(props) {
                    _super.call(this, props);
                    this._skillsDone = false;
                }
                IncreaseSkippedElectiveSkillsEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement(electiveSkillImprovement_4.ElectiveSkillImprovement, {skills: character_48.character.excludedElectiveSkills, points: this.props.points, onDone: function (done) { return _this._skillsDone = done; }})), React.createElement(button_35.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                IncreaseSkippedElectiveSkillsEvent.prototype.onNext = function () {
                    if (!this._skillsDone) {
                        dialog_10.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_27.Navigation.navigateToPage(pageFactory_27.PageIdentity.AfterEvent);
                };
                return IncreaseSkippedElectiveSkillsEvent;
            }(React.Component));
            exports_78("IncreaseSkippedElectiveSkillsEvent", IncreaseSkippedElectiveSkillsEvent);
        }
    }
});
System.register("events/defectionEvent", ['react', "common/character", "common/navigator", "components/button", "helpers/factions", "pages/pageFactory"], function(exports_79, context_79) {
    "use strict";
    var __moduleName = context_79 && context_79.id;
    var React, character_49, navigator_28, button_36, factions_20, pageFactory_28;
    var DefectionEvent;
    return {
        setters:[
            function (React_52) {
                React = React_52;
            },
            function (character_49_1) {
                character_49 = character_49_1;
            },
            function (navigator_28_1) {
                navigator_28 = navigator_28_1;
            },
            function (button_36_1) {
                button_36 = button_36_1;
            },
            function (factions_20_1) {
                factions_20 = factions_20_1;
            },
            function (pageFactory_28_1) {
                pageFactory_28 = pageFactory_28_1;
            }],
        execute: function() {
            DefectionEvent = (function (_super) {
                __extends(DefectionEvent, _super);
                function DefectionEvent(props) {
                    _super.call(this, props);
                }
                DefectionEvent.prototype.render = function () {
                    var _this = this;
                    var factionName = factions_20.FactionsHelper.getFaction(this.props.faction).name;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Do you want to defect to the ", React.createElement("b", null, factionName), " faction?"), React.createElement(button_36.Button, {text: "YES", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_36.Button, {text: "NO", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                };
                DefectionEvent.prototype.onYes = function () {
                    character_49.character.heritage = character_49.character.faction;
                    character_49.character.hasDefected = true;
                    character_49.character.faction = this.props.faction;
                    navigator_28.Navigation.navigateToPage(pageFactory_28.PageIdentity.AfterEvent);
                };
                DefectionEvent.prototype.onNo = function () {
                    navigator_28.Navigation.navigateToPage(pageFactory_28.PageIdentity.AfterEvent);
                };
                return DefectionEvent;
            }(React.Component));
            exports_79("DefectionEvent", DefectionEvent);
        }
    }
});
System.register("events/defectionChoiceEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "helpers/factions", "pages/pageFactory"], function(exports_80, context_80) {
    "use strict";
    var __moduleName = context_80 && context_80.id;
    var React, character_50, navigator_29, button_37, dropDownInput_3, factions_21, pageFactory_29;
    var DefectionChoiceEvent;
    return {
        setters:[
            function (React_53) {
                React = React_53;
            },
            function (character_50_1) {
                character_50 = character_50_1;
            },
            function (navigator_29_1) {
                navigator_29 = navigator_29_1;
            },
            function (button_37_1) {
                button_37 = button_37_1;
            },
            function (dropDownInput_3_1) {
                dropDownInput_3 = dropDownInput_3_1;
            },
            function (factions_21_1) {
                factions_21 = factions_21_1;
            },
            function (pageFactory_29_1) {
                pageFactory_29 = pageFactory_29_1;
            }],
        execute: function() {
            DefectionChoiceEvent = (function (_super) {
                __extends(DefectionChoiceEvent, _super);
                function DefectionChoiceEvent(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._factions = [];
                    factions_21.FactionsHelper.getFactions().forEach(function (faction) {
                        if (faction.id !== character_50.character.faction && !faction.needsHeritage) {
                            _this._factions.push(faction.name);
                        }
                    });
                    this._selectedFaction = this._factions[0];
                }
                DefectionChoiceEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Which faction do you want to defect to?"), React.createElement(dropDownInput_3.DropDownInput, {items: this._factions, defaultValue: this._selectedFaction, onChange: function (index) { return _this.onFactionSelected(index); }}), React.createElement("br", null), React.createElement("br", null), React.createElement(button_37.Button, {text: "DONE", className: "button-dark", onClick: function () { return _this.onNext(); }}))));
                };
                DefectionChoiceEvent.prototype.onFactionSelected = function (index) {
                    this._selectedFaction = this._factions[index];
                    this.forceUpdate();
                };
                DefectionChoiceEvent.prototype.onNext = function () {
                    character_50.character.heritage = character_50.character.faction;
                    character_50.character.hasDefected = true;
                    character_50.character.faction = factions_21.FactionsHelper.getFactionByName(this._selectedFaction);
                    navigator_29.Navigation.navigateToPage(pageFactory_29.PageIdentity.AfterEvent);
                };
                return DefectionChoiceEvent;
            }(React.Component));
            exports_80("DefectionChoiceEvent", DefectionChoiceEvent);
        }
    }
});
System.register("events/hazardTestOrFiredEvent", ['react', "common/character", "common/navigator", "components/button", "components/dialog", "helpers/careers", "helpers/skills", "helpers/diceRoller", "pages/pageFactory"], function(exports_81, context_81) {
    "use strict";
    var __moduleName = context_81 && context_81.id;
    var React, character_51, navigator_30, button_38, dialog_11, careers_7, skills_26, diceRoller_6, pageFactory_30;
    var HazardTestOrFiredEvent;
    return {
        setters:[
            function (React_54) {
                React = React_54;
            },
            function (character_51_1) {
                character_51 = character_51_1;
            },
            function (navigator_30_1) {
                navigator_30 = navigator_30_1;
            },
            function (button_38_1) {
                button_38 = button_38_1;
            },
            function (dialog_11_1) {
                dialog_11 = dialog_11_1;
            },
            function (careers_7_1) {
                careers_7 = careers_7_1;
            },
            function (skills_26_1) {
                skills_26 = skills_26_1;
            },
            function (diceRoller_6_1) {
                diceRoller_6 = diceRoller_6_1;
            },
            function (pageFactory_30_1) {
                pageFactory_30 = pageFactory_30_1;
            }],
        execute: function() {
            HazardTestOrFiredEvent = (function (_super) {
                __extends(HazardTestOrFiredEvent, _super);
                function HazardTestOrFiredEvent(props) {
                    _super.call(this, props);
                }
                HazardTestOrFiredEvent.prototype.render = function () {
                    var _this = this;
                    var career = careers_7.CareersHelper.getCareer(character_51.character.careers[character_51.character.careers.length - 1].career);
                    var skills = career.mandatory.map(function (skill, i) {
                        return (React.createElement("div", {className: "skill-container", key: i}, React.createElement(button_38.Button, {text: "Select", className: "button-small align-right", onClick: function () { _this.onConfirm(skill, 1); }}), React.createElement("div", {className: "skill-name"}, skills_26.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise ", character_51.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_51.character.skills[skill].focus)));
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You must pass an Average (D1) hazard test for your current career or you are Fired."), skills)));
                };
                HazardTestOrFiredEvent.prototype.onConfirm = function (skill, difficulty) {
                    var targetValue = character_51.character.skills[skill].expertise + character_51.character.attributes[skills_26.SkillsHelper.getAttributeForSkill(skill)].value;
                    var roll = diceRoller_6.DiceRoller.roll(targetValue, character_51.character.skills[skill].focus, difficulty);
                    if (roll.successes > 0 && !roll.hasRepercusions) {
                        dialog_11.Dialog.show("Your hazard test succeeded.", function () {
                            navigator_30.Navigation.navigateToPage(pageFactory_30.PageIdentity.AfterEvent);
                        });
                    }
                    else {
                        navigator_30.Navigation.navigateToPage(pageFactory_30.PageIdentity.Fired);
                    }
                };
                return HazardTestOrFiredEvent;
            }(React.Component));
            exports_81("HazardTestOrFiredEvent", HazardTestOrFiredEvent);
        }
    }
});
System.register("events/firedEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory", "helpers/socialClasses"], function(exports_82, context_82) {
    "use strict";
    var __moduleName = context_82 && context_82.id;
    var React, character_52, navigator_31, button_39, pageFactory_31, socialClasses_9;
    var FiredEvent;
    return {
        setters:[
            function (React_55) {
                React = React_55;
            },
            function (character_52_1) {
                character_52 = character_52_1;
            },
            function (navigator_31_1) {
                navigator_31 = navigator_31_1;
            },
            function (button_39_1) {
                button_39 = button_39_1;
            },
            function (pageFactory_31_1) {
                pageFactory_31 = pageFactory_31_1;
            },
            function (socialClasses_9_1) {
                socialClasses_9 = socialClasses_9_1;
            }],
        execute: function() {
            FiredEvent = (function (_super) {
                __extends(FiredEvent, _super);
                function FiredEvent(props) {
                    _super.call(this, props);
                }
                FiredEvent.prototype.render = function () {
                    var _this = this;
                    var extend = character_52.character.careers.length > 0 && !character_52.character.careers[character_52.character.careers.length - 1].isExtended && character_52.character.lifePoints >= 2 && character_52.character.earnings > 0
                        ? (React.createElement(button_39.Button, {text: "EXTEND CAREER*", lpCost: 2, className: "button-dark", onClick: function () { return _this.onExtendCareer(); }}))
                        : undefined;
                    var cont = character_52.character.careers.length < 4 && character_52.character.lifePoints >= 2 && character_52.character.earnings > 0
                        ? (React.createElement(button_39.Button, {text: "CONTINUE CAREER*", lpCost: 2, className: "button-dark", onClick: function () { return _this.onContinueCareer(); }}))
                        : undefined;
                    var newCareer = character_52.character.careers.length < 4
                        ? (React.createElement(button_39.Button, {text: "NEW CAREER", className: "button-dark", onClick: function () { return _this.onNewCareer(); }}))
                        : undefined;
                    var finish = character_52.character.careers.length >= 2
                        ? (React.createElement(button_39.Button, {text: "FINISH", className: "button-dark", onClick: function () { return _this.onFinish(); }}))
                        : undefined;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You have been Fired from your current career! How do you want to proceed?" + ' ' + "Choices marked with ", React.createElement("b", null, "*"), " will reduce your Earnings by one."), React.createElement("br", null), React.createElement("br", null), React.createElement("div", {className: "button-container"}, extend, React.createElement("br", null), cont, React.createElement("br", null), newCareer, React.createElement("br", null), finish))));
                };
                FiredEvent.prototype.onExtendCareer = function () {
                    var years = Math.floor(Math.random() * 6) + 2;
                    character_52.character.age += years;
                    character_52.character.careers[character_52.character.careers.length - 1].isExtended = true;
                    character_52.character.careers[character_52.character.careers.length - 1].years += years;
                    character_52.character.earnings = Math.max(0, character_52.character.earnings - 1);
                    character_52.character.lifePoints -= 2;
                    navigator_31.Navigation.navigateToPage(character_52.character.getCareerPage(pageFactory_31.PageIdentity.CareerEvent1));
                };
                FiredEvent.prototype.onContinueCareer = function () {
                    var years = Math.floor(Math.random() * 6) + 2;
                    character_52.character.age += years;
                    character_52.character.careers.push(character_52.character.careers[character_52.character.careers.length - 1]);
                    character_52.character.careers[character_52.character.careers.length - 1].years = years;
                    character_52.character.earnings = Math.max(0, character_52.character.earnings - 1);
                    character_52.character.lifePoints -= 2;
                    navigator_31.Navigation.navigateToPage(character_52.character.getCareerPage(pageFactory_31.PageIdentity.CareerDetails1));
                };
                FiredEvent.prototype.onNewCareer = function () {
                    character_52.character.prohibitedCareers.push(character_52.character.careers[character_52.character.careers.length - 1].career);
                    navigator_31.Navigation.navigateToPage(character_52.character.getCareerPage(pageFactory_31.PageIdentity.Career1));
                };
                FiredEvent.prototype.onFinish = function () {
                    if (character_52.character.hassassinEvent) {
                        character_52.character.hassassinEvent = false;
                        socialClasses_9.SocialClassesHelper.increaseSocialClass();
                    }
                    if (character_52.character.hasGeist()) {
                        navigator_31.Navigation.navigateToPage(pageFactory_31.PageIdentity.Geist);
                    }
                    else {
                        navigator_31.Navigation.navigateToPage(pageFactory_31.PageIdentity.FinalTweaks);
                    }
                };
                return FiredEvent;
            }(React.Component));
            exports_82("FiredEvent", FiredEvent);
        }
    }
});
System.register("events/criminalRecordEvent", ['react', "common/character", "common/navigator", "components/button", "components/checkBox", "components/dialog", "pages/pageFactory", "helpers/factions", "helpers/careers", "helpers/skills", "helpers/diceRoller"], function(exports_83, context_83) {
    "use strict";
    var __moduleName = context_83 && context_83.id;
    var React, character_53, navigator_32, button_40, checkBox_3, dialog_12, pageFactory_32, factions_22, careers_8, skills_27, diceRoller_7;
    var CriminalRecordEvent;
    return {
        setters:[
            function (React_56) {
                React = React_56;
            },
            function (character_53_1) {
                character_53 = character_53_1;
            },
            function (navigator_32_1) {
                navigator_32 = navigator_32_1;
            },
            function (button_40_1) {
                button_40 = button_40_1;
            },
            function (checkBox_3_1) {
                checkBox_3 = checkBox_3_1;
            },
            function (dialog_12_1) {
                dialog_12 = dialog_12_1;
            },
            function (pageFactory_32_1) {
                pageFactory_32 = pageFactory_32_1;
            },
            function (factions_22_1) {
                factions_22 = factions_22_1;
            },
            function (careers_8_1) {
                careers_8 = careers_8_1;
            },
            function (skills_27_1) {
                skills_27 = skills_27_1;
            },
            function (diceRoller_7_1) {
                diceRoller_7 = diceRoller_7_1;
            }],
        execute: function() {
            CriminalRecordEvent = (function (_super) {
                __extends(CriminalRecordEvent, _super);
                function CriminalRecordEvent(props) {
                    _super.call(this, props);
                    this._joinSubmondo = false;
                }
                CriminalRecordEvent.prototype.render = function () {
                    var _this = this;
                    var submondo = character_53.character.faction !== factions_22.Faction.Submondo
                        ? (React.createElement("div", null, "Do you want to switch to the Submondo faction?", React.createElement("br", null), React.createElement("br", null), React.createElement(checkBox_3.CheckBox, {value: 1, isChecked: this._joinSubmondo, onChanged: function () { return _this.toggleJoinSubmondo(); }})))
                        : undefined;
                    var skills = careers_8.CareersHelper.getCareer(character_53.character.careers[character_53.character.careers.length - 1].career).mandatory.map(function (skill, i) {
                        return (React.createElement("div", {className: "skill-container", key: i}, React.createElement(button_40.Button, {text: "Select", className: "button-small align-right", onClick: function () { _this.onRoll(skill); }}), React.createElement("div", {className: "skill-name"}, skills_27.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise ", character_53.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_53.character.skills[skill].focus)));
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You have gained a Criminal Record."), React.createElement("br", null), React.createElement("br", null), submondo, React.createElement("br", null), React.createElement("br", null), "You must pass an Average (D1) hazard test for your current career or you are Fired. Select a skill.", skills)));
                };
                CriminalRecordEvent.prototype.onRoll = function (skill) {
                    if (this._joinSubmondo) {
                        character_53.character.heritage = character_53.character.faction;
                        character_53.character.faction = factions_22.Faction.Submondo;
                        character_53.character.hasDefected = true;
                    }
                    var targetValue = character_53.character.skills[skill].expertise + character_53.character.attributes[skills_27.SkillsHelper.getAttributeForSkill(skill)].value;
                    var roll = diceRoller_7.DiceRoller.roll(targetValue, character_53.character.skills[skill].focus, 1);
                    if (roll.successes > 0 && !roll.hasRepercusions) {
                        dialog_12.Dialog.show("Your hazard attempt was successful!", function () {
                            navigator_32.Navigation.navigateToPage(pageFactory_32.PageIdentity.AfterEvent);
                        });
                    }
                    else {
                        dialog_12.Dialog.show("Your hazard attempt failed. You are fired!", function () {
                            navigator_32.Navigation.navigateToPage(pageFactory_32.PageIdentity.Fired);
                        });
                    }
                };
                CriminalRecordEvent.prototype.toggleJoinSubmondo = function () {
                    this._joinSubmondo = !this._joinSubmondo;
                    this.forceUpdate();
                };
                return CriminalRecordEvent;
            }(React.Component));
            exports_83("CriminalRecordEvent", CriminalRecordEvent);
        }
    }
});
System.register("events/hazardTestOrCriminalRecordEvent", ['react', "common/character", "common/navigator", "components/button", "components/dialog", "helpers/careers", "helpers/skills", "helpers/diceRoller", "pages/pageFactory"], function(exports_84, context_84) {
    "use strict";
    var __moduleName = context_84 && context_84.id;
    var React, character_54, navigator_33, button_41, dialog_13, careers_9, skills_28, diceRoller_8, pageFactory_33;
    var HazardTestOrCriminalRecordEvent;
    return {
        setters:[
            function (React_57) {
                React = React_57;
            },
            function (character_54_1) {
                character_54 = character_54_1;
            },
            function (navigator_33_1) {
                navigator_33 = navigator_33_1;
            },
            function (button_41_1) {
                button_41 = button_41_1;
            },
            function (dialog_13_1) {
                dialog_13 = dialog_13_1;
            },
            function (careers_9_1) {
                careers_9 = careers_9_1;
            },
            function (skills_28_1) {
                skills_28 = skills_28_1;
            },
            function (diceRoller_8_1) {
                diceRoller_8 = diceRoller_8_1;
            },
            function (pageFactory_33_1) {
                pageFactory_33 = pageFactory_33_1;
            }],
        execute: function() {
            HazardTestOrCriminalRecordEvent = (function (_super) {
                __extends(HazardTestOrCriminalRecordEvent, _super);
                function HazardTestOrCriminalRecordEvent(props) {
                    _super.call(this, props);
                }
                HazardTestOrCriminalRecordEvent.prototype.render = function () {
                    var _this = this;
                    var career = careers_9.CareersHelper.getCareer(character_54.character.careers[character_54.character.careers.length - 1].career);
                    var skills = career.mandatory.map(function (skill, i) {
                        return (React.createElement("div", {className: "skill-container", key: i}, React.createElement(button_41.Button, {text: "Select", className: "button-small align-right", onClick: function () { _this.onConfirm(skill, 1); }}), React.createElement("div", {className: "skill-name"}, skills_28.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise ", character_54.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_54.character.skills[skill].focus)));
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You must pass an Challenging (D2) hazard test for your current career or you gain a criminal record."), skills)));
                };
                HazardTestOrCriminalRecordEvent.prototype.onConfirm = function (skill, difficulty) {
                    var targetValue = character_54.character.skills[skill].expertise + character_54.character.attributes[skills_28.SkillsHelper.getAttributeForSkill(skill)].value;
                    var roll = diceRoller_8.DiceRoller.roll(targetValue, character_54.character.skills[skill].focus, difficulty);
                    if (roll.successes > 0 && !roll.hasRepercusions) {
                        dialog_13.Dialog.show("Your hazard test succeeded.", function () {
                            navigator_33.Navigation.navigateToPage(pageFactory_33.PageIdentity.AfterEvent);
                        });
                    }
                    else {
                        navigator_33.Navigation.navigateToPage(pageFactory_33.PageIdentity.CriminalRecord);
                    }
                };
                return HazardTestOrCriminalRecordEvent;
            }(React.Component));
            exports_84("HazardTestOrCriminalRecordEvent", HazardTestOrCriminalRecordEvent);
        }
    }
});
System.register("events/hazardTestOrReduceEarningsEvent", ['react', "common/character", "common/navigator", "components/button", "components/dialog", "helpers/careers", "helpers/skills", "helpers/diceRoller", "pages/pageFactory"], function(exports_85, context_85) {
    "use strict";
    var __moduleName = context_85 && context_85.id;
    var React, character_55, navigator_34, button_42, dialog_14, careers_10, skills_29, diceRoller_9, pageFactory_34;
    var HazardTestOrReduceEarningsEvent;
    return {
        setters:[
            function (React_58) {
                React = React_58;
            },
            function (character_55_1) {
                character_55 = character_55_1;
            },
            function (navigator_34_1) {
                navigator_34 = navigator_34_1;
            },
            function (button_42_1) {
                button_42 = button_42_1;
            },
            function (dialog_14_1) {
                dialog_14 = dialog_14_1;
            },
            function (careers_10_1) {
                careers_10 = careers_10_1;
            },
            function (skills_29_1) {
                skills_29 = skills_29_1;
            },
            function (diceRoller_9_1) {
                diceRoller_9 = diceRoller_9_1;
            },
            function (pageFactory_34_1) {
                pageFactory_34 = pageFactory_34_1;
            }],
        execute: function() {
            HazardTestOrReduceEarningsEvent = (function (_super) {
                __extends(HazardTestOrReduceEarningsEvent, _super);
                function HazardTestOrReduceEarningsEvent(props) {
                    _super.call(this, props);
                }
                HazardTestOrReduceEarningsEvent.prototype.render = function () {
                    var _this = this;
                    var career = careers_10.CareersHelper.getCareer(character_55.character.careers[character_55.character.careers.length - 1].career);
                    var skills = career.mandatory.map(function (skill, i) {
                        return (React.createElement("div", {className: "skill-container", key: i}, React.createElement(button_42.Button, {text: "Select", className: "button-small align-right", onClick: function () { _this.onConfirm(skill, 2); }}), React.createElement("div", {className: "skill-name"}, skills_29.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise ", character_55.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_55.character.skills[skill].focus)));
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Your employer hits a slump and is struggling to make ends meet." + ' ' + "You can either agree to a pay cut (reduce your Earnings Rating by 1) or you can" + ' ' + "choose to make a Challenging (D2) hazard test for your current career." + ' ' + "If you fail the test, you are Fired. But if you succeed, your Earnings Rating is" + ' ' + "unchanged as you swap to a new employer."), React.createElement(button_42.Button, {text: "CUT PAY", className: "button-dark", onClick: function () { return _this.onCutPay(); }}), React.createElement("br", null), skills)));
                };
                HazardTestOrReduceEarningsEvent.prototype.onCutPay = function () {
                    character_55.character.earnings = Math.max(character_55.character.earnings - 1, 0);
                    navigator_34.Navigation.navigateToPage(pageFactory_34.PageIdentity.AfterEvent);
                };
                HazardTestOrReduceEarningsEvent.prototype.onConfirm = function (skill, difficulty) {
                    var targetValue = character_55.character.skills[skill].expertise + character_55.character.attributes[skills_29.SkillsHelper.getAttributeForSkill(skill)].value;
                    var roll = diceRoller_9.DiceRoller.roll(targetValue, character_55.character.skills[skill].focus, difficulty);
                    if (roll.successes > 0 && !roll.hasRepercusions) {
                        dialog_14.Dialog.show("Your hazard test succeeded.", function () {
                            navigator_34.Navigation.navigateToPage(pageFactory_34.PageIdentity.AfterEvent);
                        });
                    }
                    else {
                        navigator_34.Navigation.navigateToPage(pageFactory_34.PageIdentity.Fired);
                    }
                };
                return HazardTestOrReduceEarningsEvent;
            }(React.Component));
            exports_85("HazardTestOrReduceEarningsEvent", HazardTestOrReduceEarningsEvent);
        }
    }
});
System.register("events/chineseCurseEvent", ['react', "common/character", "common/navigator", "components/button", "helpers/careerEvents", "pages/pageFactory"], function(exports_86, context_86) {
    "use strict";
    var __moduleName = context_86 && context_86.id;
    var React, character_56, navigator_35, button_43, careerEvents_5, pageFactory_35;
    var ChineseCurseEvent;
    return {
        setters:[
            function (React_59) {
                React = React_59;
            },
            function (character_56_1) {
                character_56 = character_56_1;
            },
            function (navigator_35_1) {
                navigator_35 = navigator_35_1;
            },
            function (button_43_1) {
                button_43 = button_43_1;
            },
            function (careerEvents_5_1) {
                careerEvents_5 = careerEvents_5_1;
            },
            function (pageFactory_35_1) {
                pageFactory_35 = pageFactory_35_1;
            }],
        execute: function() {
            ChineseCurseEvent = (function (_super) {
                __extends(ChineseCurseEvent, _super);
                function ChineseCurseEvent() {
                    _super.call(this);
                    this._event1 = careerEvents_5.CareerEventsHelper.generateEvent();
                    while (this._event1.eventNumber === 20) {
                        this._event1 = careerEvents_5.CareerEventsHelper.generateEvent();
                    }
                    this._event2 = careerEvents_5.CareerEventsHelper.generateEvent();
                    while ((this._event2.table === this._event1.table && this._event2.eventNumber === this._event1.eventNumber) ||
                        this._event2.eventNumber === 20) {
                        this._event2 = careerEvents_5.CareerEventsHelper.generateEvent();
                    }
                    this._event3 = careerEvents_5.CareerEventsHelper.generateEvent();
                    while ((this._event3.table === this._event1.table && this._event3.eventNumber === this._event1.eventNumber) ||
                        (this._event3.table === this._event2.table && this._event3.eventNumber === this._event2.eventNumber) ||
                        this._event3.eventNumber === 20) {
                        this._event3 = careerEvents_5.CareerEventsHelper.generateEvent();
                    }
                    character_56.character.pendingEvents.push(this._event1);
                    character_56.character.pendingEvents.push(this._event2);
                    character_56.character.pendingEvents.push(this._event3);
                }
                ChineseCurseEvent.prototype.render = function () {
                    return (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "You are suffering from the Chinese Curse: May you live in interesting times!You gain three career events for this career phase."), React.createElement("div", {className: "panel"}, this._event1.event), React.createElement("div", {className: "panel"}, this._event2.event), React.createElement("div", {className: "panel"}, this._event3.event), React.createElement(button_43.Button, {text: "NEXT", className: "button-next", onClick: function () { return navigator_35.Navigation.navigateToPage(pageFactory_35.PageIdentity.AfterEvent); }})));
                };
                return ChineseCurseEvent;
            }(React.Component));
            exports_86("ChineseCurseEvent", ChineseCurseEvent);
        }
    }
});
System.register("events/homelessEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory"], function(exports_87, context_87) {
    "use strict";
    var __moduleName = context_87 && context_87.id;
    var React, character_57, navigator_36, button_44, pageFactory_36;
    var HomelessEvent;
    return {
        setters:[
            function (React_60) {
                React = React_60;
            },
            function (character_57_1) {
                character_57 = character_57_1;
            },
            function (navigator_36_1) {
                navigator_36 = navigator_36_1;
            },
            function (button_44_1) {
                button_44 = button_44_1;
            },
            function (pageFactory_36_1) {
                pageFactory_36 = pageFactory_36_1;
            }],
        execute: function() {
            HomelessEvent = (function (_super) {
                __extends(HomelessEvent, _super);
                function HomelessEvent() {
                    _super.call(this);
                    if (character_57.character.assets < 5) {
                        this.onNo();
                    }
                }
                HomelessEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Do you want to spend 5 Assets to avoid becoming homeless?"), React.createElement(button_44.Button, {text: "YES", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_44.Button, {text: "NO", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                };
                HomelessEvent.prototype.onYes = function () {
                    character_57.character.assets -= 5;
                    navigator_36.Navigation.navigateToPage(pageFactory_36.PageIdentity.AfterEvent);
                };
                HomelessEvent.prototype.onNo = function () {
                    character_57.character.careerEvents[character_57.character.careerEvents.length - 1].effect += " You're now homeless.";
                    navigator_36.Navigation.navigateToPage(pageFactory_36.PageIdentity.AfterEvent);
                };
                return HomelessEvent;
            }(React.Component));
            exports_87("HomelessEvent", HomelessEvent);
        }
    }
});
System.register("events/helpFriendEvent", ['react', "common/character", "common/navigator", "components/button", "helpers/factions", "common/eventModel", "pages/pageFactory"], function(exports_88, context_88) {
    "use strict";
    var __moduleName = context_88 && context_88.id;
    var React, character_58, navigator_37, button_45, factions_23, eventModel_7, pageFactory_37;
    var HelpFriendEvent;
    return {
        setters:[
            function (React_61) {
                React = React_61;
            },
            function (character_58_1) {
                character_58 = character_58_1;
            },
            function (navigator_37_1) {
                navigator_37 = navigator_37_1;
            },
            function (button_45_1) {
                button_45 = button_45_1;
            },
            function (factions_23_1) {
                factions_23 = factions_23_1;
            },
            function (eventModel_7_1) {
                eventModel_7 = eventModel_7_1;
            },
            function (pageFactory_37_1) {
                pageFactory_37 = pageFactory_37_1;
            }],
        execute: function() {
            HelpFriendEvent = (function (_super) {
                __extends(HelpFriendEvent, _super);
                function HelpFriendEvent() {
                    _super.call(this);
                }
                HelpFriendEvent.prototype.render = function () {
                    var _this = this;
                    var faction = factions_23.FactionsHelper.generateFaction(false, true);
                    this._factionName = factions_23.FactionsHelper.getFaction(faction).name;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You discover that your friend is a traitor working for a rival faction." + ' ' + "The authorities request your help in arresting them.", React.createElement("br", null), React.createElement("br", null), "If you cooperate with the authorities, gain 5 assets as a reward.", React.createElement("br", null), React.createElement("br", null), "If you help your friend, you gain a contact in the ", this._factionName, " faction" + ' ' + "but you must make an Average (D1) hazard test in your current career or gain a Criminal Record.", React.createElement("br", null), React.createElement("br", null), "Do you want to help your friend?"), React.createElement(button_45.Button, {text: "YES", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_45.Button, {text: "NO", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                };
                HelpFriendEvent.prototype.onYes = function () {
                    character_58.character.careerEvents[character_58.character.careerEvents.length - 1].effect += " You helped your friend. You gain a contact in the " + this._factionName + " faction.";
                    character_58.character.pendingEvents.push(new eventModel_7.EventModel("", "", "", "HazardTestOrCriminalRecord"));
                    navigator_37.Navigation.navigateToPage(pageFactory_37.PageIdentity.AfterEvent);
                };
                HelpFriendEvent.prototype.onNo = function () {
                    character_58.character.careerEvents[character_58.character.careerEvents.length - 1].effect += " You did not help your friend.";
                    character_58.character.assets += 5;
                    navigator_37.Navigation.navigateToPage(pageFactory_37.PageIdentity.AfterEvent);
                };
                return HelpFriendEvent;
            }(React.Component));
            exports_88("HelpFriendEvent", HelpFriendEvent);
        }
    }
});
System.register("events/selectTalentEvent", ['react', "common/character", "common/navigator", "helpers/talents", "components/button", "components/dropDownInput", "helpers/skills", "pages/pageFactory"], function(exports_89, context_89) {
    "use strict";
    var __moduleName = context_89 && context_89.id;
    var React, character_59, navigator_38, talents_4, button_46, DropDownInput_1, skills_30, pageFactory_38;
    var SelectTalentEvent;
    return {
        setters:[
            function (React_62) {
                React = React_62;
            },
            function (character_59_1) {
                character_59 = character_59_1;
            },
            function (navigator_38_1) {
                navigator_38 = navigator_38_1;
            },
            function (talents_4_1) {
                talents_4 = talents_4_1;
            },
            function (button_46_1) {
                button_46 = button_46_1;
            },
            function (DropDownInput_1_1) {
                DropDownInput_1 = DropDownInput_1_1;
            },
            function (skills_30_1) {
                skills_30 = skills_30_1;
            },
            function (pageFactory_38_1) {
                pageFactory_38 = pageFactory_38_1;
            }],
        execute: function() {
            SelectTalentEvent = (function (_super) {
                __extends(SelectTalentEvent, _super);
                function SelectTalentEvent(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._talents = [];
                    this._descs = [];
                    this._talents = [];
                    this._descs = [];
                    if (!this.props.skill) {
                        var talents = talents_4.TalentsHelper.getTalents();
                        for (var tal in talents) {
                            for (var i = 0; i < talents[tal].length; i++) {
                                var t = talents[tal][i];
                                if (!character_59.character.hasTalent(t.name)) {
                                    this._talents.push(t.name);
                                    this._descs.push(t.description);
                                }
                            }
                        }
                    }
                    else {
                        var talents = talents_4.TalentsHelper.getTalentsForSkills([this.props.skill]);
                        if (!character_59.character.hasTalent(talents[0].name)) {
                            this._talents.push(talents[0].name);
                            this._descs.push(talents[0].description);
                        }
                        else {
                            talents.forEach(function (t) {
                                if (!character_59.character.hasTalent(t.name)) {
                                    _this._talents.push(t.name);
                                    _this._descs.push(t.description);
                                }
                            });
                        }
                    }
                    this._talent = this._talents[0];
                    this._desc = this._descs[0];
                }
                SelectTalentEvent.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill
                        ? React.createElement("div", null, "You may select an additional ", React.createElement("b", null, skills_30.SkillsHelper.getSkillName(this.props.skill)), " talent.")
                        : React.createElement("div", null, "You may select an additional talent.");
                    if (this._talents.length > 0) {
                        return (React.createElement("div", null, React.createElement("div", {className: "panel"}, skill, React.createElement(DropDownInput_1.DropDownInput, {items: this._talents, defaultValue: this._talent, onChange: function (index) { _this.selectTalent(index); }}), React.createElement("div", null, this._desc)), React.createElement(button_46.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                    }
                    else {
                        return (React.createElement("div", null, React.createElement("div", {className: "panel"}, "You are not eligible for any additional talent."), React.createElement(button_46.Button, {text: "OK", className: "button-next", onClick: function () { return _this.next(); }})));
                    }
                };
                SelectTalentEvent.prototype.selectTalent = function (index) {
                    this._talent = this._talents[index];
                    this._desc = this._descs[index];
                    this.forceUpdate();
                };
                SelectTalentEvent.prototype.next = function () {
                    if (this._talent) {
                        character_59.character.addTalent(this._talent);
                    }
                    navigator_38.Navigation.navigateToPage(pageFactory_38.PageIdentity.AfterEvent);
                };
                return SelectTalentEvent;
            }(React.Component));
            exports_89("SelectTalentEvent", SelectTalentEvent);
        }
    }
});
System.register("events/jailOrDebtEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory", "components/electiveSkillImprovement", "helpers/skills"], function(exports_90, context_90) {
    "use strict";
    var __moduleName = context_90 && context_90.id;
    var React, character_60, navigator_39, button_47, pageFactory_39, electiveSkillImprovement_5, skills_31;
    var JailOrDebtEvent;
    return {
        setters:[
            function (React_63) {
                React = React_63;
            },
            function (character_60_1) {
                character_60 = character_60_1;
            },
            function (navigator_39_1) {
                navigator_39 = navigator_39_1;
            },
            function (button_47_1) {
                button_47 = button_47_1;
            },
            function (pageFactory_39_1) {
                pageFactory_39 = pageFactory_39_1;
            },
            function (electiveSkillImprovement_5_1) {
                electiveSkillImprovement_5 = electiveSkillImprovement_5_1;
            },
            function (skills_31_1) {
                skills_31 = skills_31_1;
            }],
        execute: function() {
            JailOrDebtEvent = (function (_super) {
                __extends(JailOrDebtEvent, _super);
                function JailOrDebtEvent() {
                    _super.call(this);
                    this.state = {
                        showSkillIncrease: false
                    };
                }
                JailOrDebtEvent.prototype.render = function () {
                    var _this = this;
                    if (!this.state.showSkillIncrease) {
                        return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away. Did you let them? If so, what was the cost?", React.createElement("br", null), React.createElement("b", null, "Accept"), " to gain a 1-10 Asset debt and 1 rank in Thievery.", React.createElement("br", null), React.createElement("b", null, "Decline"), " to spend 1-6 years in jail and gain a criminal record."), React.createElement(button_47.Button, {text: "ACCEPT", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_47.Button, {text: "DECLINE", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                    }
                    else {
                        React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "panel"}, React.createElement(electiveSkillImprovement_5.ElectiveSkillImprovement, {skills: [skills_31.Skill.Thievery], points: 1})), React.createElement(button_47.Button, {text: "DONE", className: "button-next", onClick: function () { return navigator_39.Navigation.navigateToPage(pageFactory_39.PageIdentity.AfterEvent); }})));
                    }
                };
                JailOrDebtEvent.prototype.onNo = function () {
                    var years = Math.floor(Math.random() * 6) + 1;
                    character_60.character.age += years;
                    character_60.character.hasCriminalRecord = true;
                    character_60.character.careerEvents[character_60.character.careerEvents.length - 1].effect += " You declined and spent " + years + " years in jail.";
                    navigator_39.Navigation.navigateToPage(pageFactory_39.PageIdentity.AfterEvent);
                };
                JailOrDebtEvent.prototype.onYes = function () {
                    var debt = Math.floor(Math.random() * 10) + 1;
                    character_60.character.careerEvents[character_60.character.careerEvents.length - 1].effect += " You accepted, and owe your benefactor " + debt + " Assets.";
                    this.setState({ showSkillIncrease: true });
                };
                return JailOrDebtEvent;
            }(React.Component));
            exports_90("JailOrDebtEvent", JailOrDebtEvent);
        }
    }
});
System.register("events/selectDrugEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory"], function(exports_91, context_91) {
    "use strict";
    var __moduleName = context_91 && context_91.id;
    var React, character_61, navigator_40, button_48, DropDownInput_2, pageFactory_40;
    var SelectDrugEvent;
    return {
        setters:[
            function (React_64) {
                React = React_64;
            },
            function (character_61_1) {
                character_61 = character_61_1;
            },
            function (navigator_40_1) {
                navigator_40 = navigator_40_1;
            },
            function (button_48_1) {
                button_48 = button_48_1;
            },
            function (DropDownInput_2_1) {
                DropDownInput_2 = DropDownInput_2_1;
            },
            function (pageFactory_40_1) {
                pageFactory_40 = pageFactory_40_1;
            }],
        execute: function() {
            SelectDrugEvent = (function (_super) {
                __extends(SelectDrugEvent, _super);
                function SelectDrugEvent() {
                    _super.call(this);
                    this._drugs = [
                        "Antibiotics",
                        "Nitrocaine",
                        "Painkillers",
                        "Stims",
                        "Surge"
                    ];
                    this._drug = this._drugs[0];
                }
                SelectDrugEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Choose your addiction."), React.createElement(DropDownInput_2.DropDownInput, {items: this._drugs, defaultValue: this._drug, onChange: function (index) { _this.selectDrug(index); }})), React.createElement(button_48.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                SelectDrugEvent.prototype.selectDrug = function (index) {
                    this._drug = this._drugs[index];
                    this.forceUpdate();
                };
                SelectDrugEvent.prototype.next = function () {
                    character_61.character.careerEvents[character_61.character.careerEvents.length - 1].effect += " You are addicted to " + this._drug + ". Additionally, reduce the difficulty of all Lifestyle tests by 1 (to a minimum of 0).";
                    navigator_40.Navigation.navigateToPage(pageFactory_40.PageIdentity.AfterEvent);
                };
                return SelectDrugEvent;
            }(React.Component));
            exports_91("SelectDrugEvent", SelectDrugEvent);
        }
    }
});
System.register("events/selectWeaponEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory", "helpers/equipment"], function(exports_92, context_92) {
    "use strict";
    var __moduleName = context_92 && context_92.id;
    var React, character_62, navigator_41, button_49, DropDownInput_3, pageFactory_41, equipment_2;
    var SelectWeaponEvent;
    return {
        setters:[
            function (React_65) {
                React = React_65;
            },
            function (character_62_1) {
                character_62 = character_62_1;
            },
            function (navigator_41_1) {
                navigator_41 = navigator_41_1;
            },
            function (button_49_1) {
                button_49 = button_49_1;
            },
            function (DropDownInput_3_1) {
                DropDownInput_3 = DropDownInput_3_1;
            },
            function (pageFactory_41_1) {
                pageFactory_41 = pageFactory_41_1;
            },
            function (equipment_2_1) {
                equipment_2 = equipment_2_1;
            }],
        execute: function() {
            SelectWeaponEvent = (function (_super) {
                __extends(SelectWeaponEvent, _super);
                function SelectWeaponEvent(props) {
                    _super.call(this, props);
                    this._weapons = this.props.weapons
                        ? this.props.weapons
                        : equipment_2.EquipmentHelper.getWeapons().map(function (w, i) {
                            return w.listName;
                        });
                    this._weapon = this._weapons[0];
                }
                SelectWeaponEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Choose a weapon."), React.createElement(DropDownInput_3.DropDownInput, {items: this._weapons, defaultValue: this._weapon, onChange: function (index) { _this.selectWeapon(index); }})), React.createElement(button_49.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                SelectWeaponEvent.prototype.selectWeapon = function (index) {
                    this._weapon = this._weapons[index];
                    this.forceUpdate();
                };
                SelectWeaponEvent.prototype.next = function () {
                    character_62.character.addEquipment(this._weapon);
                    navigator_41.Navigation.navigateToPage(pageFactory_41.PageIdentity.AfterEvent);
                };
                return SelectWeaponEvent;
            }(React.Component));
            exports_92("SelectWeaponEvent", SelectWeaponEvent);
        }
    }
});
System.register("events/selectHomelandEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory", "helpers/birthPlaces"], function(exports_93, context_93) {
    "use strict";
    var __moduleName = context_93 && context_93.id;
    var React, character_63, navigator_42, button_50, DropDownInput_4, pageFactory_42, birthPlaces_9;
    var SelectHomelandEvent;
    return {
        setters:[
            function (React_66) {
                React = React_66;
            },
            function (character_63_1) {
                character_63 = character_63_1;
            },
            function (navigator_42_1) {
                navigator_42 = navigator_42_1;
            },
            function (button_50_1) {
                button_50 = button_50_1;
            },
            function (DropDownInput_4_1) {
                DropDownInput_4 = DropDownInput_4_1;
            },
            function (pageFactory_42_1) {
                pageFactory_42 = pageFactory_42_1;
            },
            function (birthPlaces_9_1) {
                birthPlaces_9 = birthPlaces_9_1;
            }],
        execute: function() {
            SelectHomelandEvent = (function (_super) {
                __extends(SelectHomelandEvent, _super);
                function SelectHomelandEvent() {
                    var _this = this;
                    _super.call(this);
                    this._homelands = [];
                    birthPlaces_9.BirthPlacesHelper.getBirthPlaces(character_63.character.heritage).forEach(function (home) {
                        var homelands = birthPlaces_9.BirthPlacesHelper.getHomelands(home.name).forEach(function (land) {
                            _this._homelands.push(home.name + " (" + land.name + ")");
                        });
                    });
                    this._homeland = this._homelands[0];
                }
                SelectHomelandEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Choose a new homeland."), React.createElement(DropDownInput_4.DropDownInput, {items: this._homelands, defaultValue: this._homeland, onChange: function (index) { _this.selectHomeland(index); }})), React.createElement(button_50.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                SelectHomelandEvent.prototype.selectHomeland = function (index) {
                    this._homeland = this._homelands[index];
                    this.forceUpdate();
                };
                SelectHomelandEvent.prototype.next = function () {
                    var birthplace = this._homeland.substr(0, this._homeland.indexOf("("));
                    var homeland = this._homeland.substr(this._homeland.indexOf("(") + 1, this._homeland.indexOf(")"));
                    character_63.character.birthPlace = birthplace;
                    character_63.character.homeland = homeland;
                    navigator_42.Navigation.navigateToPage(pageFactory_42.PageIdentity.AfterEvent);
                };
                return SelectHomelandEvent;
            }(React.Component));
            exports_93("SelectHomelandEvent", SelectHomelandEvent);
        }
    }
});
System.register("events/payToContinueCareerEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory"], function(exports_94, context_94) {
    "use strict";
    var __moduleName = context_94 && context_94.id;
    var React, character_64, navigator_43, button_51, pageFactory_43;
    var PayToContinueCareerEvent;
    return {
        setters:[
            function (React_67) {
                React = React_67;
            },
            function (character_64_1) {
                character_64 = character_64_1;
            },
            function (navigator_43_1) {
                navigator_43 = navigator_43_1;
            },
            function (button_51_1) {
                button_51 = button_51_1;
            },
            function (pageFactory_43_1) {
                pageFactory_43 = pageFactory_43_1;
            }],
        execute: function() {
            PayToContinueCareerEvent = (function (_super) {
                __extends(PayToContinueCareerEvent, _super);
                function PayToContinueCareerEvent() {
                    _super.call(this);
                }
                PayToContinueCareerEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Do you want to pay 1 Earnings to be able to continue this career?"), React.createElement(button_51.Button, {text: "YES", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_51.Button, {text: "NO", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                };
                PayToContinueCareerEvent.prototype.onYes = function () {
                    character_64.character.earnings = Math.max(0, character_64.character.earnings - 1);
                    navigator_43.Navigation.navigateToPage(pageFactory_43.PageIdentity.AfterEvent);
                };
                PayToContinueCareerEvent.prototype.onNo = function () {
                    character_64.character.prohibitedCareers.push(character_64.character.careers[character_64.character.careers.length - 1].career);
                    navigator_43.Navigation.navigateToPage(pageFactory_43.PageIdentity.AfterEvent);
                };
                return PayToContinueCareerEvent;
            }(React.Component));
            exports_94("PayToContinueCareerEvent", PayToContinueCareerEvent);
        }
    }
});
System.register("events/selectItemTypeEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory"], function(exports_95, context_95) {
    "use strict";
    var __moduleName = context_95 && context_95.id;
    var React, character_65, navigator_44, button_52, DropDownInput_5, pageFactory_44;
    var SelectItemTypeEvent;
    return {
        setters:[
            function (React_68) {
                React = React_68;
            },
            function (character_65_1) {
                character_65 = character_65_1;
            },
            function (navigator_44_1) {
                navigator_44 = navigator_44_1;
            },
            function (button_52_1) {
                button_52 = button_52_1;
            },
            function (DropDownInput_5_1) {
                DropDownInput_5 = DropDownInput_5_1;
            },
            function (pageFactory_44_1) {
                pageFactory_44 = pageFactory_44_1;
            }],
        execute: function() {
            SelectItemTypeEvent = (function (_super) {
                __extends(SelectItemTypeEvent, _super);
                function SelectItemTypeEvent(props) {
                    _super.call(this, props);
                    this._types = [
                        "Explosives",
                        "Firearms",
                        "Hacking Devices",
                        "Remotes",
                        "Vehicles",
                    ];
                    this._type = this._types[0];
                }
                SelectItemTypeEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Choose one category of modern gear. You do not suffer increased difficulty when using items of that type."), React.createElement(DropDownInput_5.DropDownInput, {items: this._types, defaultValue: this._type, onChange: function (index) { _this.selectItemType(index); }})), React.createElement(button_52.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                SelectItemTypeEvent.prototype.selectItemType = function (index) {
                    this._type = this._types[index];
                    this.forceUpdate();
                };
                SelectItemTypeEvent.prototype.next = function () {
                    character_65.character.adolescenceEvent.effect = "You do not suffer increased difficulty when using items of the " + this._type + " type.";
                    navigator_44.Navigation.navigateToPage(pageFactory_44.PageIdentity.AfterEvent);
                };
                return SelectItemTypeEvent;
            }(React.Component));
            exports_95("SelectItemTypeEvent", SelectItemTypeEvent);
        }
    }
});
System.register("events/learnLanguageEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory", "helpers/birthPlaces"], function(exports_96, context_96) {
    "use strict";
    var __moduleName = context_96 && context_96.id;
    var React, character_66, navigator_45, button_53, DropDownInput_6, pageFactory_45, birthPlaces_10;
    var LearnLanguageEvent;
    return {
        setters:[
            function (React_69) {
                React = React_69;
            },
            function (character_66_1) {
                character_66 = character_66_1;
            },
            function (navigator_45_1) {
                navigator_45 = navigator_45_1;
            },
            function (button_53_1) {
                button_53 = button_53_1;
            },
            function (DropDownInput_6_1) {
                DropDownInput_6 = DropDownInput_6_1;
            },
            function (pageFactory_45_1) {
                pageFactory_45 = pageFactory_45_1;
            },
            function (birthPlaces_10_1) {
                birthPlaces_10 = birthPlaces_10_1;
            }],
        execute: function() {
            LearnLanguageEvent = (function (_super) {
                __extends(LearnLanguageEvent, _super);
                function LearnLanguageEvent() {
                    _super.call(this);
                    this._languages = birthPlaces_10.BirthPlacesHelper.getCustomizationLanguages();
                    this._language = this._languages[0];
                }
                LearnLanguageEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Choose a language."), React.createElement(DropDownInput_6.DropDownInput, {items: this._languages, defaultValue: this._language, onChange: function (index) { _this.selectLanguage(index); }})), React.createElement(button_53.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                LearnLanguageEvent.prototype.selectLanguage = function (index) {
                    this._language = this._languages[index];
                    this.forceUpdate();
                };
                LearnLanguageEvent.prototype.next = function () {
                    character_66.character.addLanguage(this._language);
                    navigator_45.Navigation.navigateToPage(pageFactory_45.PageIdentity.AfterEvent);
                };
                return LearnLanguageEvent;
            }(React.Component));
            exports_96("LearnLanguageEvent", LearnLanguageEvent);
        }
    }
});
System.register("events/prodigyEvent", ['react', "common/character", "common/navigator", "components/button", "components/dropDownInput", "pages/pageFactory", "helpers/socialClasses"], function(exports_97, context_97) {
    "use strict";
    var __moduleName = context_97 && context_97.id;
    var React, character_67, navigator_46, button_54, DropDownInput_7, pageFactory_46, socialClasses_10;
    var ProdigyEvent;
    return {
        setters:[
            function (React_70) {
                React = React_70;
            },
            function (character_67_1) {
                character_67 = character_67_1;
            },
            function (navigator_46_1) {
                navigator_46 = navigator_46_1;
            },
            function (button_54_1) {
                button_54 = button_54_1;
            },
            function (DropDownInput_7_1) {
                DropDownInput_7 = DropDownInput_7_1;
            },
            function (pageFactory_46_1) {
                pageFactory_46 = pageFactory_46_1;
            },
            function (socialClasses_10_1) {
                socialClasses_10 = socialClasses_10_1;
            }],
        execute: function() {
            ProdigyEvent = (function (_super) {
                __extends(ProdigyEvent, _super);
                function ProdigyEvent() {
                    _super.call(this);
                    this._options = [
                        "+1 Status",
                        "5 Assets",
                        "Media contact",
                        "Academia contact",
                        "Entertainment contact"
                    ];
                    this._choice = this._options[0];
                }
                ProdigyEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You are a prodigy and excelled at a particular skill from a very young age." + ' ' + "You could have been a talented musician or a math whiz." + ' ' + "Regardless, your talent got a lot of attention in the media before you grew out of it."), React.createElement(DropDownInput_7.DropDownInput, {items: this._options, defaultValue: this._choice, onChange: function (index) { _this.selectOption(index); }})), React.createElement(button_54.Button, {text: "DONE", className: "button-next", onClick: function () { return _this.next(); }})));
                };
                ProdigyEvent.prototype.selectOption = function (index) {
                    this._choice = this._options[index];
                    this.forceUpdate();
                };
                ProdigyEvent.prototype.next = function () {
                    if (this._choice.indexOf("Status") > -1) {
                        socialClasses_10.SocialClassesHelper.increaseSocialClass();
                    }
                    else if (this._choice.indexOf("Assets") > -1) {
                        character_67.character.assets += 5;
                    }
                    else if (this._choice.indexOf("Media contact") > -1) {
                        character_67.character.careerEvents[character_67.character.careerEvents.length - 1].effect += " You gain a " + this._choice + ".";
                    }
                    else {
                        character_67.character.careerEvents[character_67.character.careerEvents.length - 1].effect += " You gain an " + this._choice + ".";
                    }
                    navigator_46.Navigation.navigateToPage(pageFactory_46.PageIdentity.AfterEvent);
                };
                return ProdigyEvent;
            }(React.Component));
            exports_97("ProdigyEvent", ProdigyEvent);
        }
    }
});
System.register("events/jailOrDebtHaqqislamEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory"], function(exports_98, context_98) {
    "use strict";
    var __moduleName = context_98 && context_98.id;
    var React, character_68, navigator_47, button_55, pageFactory_47;
    var JailOrDebtHaqqislamEvent;
    return {
        setters:[
            function (React_71) {
                React = React_71;
            },
            function (character_68_1) {
                character_68 = character_68_1;
            },
            function (navigator_47_1) {
                navigator_47 = navigator_47_1;
            },
            function (button_55_1) {
                button_55 = button_55_1;
            },
            function (pageFactory_47_1) {
                pageFactory_47 = pageFactory_47_1;
            }],
        execute: function() {
            JailOrDebtHaqqislamEvent = (function (_super) {
                __extends(JailOrDebtHaqqislamEvent, _super);
                function JailOrDebtHaqqislamEvent() {
                    _super.call(this);
                }
                JailOrDebtHaqqislamEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Maybe you knew what you were getting into, maybe not;" + ' ' + "either way, you were caught helping a Silk smuggling ring, and the authorities were not amused.", React.createElement("br", null), React.createElement("b", null, "Accept"), " to gain a 1-10 Asset debt.", React.createElement("br", null), React.createElement("b", null, "Decline"), " to spend 1-6 years in jail and gain a criminal record."), React.createElement(button_55.Button, {text: "ACCEPT", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_55.Button, {text: "DECLINE", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                };
                JailOrDebtHaqqislamEvent.prototype.onNo = function () {
                    var years = Math.floor(Math.random() * 6) + 1;
                    character_68.character.age += years;
                    character_68.character.hasCriminalRecord = true;
                    character_68.character.careerEvents[character_68.character.careerEvents.length - 1].effect += " You spent " + years + " years in jail.";
                    navigator_47.Navigation.navigateToPage(pageFactory_47.PageIdentity.AfterEvent);
                };
                JailOrDebtHaqqislamEvent.prototype.onYes = function () {
                    var debt = Math.floor(Math.random() * 10) + 1;
                    character_68.character.careerEvents[character_68.character.careerEvents.length - 1].effect += " You have a " + debt + " Asset debt.";
                    navigator_47.Navigation.navigateToPage(pageFactory_47.PageIdentity.AfterEvent);
                };
                return JailOrDebtHaqqislamEvent;
            }(React.Component));
            exports_98("JailOrDebtHaqqislamEvent", JailOrDebtHaqqislamEvent);
        }
    }
});
System.register("events/jailOrDebtPanOEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory", "helpers/diceRoller"], function(exports_99, context_99) {
    "use strict";
    var __moduleName = context_99 && context_99.id;
    var React, character_69, navigator_48, button_56, pageFactory_48, diceRoller_10;
    var JailOrDebtPanOEvent;
    return {
        setters:[
            function (React_72) {
                React = React_72;
            },
            function (character_69_1) {
                character_69 = character_69_1;
            },
            function (navigator_48_1) {
                navigator_48 = navigator_48_1;
            },
            function (button_56_1) {
                button_56 = button_56_1;
            },
            function (pageFactory_48_1) {
                pageFactory_48 = pageFactory_48_1;
            },
            function (diceRoller_10_1) {
                diceRoller_10 = diceRoller_10_1;
            }],
        execute: function() {
            JailOrDebtPanOEvent = (function (_super) {
                __extends(JailOrDebtPanOEvent, _super);
                function JailOrDebtPanOEvent() {
                    _super.call(this);
                    this._debt = diceRoller_10.DiceRoller.rollSpecial(5, 3);
                }
                JailOrDebtPanOEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "Facing the consequences of crimes you most assuredly did commit, someone offered to make it all go away." + ' ' + "Did you let them? If so, what was the cost?" + ' ' + "You can either spend 1-6 years in jail and gain a criminal record or" + ' ' + "gain a debt of ", this._debt.hits, " assets.", React.createElement("br", null), "..."), React.createElement(button_56.Button, {text: "GO TO JAIL", className: "button-dark", onClick: function () { return _this.goToJail(); }}), React.createElement("br", null), React.createElement(button_56.Button, {text: "GAIN DEBT", className: "button-dark", onClick: function () { return _this.gainDebt(); }}))));
                };
                JailOrDebtPanOEvent.prototype.goToJail = function () {
                    var years = Math.floor(Math.random() * 6) + 1;
                    character_69.character.age += years;
                    character_69.character.hasCriminalRecord = true;
                    character_69.character.careerEvents[character_69.character.careerEvents.length - 1].effect += " You spent " + years + " years in jail.";
                    navigator_48.Navigation.navigateToPage(pageFactory_48.PageIdentity.AfterEvent);
                };
                JailOrDebtPanOEvent.prototype.gainDebt = function () {
                    var debt = Math.floor(Math.random() * 10) + 1;
                    character_69.character.careerEvents[character_69.character.careerEvents.length - 1].effect += " You have a " + debt + " Asset debt.";
                    navigator_48.Navigation.navigateToPage(pageFactory_48.PageIdentity.AfterEvent);
                };
                return JailOrDebtPanOEvent;
            }(React.Component));
            exports_99("JailOrDebtPanOEvent", JailOrDebtPanOEvent);
        }
    }
});
System.register("events/ImproveHackingOrGeistEvent", ['react', "common/character", "common/navigator", "components/button", "pages/pageFactory", "components/electiveSkillImprovement", "helpers/skills"], function(exports_100, context_100) {
    "use strict";
    var __moduleName = context_100 && context_100.id;
    var React, character_70, navigator_49, button_57, pageFactory_49, electiveSkillImprovement_6, skills_32;
    var ImproveHackingOrGeistEvent;
    return {
        setters:[
            function (React_73) {
                React = React_73;
            },
            function (character_70_1) {
                character_70 = character_70_1;
            },
            function (navigator_49_1) {
                navigator_49 = navigator_49_1;
            },
            function (button_57_1) {
                button_57 = button_57_1;
            },
            function (pageFactory_49_1) {
                pageFactory_49 = pageFactory_49_1;
            },
            function (electiveSkillImprovement_6_1) {
                electiveSkillImprovement_6 = electiveSkillImprovement_6_1;
            },
            function (skills_32_1) {
                skills_32 = skills_32_1;
            }],
        execute: function() {
            ImproveHackingOrGeistEvent = (function (_super) {
                __extends(ImproveHackingOrGeistEvent, _super);
                function ImproveHackingOrGeistEvent() {
                    _super.call(this);
                    this.state = {
                        showSkillIncrease: false
                    };
                }
                ImproveHackingOrGeistEvent.prototype.render = function () {
                    var _this = this;
                    if (!this.state.showSkillIncrease) {
                        return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "While at a caravanserai, you witnessed a serious hack." + ' ' + "What happened?" + ' ' + "Who was responsible?" + ' ' + "Either gain 1 in Hacking or increase your geist's Firewall by 2."), React.createElement(button_57.Button, {text: "HACKING", className: "button-dark", onClick: function () { return _this.onYes(); }}), React.createElement("br", null), React.createElement(button_57.Button, {text: "GEIST", className: "button-dark", onClick: function () { return _this.onNo(); }}))));
                    }
                    else {
                        return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "panel"}, React.createElement(electiveSkillImprovement_6.ElectiveSkillImprovement, {skills: [skills_32.Skill.Hacking], points: 1})), React.createElement(button_57.Button, {text: "DONE", className: "button-next", onClick: function () { return navigator_49.Navigation.navigateToPage(pageFactory_49.PageIdentity.AfterEvent); }}))));
                    }
                };
                ImproveHackingOrGeistEvent.prototype.onNo = function () {
                    character_70.character.firewallReduction -= 2;
                    navigator_49.Navigation.navigateToPage(pageFactory_49.PageIdentity.AfterEvent);
                };
                ImproveHackingOrGeistEvent.prototype.onYes = function () {
                    this.setState({ showSkillIncrease: true });
                };
                return ImproveHackingOrGeistEvent;
            }(React.Component));
            exports_100("ImproveHackingOrGeistEvent", ImproveHackingOrGeistEvent);
        }
    }
});
System.register("events/cyberneticLegOrArmEvent", ['react', "common/character", "components/button"], function(exports_101, context_101) {
    "use strict";
    var __moduleName = context_101 && context_101.id;
    var React, character_71, button_58;
    var CyberneticLegOrArmEvent;
    return {
        setters:[
            function (React_74) {
                React = React_74;
            },
            function (character_71_1) {
                character_71 = character_71_1;
            },
            function (button_58_1) {
                button_58 = button_58_1;
            }],
        execute: function() {
            CyberneticLegOrArmEvent = (function (_super) {
                __extends(CyberneticLegOrArmEvent, _super);
                function CyberneticLegOrArmEvent() {
                    _super.call(this);
                }
                CyberneticLegOrArmEvent.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "panel"}, React.createElement("div", null, "You have a cybernetic arm or leg." + ' ' + "Increase the Maintenance cost by 1 but add one bonus Momentum on successful tests made with the limb."), React.createElement(button_58.Button, {text: "ARM", className: "button-dark", onClick: function () { return _this.onArm(); }}), React.createElement("br", null), React.createElement(button_58.Button, {text: "LEG", className: "button-dark", onClick: function () { return _this.onLeg(); }}))));
                };
                CyberneticLegOrArmEvent.prototype.onArm = function () {
                    character_71.character.addEquipment("Cybernetic Arm");
                };
                CyberneticLegOrArmEvent.prototype.onLeg = function () {
                    character_71.character.addEquipment("Cybernetic Leg");
                };
                return CyberneticLegOrArmEvent;
            }(React.Component));
            exports_101("CyberneticLegOrArmEvent", CyberneticLegOrArmEvent);
        }
    }
});
System.register("pages/eventDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/skills", "helpers/attributes", "helpers/factions", "components/pageHeader", "events/increaseUntrainedSkillEvent", "events/increaseSkillEvent", "events/increaseAllSkillsEvent", "events/increaseSkippedElectiveSkillsEvent", "events/defectionEvent", "events/defectionChoiceEvent", "events/resurrectedEvent", "events/hazardTestOrFiredEvent", "events/firedEvent", "events/criminalRecordEvent", "events/hazardTestOrCriminalRecordEvent", "events/hazardTestOrReduceEarningsEvent", "events/chineseCurseEvent", "events/homelessEvent", "events/helpFriendEvent", "events/selectTalentEvent", "events/jailOrDebtEvent", "events/selectDrugEvent", "events/selectWeaponEvent", "events/selectHomelandEvent", "events/payToContinueCareerEvent", "events/reduceAttributeEvent", "events/selectItemTypeEvent", "events/learnLanguageEvent", "events/prodigyEvent", "events/jailOrDebtHaqqislamEvent", "events/jailOrDebtPanOEvent", "events/ImproveHackingOrGeistEvent", "events/cyberneticLegOrArmEvent"], function(exports_102, context_102) {
    "use strict";
    var __moduleName = context_102 && context_102.id;
    var React, character_72, navigator_50, pageFactory_50, skills_33, attributes_24, factions_24, pageHeader_22, increaseUntrainedSkillEvent_1, increaseSkillEvent_1, increaseAllSkillsEvent_1, increaseSkippedElectiveSkillsEvent_1, defectionEvent_1, defectionChoiceEvent_1, resurrectedEvent_2, hazardTestOrFiredEvent_1, firedEvent_1, criminalRecordEvent_1, hazardTestOrCriminalRecordEvent_1, hazardTestOrReduceEarningsEvent_1, chineseCurseEvent_1, homelessEvent_1, helpFriendEvent_1, selectTalentEvent_1, jailOrDebtEvent_1, selectDrugEvent_1, selectWeaponEvent_1, selectHomelandEvent_1, payToContinueCareerEvent_1, reduceAttributeEvent_2, selectItemTypeEvent_1, learnLanguageEvent_1, prodigyEvent_1, jailOrDebtHaqqislamEvent_1, jailOrDebtPanOEvent_1, ImproveHackingOrGeistEvent_1, cyberneticLegOrArmEvent_1;
    var EventDetailsPage;
    return {
        setters:[
            function (React_75) {
                React = React_75;
            },
            function (character_72_1) {
                character_72 = character_72_1;
            },
            function (navigator_50_1) {
                navigator_50 = navigator_50_1;
            },
            function (pageFactory_50_1) {
                pageFactory_50 = pageFactory_50_1;
            },
            function (skills_33_1) {
                skills_33 = skills_33_1;
            },
            function (attributes_24_1) {
                attributes_24 = attributes_24_1;
            },
            function (factions_24_1) {
                factions_24 = factions_24_1;
            },
            function (pageHeader_22_1) {
                pageHeader_22 = pageHeader_22_1;
            },
            function (increaseUntrainedSkillEvent_1_1) {
                increaseUntrainedSkillEvent_1 = increaseUntrainedSkillEvent_1_1;
            },
            function (increaseSkillEvent_1_1) {
                increaseSkillEvent_1 = increaseSkillEvent_1_1;
            },
            function (increaseAllSkillsEvent_1_1) {
                increaseAllSkillsEvent_1 = increaseAllSkillsEvent_1_1;
            },
            function (increaseSkippedElectiveSkillsEvent_1_1) {
                increaseSkippedElectiveSkillsEvent_1 = increaseSkippedElectiveSkillsEvent_1_1;
            },
            function (defectionEvent_1_1) {
                defectionEvent_1 = defectionEvent_1_1;
            },
            function (defectionChoiceEvent_1_1) {
                defectionChoiceEvent_1 = defectionChoiceEvent_1_1;
            },
            function (resurrectedEvent_2_1) {
                resurrectedEvent_2 = resurrectedEvent_2_1;
            },
            function (hazardTestOrFiredEvent_1_1) {
                hazardTestOrFiredEvent_1 = hazardTestOrFiredEvent_1_1;
            },
            function (firedEvent_1_1) {
                firedEvent_1 = firedEvent_1_1;
            },
            function (criminalRecordEvent_1_1) {
                criminalRecordEvent_1 = criminalRecordEvent_1_1;
            },
            function (hazardTestOrCriminalRecordEvent_1_1) {
                hazardTestOrCriminalRecordEvent_1 = hazardTestOrCriminalRecordEvent_1_1;
            },
            function (hazardTestOrReduceEarningsEvent_1_1) {
                hazardTestOrReduceEarningsEvent_1 = hazardTestOrReduceEarningsEvent_1_1;
            },
            function (chineseCurseEvent_1_1) {
                chineseCurseEvent_1 = chineseCurseEvent_1_1;
            },
            function (homelessEvent_1_1) {
                homelessEvent_1 = homelessEvent_1_1;
            },
            function (helpFriendEvent_1_1) {
                helpFriendEvent_1 = helpFriendEvent_1_1;
            },
            function (selectTalentEvent_1_1) {
                selectTalentEvent_1 = selectTalentEvent_1_1;
            },
            function (jailOrDebtEvent_1_1) {
                jailOrDebtEvent_1 = jailOrDebtEvent_1_1;
            },
            function (selectDrugEvent_1_1) {
                selectDrugEvent_1 = selectDrugEvent_1_1;
            },
            function (selectWeaponEvent_1_1) {
                selectWeaponEvent_1 = selectWeaponEvent_1_1;
            },
            function (selectHomelandEvent_1_1) {
                selectHomelandEvent_1 = selectHomelandEvent_1_1;
            },
            function (payToContinueCareerEvent_1_1) {
                payToContinueCareerEvent_1 = payToContinueCareerEvent_1_1;
            },
            function (reduceAttributeEvent_2_1) {
                reduceAttributeEvent_2 = reduceAttributeEvent_2_1;
            },
            function (selectItemTypeEvent_1_1) {
                selectItemTypeEvent_1 = selectItemTypeEvent_1_1;
            },
            function (learnLanguageEvent_1_1) {
                learnLanguageEvent_1 = learnLanguageEvent_1_1;
            },
            function (prodigyEvent_1_1) {
                prodigyEvent_1 = prodigyEvent_1_1;
            },
            function (jailOrDebtHaqqislamEvent_1_1) {
                jailOrDebtHaqqislamEvent_1 = jailOrDebtHaqqislamEvent_1_1;
            },
            function (jailOrDebtPanOEvent_1_1) {
                jailOrDebtPanOEvent_1 = jailOrDebtPanOEvent_1_1;
            },
            function (ImproveHackingOrGeistEvent_1_1) {
                ImproveHackingOrGeistEvent_1 = ImproveHackingOrGeistEvent_1_1;
            },
            function (cyberneticLegOrArmEvent_1_1) {
                cyberneticLegOrArmEvent_1 = cyberneticLegOrArmEvent_1_1;
            }],
        execute: function() {
            EventDetailsPage = (function (_super) {
                __extends(EventDetailsPage, _super);
                function EventDetailsPage(props) {
                    _super.call(this, props);
                }
                EventDetailsPage.prototype.render = function () {
                    var event = character_72.character.pendingEvents[0];
                    character_72.character.pendingEvents.splice(0, 1);
                    var page;
                    if (event.detailView.indexOf("IncreaseUntrained") > -1) {
                        page = (React.createElement(increaseUntrainedSkillEvent_1.IncreaseUntrainedSkillEvent, {points: 1}));
                    }
                    else if (event.detailView.indexOf("IncreaseSkippedElective") > -1) {
                        page = (React.createElement(increaseSkippedElectiveSkillsEvent_1.IncreaseSkippedElectiveSkillsEvent, {points: 1}));
                    }
                    else if (event.detailView.indexOf("IncreaseAll") > -1) {
                        var skills = [];
                        var sk = event.detailView.substr(event.detailView.indexOf("IncreaseAll") + 11);
                        var sks = sk.split("|");
                        for (var i = 0; i < sks.length; i++) {
                            skills.push(skills_33.SkillsHelper.getSkillByName(sks[i]));
                        }
                        page = (React.createElement(increaseAllSkillsEvent_1.IncreaseAllSkillsEvent, {skills: skills}));
                    }
                    else if (event.detailView.indexOf("Increase") > -1) {
                        var skills = [];
                        var sk = event.detailView.substr(event.detailView.indexOf("Increase") + 8);
                        var sks = sk.split("|");
                        for (var i = 0; i < sks.length; i++) {
                            skills.push(skills_33.SkillsHelper.getSkillByName(sks[i]));
                        }
                        page = (React.createElement(increaseSkillEvent_1.IncreaseSkillEvent, {skills: skills, points: 1}));
                    }
                    else if (event.detailView.indexOf("Defection") > -1) {
                        var faction = event.detailView.substr(event.detailView.indexOf("Defection") + 9);
                        if (faction !== "Choice") {
                            page = (React.createElement(defectionEvent_1.DefectionEvent, {faction: factions_24.FactionsHelper.getFactionByName(faction)}));
                        }
                        else {
                            page = (React.createElement(defectionChoiceEvent_1.DefectionChoiceEvent, null));
                        }
                    }
                    else if (event.detailView.indexOf("Resurrection") > -1) {
                        page = (React.createElement(resurrectedEvent_2.ResurrectedEvent, null));
                    }
                    else if (event.detailView.indexOf("HazardTestOrFired") > -1) {
                        page = (React.createElement(hazardTestOrFiredEvent_1.HazardTestOrFiredEvent, null));
                    }
                    else if (event.detailView.indexOf("Fired") > -1) {
                        page = (React.createElement(firedEvent_1.FiredEvent, null));
                    }
                    else if (event.detailView.indexOf("HazardTestOrCriminalRecord") > -1) {
                        page = (React.createElement(hazardTestOrCriminalRecordEvent_1.HazardTestOrCriminalRecordEvent, null));
                    }
                    else if (event.detailView.indexOf("CriminalRecord") > -1) {
                        page = (React.createElement(criminalRecordEvent_1.CriminalRecordEvent, null));
                    }
                    else if (event.detailView.indexOf("HazardTestOrReduceEarnings") > -1) {
                        page = (React.createElement(hazardTestOrReduceEarningsEvent_1.HazardTestOrReduceEarningsEvent, null));
                    }
                    else if (event.detailView.indexOf("ChineseCurse") > -1) {
                        page = (React.createElement(chineseCurseEvent_1.ChineseCurseEvent, null));
                    }
                    else if (event.detailView.indexOf("Homeless") > -1) {
                        page = (React.createElement(homelessEvent_1.HomelessEvent, null));
                    }
                    else if (event.detailView.indexOf("HelpFriend") > -1) {
                        page = (React.createElement(helpFriendEvent_1.HelpFriendEvent, null));
                    }
                    else if (event.detailView.indexOf("SelectTalent") > -1) {
                        if (event.detailView.length > 12) {
                            var skillName = event.detailView.substr(12);
                            var skill = skills_33.SkillsHelper.getSkillByName(skillName);
                            page = (React.createElement(selectTalentEvent_1.SelectTalentEvent, {skill: skill}));
                        }
                        else {
                            page = (React.createElement(selectTalentEvent_1.SelectTalentEvent, null));
                        }
                    }
                    else if (event.detailView.indexOf("JailOrDebtHaqqislam") > -1) {
                        page = (React.createElement(jailOrDebtHaqqislamEvent_1.JailOrDebtHaqqislamEvent, null));
                    }
                    else if (event.detailView.indexOf("JailOrDebtPanO") > -1) {
                        page = (React.createElement(jailOrDebtPanOEvent_1.JailOrDebtPanOEvent, null));
                    }
                    else if (event.detailView.indexOf("JailOrDebt") > -1) {
                        page = (React.createElement(jailOrDebtEvent_1.JailOrDebtEvent, null));
                    }
                    else if (event.detailView.indexOf("Rockstar") > -1) {
                        page = (React.createElement(selectDrugEvent_1.SelectDrugEvent, null));
                    }
                    else if (event.detailView.indexOf("HeirloomWeapon") > -1) {
                        page = (React.createElement(selectWeaponEvent_1.SelectWeaponEvent, null));
                    }
                    else if (event.detailView.indexOf("BrandLoyalist") > -1) {
                        page = (React.createElement(selectWeaponEvent_1.SelectWeaponEvent, {weapons: ["Americolt Eagle", "Ojotnik", "Teseum Hatchet"]}));
                    }
                    else if (event.detailView.indexOf("SelectHomeland") > -1) {
                        page = (React.createElement(selectHomelandEvent_1.SelectHomelandEvent, null));
                    }
                    else if (event.detailView.indexOf("PayToContinue") > -1) {
                        page = (React.createElement(payToContinueCareerEvent_1.PayToContinueCareerEvent, null));
                    }
                    else if (event.detailView.indexOf("ReduceAttributes") > -1) {
                        var points = parseInt(event.detailView.substr(16));
                        page = (React.createElement(reduceAttributeEvent_2.ReduceAttributeEvent, {points: points}));
                    }
                    else if (event.detailView.indexOf("ReduceAttribute") > -1) {
                        if (event.detailView.length > 15) {
                            var attrs = event.detailView.replace("ReduceAttribute", "").split('|');
                            var attributes_25 = [];
                            attrs.forEach(function (a) {
                                attributes_25.push(attributes_24.AttributesHelper.getAttributeByName(a));
                            });
                            page = (React.createElement(reduceAttributeEvent_2.ReduceAttributeEvent, {points: 1, attributes: attributes_25}));
                        }
                        else {
                            page = (React.createElement(reduceAttributeEvent_2.ReduceAttributeEvent, {points: 1}));
                        }
                    }
                    else if (event.detailView.indexOf("SelectItemType") > -1) {
                        page = (React.createElement(selectItemTypeEvent_1.SelectItemTypeEvent, null));
                    }
                    else if (event.detailView.indexOf("LearnLanguage") > -1) {
                        page = (React.createElement(learnLanguageEvent_1.LearnLanguageEvent, null));
                    }
                    else if (event.detailView.indexOf("Prodigy") > -1) {
                        page = (React.createElement(prodigyEvent_1.ProdigyEvent, null));
                    }
                    else if (event.detailView.indexOf("ImproveHackingOrGeist") > -1) {
                        page = (React.createElement(ImproveHackingOrGeistEvent_1.ImproveHackingOrGeistEvent, null));
                    }
                    else if (event.detailView.indexOf("CyberneticLegOrArm") > -1) {
                        page = (React.createElement(cyberneticLegOrArmEvent_1.CyberneticLegOrArmEvent, null));
                    }
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_22.PageHeader, {text: "ADOLESCENCE EVENT"}), React.createElement("div", {className: "page-text"}, event.effect), page));
                };
                EventDetailsPage.prototype.onNext = function () {
                    navigator_50.Navigation.navigateToPage(pageFactory_50.PageIdentity.Career1);
                };
                return EventDetailsPage;
            }(React.Component));
            exports_102("EventDetailsPage", EventDetailsPage);
        }
    }
});
System.register("pages/afterEventPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/button", "helpers/careers", "helpers/socialClasses"], function(exports_103, context_103) {
    "use strict";
    var __moduleName = context_103 && context_103.id;
    var React, character_73, navigator_51, pageFactory_51, button_59, careers_11, socialClasses_11;
    var AfterEventPage;
    return {
        setters:[
            function (React_76) {
                React = React_76;
            },
            function (character_73_1) {
                character_73 = character_73_1;
            },
            function (navigator_51_1) {
                navigator_51 = navigator_51_1;
            },
            function (pageFactory_51_1) {
                pageFactory_51 = pageFactory_51_1;
            },
            function (button_59_1) {
                button_59 = button_59_1;
            },
            function (careers_11_1) {
                careers_11 = careers_11_1;
            },
            function (socialClasses_11_1) {
                socialClasses_11 = socialClasses_11_1;
            }],
        execute: function() {
            AfterEventPage = (function (_super) {
                __extends(AfterEventPage, _super);
                function AfterEventPage(props) {
                    _super.call(this, props);
                    if (character_73.character.pendingEvents.length > 0) {
                        navigator_51.Navigation.navigateToPage(pageFactory_51.PageIdentity.EventDetails);
                    }
                    else if (character_73.character.careers.length === 0) {
                        navigator_51.Navigation.navigateToPage(character_73.character.getCareerPage(pageFactory_51.PageIdentity.Career1));
                    }
                }
                AfterEventPage.prototype.render = function () {
                    var _this = this;
                    // To avoid "blinking".. or whatever to call it.
                    if (character_73.character.pendingEvents.length > 0 ||
                        character_73.character.careers.length === 0) {
                        return (React.createElement("div", {className: "page"}));
                    }
                    var finish = character_73.character.careers.length >= 2
                        ? (React.createElement(button_59.Button, {className: "button-dark", text: "FINISH", onClick: function () { _this.onFinish(); }}))
                        : undefined;
                    var continueCareer = character_73.character.canExtendCareer && character_73.character.careers.length < 2
                        ? (React.createElement(button_59.Button, {className: "button-dark", text: "CONTINUE CAREER", onClick: function () { _this.onContinue(); }}))
                        : character_73.character.careers.length < 4 && character_73.character.lifePoints >= 1 && character_73.character.canExtendCareer
                            ? (React.createElement(button_59.Button, {className: "button-dark", text: "CONTINUE CAREER", lpCost: 1, onClick: function () { _this.onContinue(); }}))
                            : undefined;
                    var newCareer = character_73.character.careers.length < 2
                        ? (React.createElement(button_59.Button, {className: "button-dark", text: "NEW CAREER", onClick: function () { _this.onNew(); }}))
                        : character_73.character.careers.length < 4 && character_73.character.lifePoints >= 1
                            ? (React.createElement(button_59.Button, {className: "button-dark", text: "NEW CAREER", lpCost: 1, onClick: function () { _this.onNew(); }}))
                            : undefined;
                    return (React.createElement("div", {className: "page"}, React.createElement("div", {className: "page-text"}, "Select an option to continue."), React.createElement("div", {className: "button-container"}, finish, continueCareer, newCareer)));
                };
                AfterEventPage.prototype.onFinish = function () {
                    if (character_73.character.hassassinEvent) {
                        character_73.character.hassassinEvent = false;
                        socialClasses_11.SocialClassesHelper.increaseSocialClass();
                    }
                    if (character_73.character.hasGeist()) {
                        navigator_51.Navigation.navigateToPage(pageFactory_51.PageIdentity.Geist);
                    }
                    else {
                        navigator_51.Navigation.navigateToPage(pageFactory_51.PageIdentity.FinalTweaks);
                    }
                };
                AfterEventPage.prototype.onContinue = function () {
                    if (character_73.character.careers.length >= 2) {
                        character_73.character.lifePoints--;
                    }
                    var career = character_73.character.careers[character_73.character.careers.length - 1].career;
                    var age = Math.floor(Math.random() * 6) + 1;
                    character_73.character.age += age;
                    character_73.character.careers.push(new character_73.CharacterCareer(career, age));
                    careers_11.CareersHelper.applyCareer(career);
                    navigator_51.Navigation.navigateToPage(character_73.character.getCareerPage(pageFactory_51.PageIdentity.CareerDetails1));
                };
                AfterEventPage.prototype.onNew = function () {
                    navigator_51.Navigation.navigateToPage(character_73.character.getCareerPage(pageFactory_51.PageIdentity.Career1));
                };
                return AfterEventPage;
            }(React.Component));
            exports_103("AfterEventPage", AfterEventPage);
        }
    }
});
System.register("components/careerSelection", ['react', "common/character", "helpers/careers", "helpers/attributes", "helpers/skills", "components/button"], function(exports_104, context_104) {
    "use strict";
    var __moduleName = context_104 && context_104.id;
    var React, character_74, careers_12, attributes_26, skills_34, button_60;
    var CareerSelection;
    return {
        setters:[
            function (React_77) {
                React = React_77;
            },
            function (character_74_1) {
                character_74 = character_74_1;
            },
            function (careers_12_1) {
                careers_12 = careers_12_1;
            },
            function (attributes_26_1) {
                attributes_26 = attributes_26_1;
            },
            function (skills_34_1) {
                skills_34 = skills_34_1;
            },
            function (button_60_1) {
                button_60 = button_60_1;
            }],
        execute: function() {
            CareerSelection = (function (_super) {
                __extends(CareerSelection, _super);
                function CareerSelection(props) {
                    _super.call(this, props);
                }
                CareerSelection.prototype.render = function () {
                    var _this = this;
                    var careers = this.props.careers.map(function (c, i) {
                        var career = careers_12.CareersHelper.getCareer(c);
                        var attributes = character_74.character.careers.length === 0
                            ? career.attributes.map(function (attr, i) {
                                if (attr > 0) {
                                    return (React.createElement("div", {key: i}, "+", attr, " ", attributes_26.AttributesHelper.getAttributeName(i).substr(0, 3)));
                                }
                                else {
                                    return undefined;
                                }
                            })
                            : undefined;
                        var mandatory = career.mandatory.map(function (m, i) {
                            return (React.createElement("div", {key: i}, skills_34.SkillsHelper.getSkillName(m)));
                        });
                        var elective = career.elective.map(function (e, i) {
                            return (React.createElement("div", {key: i}, skills_34.SkillsHelper.getSkillName(e)));
                        });
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, career.name), React.createElement("td", null, attributes), React.createElement("td", null, mandatory), React.createElement("td", null, elective), React.createElement("td", null, React.createElement(button_60.Button, {className: "button-small", text: "Select", onClick: function () { _this.props.onSelection(c, _this.props.isHazard); }}))));
                    });
                    var attributesHeader = character_74.character.careers.length === 0
                        ? (React.createElement("h3", null, "Attributes"))
                        : undefined;
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-text"}, "SELECT CAREER"), React.createElement("br", null), React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null, attributesHeader), React.createElement("td", null, React.createElement("h3", null, "Mandatory Skills")), React.createElement("td", null, React.createElement("h3", null, "Elective Skills")), React.createElement("td", null))), React.createElement("tbody", null, careers)), React.createElement(button_60.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                return CareerSelection;
            }(React.Component));
            exports_104("CareerSelection", CareerSelection);
        }
    }
});
System.register("components/hazardAttempt", ['react', "common/character", "helpers/careers", "helpers/skills", "components/button"], function(exports_105, context_105) {
    "use strict";
    var __moduleName = context_105 && context_105.id;
    var React, character_75, careers_13, skills_35, button_61;
    var HazardAttempt;
    return {
        setters:[
            function (React_78) {
                React = React_78;
            },
            function (character_75_1) {
                character_75 = character_75_1;
            },
            function (careers_13_1) {
                careers_13 = careers_13_1;
            },
            function (skills_35_1) {
                skills_35 = skills_35_1;
            },
            function (button_61_1) {
                button_61 = button_61_1;
            }],
        execute: function() {
            HazardAttempt = (function (_super) {
                __extends(HazardAttempt, _super);
                function HazardAttempt(props) {
                    _super.call(this, props);
                    var career = careers_13.CareersHelper.getCareer(this.props.career);
                    this._maxDifficulty = this._difficulty = careers_13.CareersHelper.getHazardDifficulty(this.props.career) - character_75.character.hazardDecrease;
                    if ((career.name.indexOf("Hassassin") > -1 && character_75.character.hassassinEvent === false) ||
                        (career.isCriminal && character_75.character.hasCriminalRecord)) {
                        this._maxDifficulty--;
                        this._difficulty--;
                    }
                    if (this._difficulty < 0) {
                        this._difficulty = 0;
                    }
                    if (this._maxDifficulty < 0) {
                        this._maxDifficulty = 0;
                    }
                    this._lifePointsSpent = 0;
                }
                HazardAttempt.prototype.render = function () {
                    var _this = this;
                    var career = careers_13.CareersHelper.getCareer(this.props.career);
                    var dec = this._difficulty > 0 && character_75.character.lifePoints >= 1
                        ? (React.createElement("img", {style: { float: "left" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecrease(); }}))
                        : undefined;
                    var inc = this._difficulty < this._maxDifficulty
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncrease(); }}))
                        : undefined;
                    var skills = career.mandatory.map(function (skill, i) {
                        return (React.createElement("div", {className: "skill-container", key: i}, React.createElement(button_61.Button, {text: "Select", className: "button-small align-right", onClick: function () { _this.props.onConfirm(_this.props.career, skill, _this._difficulty); }}), React.createElement("div", {className: "skill-name"}, skills_35.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise ", character_75.character.skills[skill].expertise), React.createElement("div", {className: "skill-focus"}, "Focus ", character_75.character.skills[skill].focus)));
                    });
                    return (React.createElement("div", null, React.createElement("div", {className: "header-text"}, "HAZARD ATTEMPT"), React.createElement("div", {className: "panel"}, React.createElement("div", null, "You are attempting to hazard your way into the ", React.createElement("b", null, career.name), " career." + ' ' + "The difficulty to succeed with your hazard attempt is ", React.createElement("b", null, this._difficulty), ".", React.createElement("br", null), React.createElement("br", null), "You can spend Life Points to lower the difficulty. If you cancel, any spent Life Points" + ' ' + "will be refunded."), React.createElement("div", null, React.createElement("div", {className: "attribute-container"}, "Difficulty"), React.createElement("div", {className: "attribute-value"}, dec, this._difficulty, inc)), React.createElement("br", null), React.createElement("div", null, "Select a skill to use in your attempt."), skills), React.createElement(button_61.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.onCancel(); }})));
                };
                HazardAttempt.prototype.onDecrease = function () {
                    this._difficulty--;
                    character_75.character.lifePoints--;
                    this._lifePointsSpent++;
                    this.forceUpdate();
                };
                HazardAttempt.prototype.onIncrease = function () {
                    this._difficulty++;
                    character_75.character.lifePoints++;
                    this._lifePointsSpent--;
                    this.forceUpdate();
                };
                HazardAttempt.prototype.onCancel = function () {
                    character_75.character.lifePoints += this._lifePointsSpent;
                    this.props.onCancel();
                };
                return HazardAttempt;
            }(React.Component));
            exports_105("HazardAttempt", HazardAttempt);
        }
    }
});
System.register("pages/careerPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/dialog", "components/careerSelection", "components/factionSelection", "components/hazardAttempt", "helpers/careers", "helpers/factions", "helpers/skills", "helpers/diceRoller", "helpers/socialClasses"], function(exports_106, context_106) {
    "use strict";
    var __moduleName = context_106 && context_106.id;
    var React, character_76, navigator_52, pageFactory_52, pageHeader_23, button_62, dialog_15, careerSelection_1, factionSelection_3, hazardAttempt_1, careers_14, factions_25, skills_36, diceRoller_11, socialClasses_12;
    var CareerPage;
    return {
        setters:[
            function (React_79) {
                React = React_79;
            },
            function (character_76_1) {
                character_76 = character_76_1;
            },
            function (navigator_52_1) {
                navigator_52 = navigator_52_1;
            },
            function (pageFactory_52_1) {
                pageFactory_52 = pageFactory_52_1;
            },
            function (pageHeader_23_1) {
                pageHeader_23 = pageHeader_23_1;
            },
            function (button_62_1) {
                button_62 = button_62_1;
            },
            function (dialog_15_1) {
                dialog_15 = dialog_15_1;
            },
            function (careerSelection_1_1) {
                careerSelection_1 = careerSelection_1_1;
            },
            function (factionSelection_3_1) {
                factionSelection_3 = factionSelection_3_1;
            },
            function (hazardAttempt_1_1) {
                hazardAttempt_1 = hazardAttempt_1_1;
            },
            function (careers_14_1) {
                careers_14 = careers_14_1;
            },
            function (factions_25_1) {
                factions_25 = factions_25_1;
            },
            function (skills_36_1) {
                skills_36 = skills_36_1;
            },
            function (diceRoller_11_1) {
                diceRoller_11 = diceRoller_11_1;
            },
            function (socialClasses_12_1) {
                socialClasses_12 = socialClasses_12_1;
            }],
        execute: function() {
            CareerPage = (function (_super) {
                __extends(CareerPage, _super);
                function CareerPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    };
                    if (character_76.character.isAlMustaslaha()) {
                        character_76.character.socialClass = socialClasses_12.SocialClass.Middle;
                    }
                    if (character_76.character.firstCareer !== undefined) {
                        this.selectCareer(character_76.character.firstCareer, 0, true);
                        navigator_52.Navigation.navigateToPage(character_76.character.getCareerPage(pageFactory_52.PageIdentity.CareerDetails1));
                    }
                    character_76.character.canExtendCareer = true;
                }
                CareerPage.prototype.render = function () {
                    var _this = this;
                    if (character_76.character.firstCareer !== undefined) {
                        return (React.createElement("div", {className: "page"}));
                    }
                    var numCareers = character_76.character.careers.length;
                    var rollBasic = undefined;
                    var selectBasic = undefined;
                    var rollFaction = undefined;
                    var hazard = undefined;
                    if (numCareers < 2) {
                        rollBasic = !character_76.character.isOptional
                            ? (React.createElement(button_62.Button, {text: "ROLL BASIC CAREER", className: "button-dark", onClick: function () { _this.rollGeneralCareer(); }}))
                            : undefined;
                        selectBasic = (React.createElement(button_62.Button, {text: "SELECT BASIC CAREER", lpCost: 1, className: "button-dark", onClick: function () { _this.showGeneralCareers(); }}));
                        var factionRollCost = character_76.character.freeFactionCareerRoll > 0 ? 0 : 1;
                        rollFaction = (React.createElement(button_62.Button, {text: "ROLL FACTION CAREER", lpCost: factionRollCost, className: "button-dark", onClick: function () { _this.rollFactionCareer(); }}));
                        hazard = (React.createElement(button_62.Button, {text: "HAZARD CAREER", className: "button-dark", onClick: function () { _this.showHazardCareers(); }}));
                    }
                    else {
                        rollBasic = !character_76.character.isOptional && character_76.character.lifePoints >= 1
                            ? (React.createElement(button_62.Button, {text: "ROLL BASIC CAREER", lpCost: 1, className: "button-dark", onClick: function () { _this.rollGeneralCareer(); }}))
                            : undefined;
                        selectBasic = (React.createElement(button_62.Button, {text: "SELECT BASIC CAREER", lpCost: 2, className: "button-dark", onClick: function () { _this.showGeneralCareers(); }}));
                        var factionRollCost = character_76.character.freeFactionCareerRoll > 0 ? 1 : 2;
                        rollFaction = (React.createElement(button_62.Button, {text: "ROLL FACTION CAREER", lpCost: factionRollCost, className: "button-dark", onClick: function () { _this.rollFactionCareer(); }}));
                        hazard = (React.createElement(button_62.Button, {text: "HAZARD CAREER", lpCost: 1, className: "button-dark", onClick: function () { _this.showHazardCareers(); }}));
                    }
                    if (character_76.character.isDogBlooded()) {
                        rollBasic = undefined;
                        selectBasic = undefined;
                        rollFaction = numCareers < 2
                            ? (React.createElement(button_62.Button, {text: "ROLL CAREER", lpCost: 0, className: "button-dark", onClick: function () { _this.rollFactionCareer(); }}))
                            : (React.createElement(button_62.Button, {text: "ROLL CAREER", lpCost: 0, className: "button-dark", onClick: function () { _this.rollFactionCareer(); }}));
                    }
                    var changeFaction = (React.createElement(button_62.Button, {text: "CHANGE FACTION", lpCost: 1, className: "button-dark", onClick: function () { _this.showFactions(); }}));
                    var unemployed = !character_76.character.isDogBlooded()
                        ? character_76.character.careers.length < 2
                            ? (React.createElement(button_62.Button, {text: "UNEMPLOYED (+1 LP)", className: "button-dark", lpCost: -1, onClick: function () { _this.selectCareer(careers_14.Career.Unemployed, -1); }}))
                            : (React.createElement(button_62.Button, {text: "UNEMPLOYED", className: "button-dark", onClick: function () { _this.selectCareer(careers_14.Career.Unemployed); }}))
                        : character_76.character.careers.length < 2
                            ? (React.createElement(button_62.Button, {text: "SCAVENGER (+1 LP)", className: "button-dark", lpCost: -1, onClick: function () { _this.selectCareer(careers_14.Career.Scavenger, -1); }}))
                            : (React.createElement(button_62.Button, {text: "SCAVENGER", className: "button-dark", onClick: function () { _this.selectCareer(careers_14.Career.Scavenger); }}));
                    var free = character_76.character.freeCareers.length > 0
                        ? React.createElement(button_62.Button, {text: "FREE CAREERS (" + character_76.character.freeCareers.length + ")", className: "button-dark", onClick: function () { _this.showFreeCareers(); }})
                        : undefined;
                    var continueCareer = character_76.character.careers.length >= 1 && this.canContinueCareer()
                        ? character_76.character.careers.length >= 2
                            ? React.createElement(button_62.Button, {text: "CONTINUE PREVIOUS", lpCost: 1, className: "button-dark", onClick: function () { return _this.continueCareer(); }})
                            : React.createElement(button_62.Button, {text: "CONTINUE PREVIOUS", className: "button-dark", onClick: function () { return _this.continueCareer(); }})
                        : undefined;
                    var finish = character_76.character.careers.length >= 2
                        ? character_76.character.hasGeist()
                            ? React.createElement(button_62.Button, {text: "FINISH", className: "button-dark", onClick: function () { return navigator_52.Navigation.navigateToPage(pageFactory_52.PageIdentity.Geist); }})
                            : React.createElement(button_62.Button, {text: "FINISH", className: "button-dark", onClick: function () { return navigator_52.Navigation.navigateToPage(pageFactory_52.PageIdentity.Finish); }})
                        : undefined;
                    var rollAnyDesc = this.state.showFactionSelection || this._anyFactionCareer
                        ? " You may select a faction to roll on that faction's career table. There is a slight chance that you also defect to the selected faction."
                        : undefined;
                    var content = !this.state.showGeneralSelection && !this.state.showHazardSelection &&
                        !this.state.showFactionSelection && !this.state.showHazardAttempt &&
                        !this.state.showFreeCareers ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "What career (or careers) do you decide to pursue? Are you doing something that you love? Are you trapped in a job that you hate?" + ' ' + "What are you good at and what are you learning out among the planets? Are you aggressively seeking promotions or happy where you are?" + ' ' + "You will complete a minimum of two career phases, and you can spend a Life Point for each additional career phase to a maximum of four career phases."), React.createElement("div", {className: "button-container"}, free, continueCareer, finish, rollBasic, selectBasic, rollFaction, hazard, unemployed, changeFaction)))
                        : this.state.showHazardSelection ?
                            (React.createElement(careerSelection_1.CareerSelection, {careers: careers_14.CareersHelper.getHazardableCareers(), isHazard: true, onSelection: function (career, isHazard) { _this.selectHazardCareer(career); }, onCancel: function () { _this.hideHazardCareers(); }}))
                            : this.state.showFactionSelection ?
                                (React.createElement("div", null, React.createElement("div", {className: "page-text"}, rollAnyDesc), React.createElement(factionSelection_3.FactionSelection, {showOwnFaction: true, showSkills: false, showCancel: !this._anyFactionCareer, onSelection: function (faction) { _this.selectFaction(faction); }, onCancel: function () { _this.hideFactions(); }})))
                                : this.state.showFreeCareers ?
                                    (React.createElement(careerSelection_1.CareerSelection, {careers: character_76.character.freeCareers, onSelection: function (career) { _this.selectCareer(career, character_76.character.careers.length < 2 ? 0 : 1, true); }, onCancel: function () { _this.hideGeneralCareers(); }}))
                                    : this.state.showHazardAttempt ?
                                        (React.createElement(hazardAttempt_1.HazardAttempt, {career: this._hazardCareer, onConfirm: function (career, skill, diff) { return _this.onHazardAttempt(career, skill, diff); }, onCancel: function () { return _this.onCancelHazardAttempt(); }}))
                                        : (React.createElement(careerSelection_1.CareerSelection, {careers: careers_14.CareersHelper.getBasicCareers(), onSelection: function (career) { _this.selectCareer(career, character_76.character.careers.length < 2 ? 1 : 2, false); }, onCancel: function () { _this.hideGeneralCareers(); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_23.PageHeader, {text: "CAREER"}), content));
                };
                CareerPage.prototype.rollGeneralCareer = function () {
                    var _this = this;
                    var career = careers_14.CareersHelper.generateBasicCareer();
                    if (career !== careers_14.Career.Any) {
                        if (character_76.character.careerRerolls > 0) {
                            dialog_15.Dialog.showYesNo("You rolled " + careers_14.CareersHelper.getCareer(career).name + ". Do you want to keep it?", function () {
                                _this.selectCareer(career, character_76.character.careers.length < 2 ? 0 : 1);
                            }, function () {
                                character_76.character.careerRerolls--;
                                _this.rollGeneralCareer();
                            });
                        }
                        else {
                            this.selectCareer(career, character_76.character.careers.length < 2 ? 0 : 1);
                        }
                    }
                    else {
                        this.handleAnyCareer();
                    }
                };
                CareerPage.prototype.rollFactionCareer = function (faction) {
                    var career = careers_14.CareersHelper.generateFactionCareer(faction ? faction : character_76.character.faction);
                    var cost = character_76.character.careers.length < 2 ? 1 : 2;
                    if (character_76.character.freeFactionCareerRoll > 0) {
                        cost = Math.max(0, cost - 1);
                        character_76.character.freeFactionCareerRoll = Math.max(0, character_76.character.freeFactionCareerRoll - 1);
                    }
                    if (this._anyFactionCareer) {
                        cost = 0;
                    }
                    character_76.character.lifePoints -= cost;
                    if (career !== careers_14.Career.Any) {
                        this.selectCareer(career);
                    }
                    else {
                        this.handleAnyCareer();
                    }
                };
                CareerPage.prototype.handleAnyCareer = function () {
                    this._anyFactionCareer = true;
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: true,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.showGeneralCareers = function () {
                    this.setState({
                        showGeneralSelection: true,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.hideGeneralCareers = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.showHazardCareers = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: true,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.hideHazardCareers = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.showFactions = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: true,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.hideFactions = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.showFreeCareers = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: true
                    });
                };
                CareerPage.prototype.selectFaction = function (faction) {
                    if (!this._anyFactionCareer) {
                        character_76.character.heritage = character_76.character.faction;
                        character_76.character.hasDefected = true;
                        character_76.character.faction = faction;
                        character_76.character.lifePoints--;
                        dialog_15.Dialog.show("You have defected to " + factions_25.FactionsHelper.getFaction(faction).name + "!");
                        this.hideFactions();
                    }
                    else {
                        var roll = Math.floor(Math.random() * 20) + 1;
                        if (roll === 1 && faction !== character_76.character.faction) {
                            character_76.character.heritage = character_76.character.faction;
                            character_76.character.hasDefected = true;
                            character_76.character.faction = faction;
                            dialog_15.Dialog.show("You have defected to " + factions_25.FactionsHelper.getFaction(faction).name + "!");
                        }
                        this.rollFactionCareer(faction);
                    }
                };
                CareerPage.prototype.selectHazardCareer = function (career) {
                    this._hazardCareer = career;
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: false,
                        showFactionSelection: false,
                        showHazardAttempt: true,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.onCancelHazardAttempt = function () {
                    this.setState({
                        showGeneralSelection: false,
                        showHazardSelection: true,
                        showFactionSelection: false,
                        showHazardAttempt: false,
                        showFreeCareers: false
                    });
                };
                CareerPage.prototype.onHazardAttempt = function (career, skill, difficulty) {
                    var targetValue = character_76.character.skills[skill].expertise + character_76.character.attributes[skills_36.SkillsHelper.getAttributeForSkill(skill)].value;
                    var roll = diceRoller_11.DiceRoller.roll(targetValue, character_76.character.skills[skill].focus, difficulty);
                    if (character_76.character.careers.length >= 2) {
                        character_76.character.lifePoints--;
                    }
                    if (difficulty === 0 || (roll.successes > 0 && !roll.hasRepercusions)) {
                        character_76.character.hazardDecrease = 0;
                        if (career === careers_14.Career.HassassinFidayHaqqislam || career === careers_14.Career.HassassinExemplar) {
                            character_76.character.hassassinEvent = false;
                        }
                        this.selectCareer(career, 0);
                    }
                    else {
                        character_76.character.hazardDecrease = 0;
                        navigator_52.Navigation.navigateToPage(character_76.character.getCareerPage(pageFactory_52.PageIdentity.HazardFail1));
                    }
                };
                CareerPage.prototype.continueCareer = function () {
                    if (character_76.character.careers.length >= 2) {
                        character_76.character.lifePoints--;
                    }
                    var career = character_76.character.careers[character_76.character.careers.length - 1].career;
                    var age = Math.floor(Math.random() * 6) + 1;
                    character_76.character.age += age;
                    character_76.character.careers.push(new character_76.CharacterCareer(career, age));
                    careers_14.CareersHelper.applyCareer(career);
                    navigator_52.Navigation.navigateToPage(character_76.character.getCareerPage(pageFactory_52.PageIdentity.CareerDetails1));
                };
                CareerPage.prototype.selectCareer = function (career, points, isFree) {
                    if (points) {
                        character_76.character.lifePoints -= points;
                    }
                    if (isFree) {
                        character_76.character.freeCareers.splice(character_76.character.freeCareers.indexOf(career), 1);
                    }
                    var age = Math.floor(Math.random() * 6) + 2;
                    character_76.character.age += age;
                    character_76.character.careers.push(new character_76.CharacterCareer(career, age));
                    careers_14.CareersHelper.applyCareer(career);
                    if (character_76.character.hazardDecrease > 0) {
                        character_76.character.hazardDecrease = 0;
                        character_76.character.earnings++;
                    }
                    navigator_52.Navigation.navigateToPage(character_76.character.getCareerPage(pageFactory_52.PageIdentity.CareerDetails1));
                };
                CareerPage.prototype.canContinueCareer = function () {
                    var lastCareer = character_76.character.careers[character_76.character.careers.length - 1].career;
                    return character_76.character.prohibitedCareers.indexOf(lastCareer) === -1;
                };
                return CareerPage;
            }(React.Component));
            exports_106("CareerPage", CareerPage);
        }
    }
});
System.register("pages/hazardFailPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "helpers/careers"], function(exports_107, context_107) {
    "use strict";
    var __moduleName = context_107 && context_107.id;
    var React, character_77, navigator_53, pageFactory_53, pageHeader_24, button_63, careers_15;
    var HazardFailPage;
    return {
        setters:[
            function (React_80) {
                React = React_80;
            },
            function (character_77_1) {
                character_77 = character_77_1;
            },
            function (navigator_53_1) {
                navigator_53 = navigator_53_1;
            },
            function (pageFactory_53_1) {
                pageFactory_53 = pageFactory_53_1;
            },
            function (pageHeader_24_1) {
                pageHeader_24 = pageHeader_24_1;
            },
            function (button_63_1) {
                button_63 = button_63_1;
            },
            function (careers_15_1) {
                careers_15 = careers_15_1;
            }],
        execute: function() {
            HazardFailPage = (function (_super) {
                __extends(HazardFailPage, _super);
                function HazardFailPage(props) {
                    _super.call(this, props);
                }
                HazardFailPage.prototype.render = function () {
                    var _this = this;
                    var repeat = character_77.character.careers.length > 0
                        ? (React.createElement(button_63.Button, {text: "REPEAT CAREER", className: "button-dark", onClick: function () { _this.repeatCareer(); }}))
                        : undefined;
                    var unemployed = character_77.character.careers.length < 2
                        ? (React.createElement(button_63.Button, {text: "UNEMPLOYED (+1 LP)", className: "button-dark", onClick: function () { _this.selectCareer(careers_15.Career.Unemployed, -1); }}))
                        : (React.createElement(button_63.Button, {text: "UNEMPLOYED", className: "button-dark", onClick: function () { _this.selectCareer(careers_15.Career.Unemployed); }}));
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_24.PageHeader, {text: "CAREER"}), React.createElement("div", {className: "page-text"}, "Your hazard attempt failed!", React.createElement("br", null), React.createElement("br", null), "Select one of the following options to proceed:"), React.createElement("div", {className: "button-container"}, repeat, unemployed)));
                };
                HazardFailPage.prototype.repeatCareer = function () {
                    this.selectCareer(character_77.character.careers[character_77.character.careers.length - 1].career, 0);
                };
                HazardFailPage.prototype.selectCareer = function (career, points, isFree) {
                    if (points) {
                        character_77.character.lifePoints -= points;
                    }
                    if (isFree) {
                        character_77.character.freeCareers.splice(character_77.character.freeCareers.indexOf(career), 1);
                    }
                    var age = Math.floor(Math.random() * 6) + 1;
                    character_77.character.age += age;
                    character_77.character.careers.push(new character_77.CharacterCareer(career, age));
                    navigator_53.Navigation.navigateToPage(character_77.character.getCareerPage(pageFactory_53.PageIdentity.CareerDetails1));
                };
                return HazardFailPage;
            }(React.Component));
            exports_107("HazardFailPage", HazardFailPage);
        }
    }
});
System.register("pages/careerDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/careers", "helpers/attributes", "components/pageHeader", "components/attribute", "components/skillImprovement", "components/button", "components/checkBox", "components/electiveSkillImprovement", "components/signatureSkillSelection", "components/talentList", "components/equipmentList", "components/dialog", "helpers/hassassinOrders", "helpers/militaryOrders", "helpers/socialClasses", "helpers/equipment"], function(exports_108, context_108) {
    "use strict";
    var __moduleName = context_108 && context_108.id;
    var React, character_78, navigator_54, pageFactory_54, careers_16, attributes_27, pageHeader_25, attribute_6, skillImprovement_6, button_64, checkBox_4, electiveSkillImprovement_7, signatureSkillSelection_2, talentList_2, equipmentList_2, dialog_16, hassassinOrders_1, militaryOrders_1, socialClasses_13, equipment_3;
    var CareerDetailsPage;
    return {
        setters:[
            function (React_81) {
                React = React_81;
            },
            function (character_78_1) {
                character_78 = character_78_1;
            },
            function (navigator_54_1) {
                navigator_54 = navigator_54_1;
            },
            function (pageFactory_54_1) {
                pageFactory_54 = pageFactory_54_1;
            },
            function (careers_16_1) {
                careers_16 = careers_16_1;
            },
            function (attributes_27_1) {
                attributes_27 = attributes_27_1;
            },
            function (pageHeader_25_1) {
                pageHeader_25 = pageHeader_25_1;
            },
            function (attribute_6_1) {
                attribute_6 = attribute_6_1;
            },
            function (skillImprovement_6_1) {
                skillImprovement_6 = skillImprovement_6_1;
            },
            function (button_64_1) {
                button_64 = button_64_1;
            },
            function (checkBox_4_1) {
                checkBox_4 = checkBox_4_1;
            },
            function (electiveSkillImprovement_7_1) {
                electiveSkillImprovement_7 = electiveSkillImprovement_7_1;
            },
            function (signatureSkillSelection_2_1) {
                signatureSkillSelection_2 = signatureSkillSelection_2_1;
            },
            function (talentList_2_1) {
                talentList_2 = talentList_2_1;
            },
            function (equipmentList_2_1) {
                equipmentList_2 = equipmentList_2_1;
            },
            function (dialog_16_1) {
                dialog_16 = dialog_16_1;
            },
            function (hassassinOrders_1_1) {
                hassassinOrders_1 = hassassinOrders_1_1;
            },
            function (militaryOrders_1_1) {
                militaryOrders_1 = militaryOrders_1_1;
            },
            function (socialClasses_13_1) {
                socialClasses_13 = socialClasses_13_1;
            },
            function (equipment_3_1) {
                equipment_3 = equipment_3_1;
            }],
        execute: function() {
            CareerDetailsPage = (function (_super) {
                __extends(CareerDetailsPage, _super);
                function CareerDetailsPage(props) {
                    var _this = this;
                    _super.call(this, props);
                    if (character_78.character.hazardDecrease > 0) {
                        character_78.character.hazardDecrease = 0;
                        character_78.character.earnings++;
                    }
                    var currentCareer = character_78.character.careers[character_78.character.careers.length - 1].career;
                    var career = careers_16.CareersHelper.getCareer(currentCareer);
                    this._signatureSkills = [];
                    career.mandatory.forEach(function (skill) {
                        if (_this._signatureSkills.indexOf(skill) === -1 && !character_78.character.skills[skill].isSignature) {
                            _this._signatureSkills.push(skill);
                        }
                    });
                    career.elective.forEach(function (skill) {
                        if (_this._signatureSkills.indexOf(skill) === -1 && !character_78.character.skills[skill].isSignature) {
                            _this._signatureSkills.push(skill);
                        }
                    });
                    this._selectedEquipment = [];
                    var n = 0;
                    career.equipment.forEach(function (eq) {
                        if (eq.indexOf('|') > -1) {
                            var e = eq.split('|');
                            _this._selectedEquipment[n] = e[0];
                            n++;
                        }
                    });
                    var careerCounter = 0;
                    character_78.character.careers.forEach(function (c) {
                        if (c.career === currentCareer) {
                            careerCounter++;
                        }
                    });
                    this._showEquipment = careerCounter === 1;
                    this._mandatoryDone = false;
                    this._electiveDone = false;
                    this._isHassassin = currentCareer === careers_16.Career.HassassinFidayHaqqislam || currentCareer === careers_16.Career.HassassinExemplar;
                    if (this._isHassassin) {
                        this._order = character_78.character.hassassinOrder >= 0 ? character_78.character.hassassinOrder : hassassinOrders_1.HassassinOrdersHelper.generateOrder();
                        this._selectedOrder = this._order;
                    }
                    this._isMilitaryOrder = currentCareer === careers_16.Career.Knight || currentCareer === careers_16.Career.OrderSergeant;
                    if (this._isMilitaryOrder) {
                        this._order = character_78.character.militaryOrder >= 0 ? character_78.character.militaryOrder : militaryOrders_1.MilitaryOrdersHelper.generateOrder();
                        this._selectedOrder = this._order;
                    }
                    if (character_78.character.hassassinEvent) {
                        if (character_78.character.careers.length >= 2) {
                            var lastCareer = character_78.character.careers[character_78.character.careers.length - 2].career;
                            if (lastCareer === currentCareer) {
                                character_78.character.hassassinEvent = false;
                                socialClasses_13.SocialClassesHelper.increaseSocialClass();
                            }
                        }
                    }
                    // Reset this...
                    character_78.character.firstCareer = undefined;
                }
                CareerDetailsPage.prototype.render = function () {
                    var _this = this;
                    var career = careers_16.CareersHelper.getCareer(character_78.character.careers[character_78.character.careers.length - 1].career);
                    var attributes = character_78.character.careers.length === 1
                        ? career.attributes.map(function (attr, i) {
                            return React.createElement(attribute_6.AttributeView, {key: i, name: attributes_27.AttributesHelper.getAttributeName(i), points: attr, value: character_78.character.attributes[i].value});
                        })
                        : undefined;
                    var attributesContainer = character_78.character.careers.length === 1
                        ? (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTES"), attributes))
                        : undefined;
                    var mandatory = career.mandatory.map(function (m, i) {
                        return (React.createElement(skillImprovement_6.SkillImprovement, {key: i, skill: m, onDone: function (done) { _this._mandatoryDone = done; _this.onUpdate(); }}));
                    });
                    var signature = character_78.character.careers.length < 2
                        ? (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SIGNATURE SKILL"), React.createElement(signatureSkillSelection_2.SignatureSkillSelection, {skills: this._signatureSkills, onSelection: function (skill) { return _this.onSignatureSkillSelected(skill); }})))
                        : undefined;
                    var orders = this.drawOrderSelection();
                    var elective = this._isHassassin
                        ? hassassinOrders_1.HassassinOrdersHelper.getOrder(this._selectedOrder).electiveSkills
                        : this._isMilitaryOrder
                            ? militaryOrders_1.MilitaryOrdersHelper.getOrder(this._selectedOrder).electiveSkills
                            : career.elective;
                    var equipment = this.drawEquipment(career.equipment);
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_25.PageHeader, {text: "CAREER"}), React.createElement("div", {className: "header-text"}, career.name), orders, attributesContainer, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "MANDATORY SKILLS"), mandatory), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ELECTIVE SKILLS"), React.createElement(electiveSkillImprovement_7.ElectiveSkillImprovement, {skills: elective, points: 2, onDone: function (done) { _this._electiveDone = done; _this.onUpdate(); }})), signature, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "TALENT"), React.createElement(talentList_2.TalentList, {skills: career.mandatory.concat(career.elective), onSelection: function (talent) { return _this.onTalentSelected(talent); }})), equipment, React.createElement(button_64.Button, {text: "CAREER EVENT", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                CareerDetailsPage.prototype.onUpdate = function () {
                    this.forceUpdate();
                };
                CareerDetailsPage.prototype.onSignatureSkillSelected = function (skill) {
                    this._selectedSignatureSkill = skill;
                    this.forceUpdate();
                };
                CareerDetailsPage.prototype.onTalentSelected = function (talent) {
                    this._selectedTalent = talent;
                };
                CareerDetailsPage.prototype.onEquipmentSelected = function (eq, index) {
                    this._selectedEquipment[index] = eq;
                };
                CareerDetailsPage.prototype.onNext = function () {
                    if (!this._mandatoryDone) {
                        dialog_16.Dialog.show("You have not distributed all mandatory skill points.");
                        return;
                    }
                    if (!this._electiveDone) {
                        dialog_16.Dialog.show("You have not distributed all elective skill points.");
                        return;
                    }
                    if (character_78.character.careers.length === 1 && this._selectedSignatureSkill == null) {
                        dialog_16.Dialog.show("You have not selected a signature skill.");
                        return;
                    }
                    if (this._selectedTalent === null || this._selectedTalent.length === 0) {
                        dialog_16.Dialog.show("You have not selected a talent.");
                        return;
                    }
                    character_78.character.addTalent(this._selectedTalent);
                    if (this._isHassassin) {
                        character_78.character.hassassinOrder = this._selectedOrder;
                    }
                    else if (this._isMilitaryOrder) {
                        character_78.character.militaryOrder = this._selectedOrder;
                    }
                    if (this._selectedOrder !== this._order) {
                        character_78.character.lifePoints--;
                    }
                    if (this._showEquipment) {
                        // Regular equipment is added in applyCareer.
                        this._selectedEquipment.forEach(function (eq) {
                            if (!equipment_3.EquipmentHelper.handleSpecialEquipment(eq)) {
                                character_78.character.addEquipment(eq);
                            }
                        });
                        // Hassassin orders get their own set of equipment.
                        if (this._isHassassin) {
                            var order = hassassinOrders_1.HassassinOrdersHelper.getOrder(character_78.character.hassassinOrder);
                            order.gear.forEach(function (eq) {
                                if (eq.indexOf('|') === -1) {
                                    character_78.character.addEquipment(eq);
                                }
                            });
                        }
                        else if (this._isMilitaryOrder) {
                            var order = militaryOrders_1.MilitaryOrdersHelper.getOrder(character_78.character.militaryOrder);
                            order.gear.forEach(function (eq) {
                                if (eq.indexOf('|') === -1) {
                                    character_78.character.addEquipment(eq);
                                }
                            });
                        }
                    }
                    navigator_54.Navigation.navigateToPage(character_78.character.getCareerPage(pageFactory_54.PageIdentity.CareerEvent1));
                };
                CareerDetailsPage.prototype.drawEquipment = function (careerEquipment) {
                    var _this = this;
                    if (!this._showEquipment) {
                        return undefined;
                    }
                    var equipment = [];
                    if (this._isHassassin && character_78.character.careers[character_78.character.careers.length - 1].career !== careers_16.Career.HassassinFidayHaqqislam) {
                        equipment = hassassinOrders_1.HassassinOrdersHelper.getOrder(this._selectedOrder).gear;
                    }
                    else if (this._isMilitaryOrder) {
                        equipment = militaryOrders_1.MilitaryOrdersHelper.getOrder(this._selectedOrder).gear;
                    }
                    else {
                        equipment = careerEquipment;
                    }
                    return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "EQUIPMENT"), React.createElement(equipmentList_2.EquipmentList, {equipment: equipment, onSelected: function (eq, i) { return _this.onEquipmentSelected(eq, i); }})));
                };
                CareerDetailsPage.prototype.drawOrderSelection = function () {
                    var _this = this;
                    if (this._isHassassin) {
                        return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "HASSASSIN ORDER"), React.createElement("div", null, "Your assigned Hassassin Order is ", hassassinOrders_1.HassassinOrdersHelper.getOrder(this._selectedOrder).name, "." + ' ' + "Changing it will cost you a Life Point."), React.createElement("div", null, React.createElement("table", {className: "selection-list"}, React.createElement("tbody", null, hassassinOrders_1.HassassinOrdersHelper.getOrders().map(function (o, i) {
                            var checkBox = React.createElement(checkBox_4.CheckBox, {isChecked: _this._selectedOrder === o.id, value: o.id, onChanged: function (order) { _this._selectedOrder = order; _this.forceUpdate(); }});
                            return (React.createElement("tr", {key: i}, React.createElement("td", null, o.name), React.createElement("td", null, character_78.character.lifePoints < 1
                                ? o.id !== _this._selectedOrder
                                    ? checkBox
                                    : undefined
                                : checkBox)));
                        }))))));
                    }
                    else if (this._isMilitaryOrder) {
                        return (React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "MILITARY ORDER"), React.createElement("div", null, "Your assigned Military Order is ", militaryOrders_1.MilitaryOrdersHelper.getOrder(this._selectedOrder).name, "." + ' ' + "Changing it will cost you a Life Point."), React.createElement("div", null, React.createElement("table", {className: "selection-list"}, React.createElement("tbody", null, militaryOrders_1.MilitaryOrdersHelper.getOrders().map(function (o, i) {
                            var checkBox = React.createElement(checkBox_4.CheckBox, {isChecked: _this._selectedOrder === o.id, value: o.id, onChanged: function (order) { _this._selectedOrder = order; _this.forceUpdate(); }});
                            return (React.createElement("tr", {key: i}, React.createElement("td", null, o.name), React.createElement("td", null, character_78.character.lifePoints < 1
                                ? o.id !== _this._selectedOrder
                                    ? checkBox
                                    : undefined
                                : checkBox)));
                        }))))));
                    }
                    else {
                        return undefined;
                    }
                };
                return CareerDetailsPage;
            }(React.Component));
            exports_108("CareerDetailsPage", CareerDetailsPage);
        }
    }
});
System.register("components/careerEventSelection", ['react', "helpers/careerEvents", "components/button"], function(exports_109, context_109) {
    "use strict";
    var __moduleName = context_109 && context_109.id;
    var React, careerEvents_6, button_65;
    var CareerEventSelection;
    return {
        setters:[
            function (React_82) {
                React = React_82;
            },
            function (careerEvents_6_1) {
                careerEvents_6 = careerEvents_6_1;
            },
            function (button_65_1) {
                button_65 = button_65_1;
            }],
        execute: function() {
            CareerEventSelection = (function (_super) {
                __extends(CareerEventSelection, _super);
                function CareerEventSelection(props) {
                    _super.call(this, props);
                }
                CareerEventSelection.prototype.render = function () {
                    var _this = this;
                    var evs = careerEvents_6.CareerEventsHelper.getEvents();
                    var eventElements = [];
                    var n = 0;
                    for (var table in evs) {
                        var events = evs[table].map(function (e, i) {
                            return (React.createElement("div", {key: i}, React.createElement("div", {style: { backgroundColor: "#0a334c" }}, React.createElement("div", null, e.event), React.createElement("br", null), React.createElement(button_65.Button, {className: "button-small", text: "SELECT", onClick: function () { _this.selectEvent(e); }})), React.createElement("br", null)));
                        });
                        eventElements.push((React.createElement("div", {key: n++}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, "Table ", table), events), React.createElement("br", null))));
                    }
                    return (React.createElement("div", null, React.createElement("div", {className: "header-text"}, "SELECT CAREER EVENT"), React.createElement("br", null), eventElements, React.createElement(button_65.Button, {text: "Cancel", className: "button button-cancel", onClick: function () { return _this.props.onCancel(); }})));
                };
                CareerEventSelection.prototype.selectEvent = function (ev) {
                    this.props.onSelection(ev);
                };
                return CareerEventSelection;
            }(React.Component));
            exports_109("CareerEventSelection", CareerEventSelection);
        }
    }
});
System.register("pages/careerEventPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/careerEventSelection", "helpers/careerEvents", "common/eventModel"], function(exports_110, context_110) {
    "use strict";
    var __moduleName = context_110 && context_110.id;
    var React, character_79, navigator_55, pageFactory_55, pageHeader_26, button_66, careerEventSelection_1, careerEvents_7, eventModel_8;
    var CareerEventPage;
    return {
        setters:[
            function (React_83) {
                React = React_83;
            },
            function (character_79_1) {
                character_79 = character_79_1;
            },
            function (navigator_55_1) {
                navigator_55 = navigator_55_1;
            },
            function (pageFactory_55_1) {
                pageFactory_55 = pageFactory_55_1;
            },
            function (pageHeader_26_1) {
                pageHeader_26 = pageHeader_26_1;
            },
            function (button_66_1) {
                button_66 = button_66_1;
            },
            function (careerEventSelection_1_1) {
                careerEventSelection_1 = careerEventSelection_1_1;
            },
            function (careerEvents_7_1) {
                careerEvents_7 = careerEvents_7_1;
            },
            function (eventModel_8_1) {
                eventModel_8 = eventModel_8_1;
            }],
        execute: function() {
            CareerEventPage = (function (_super) {
                __extends(CareerEventPage, _super);
                function CareerEventPage(props) {
                    _super.call(this, props);
                    this.state = {
                        showSelection: false,
                        showEvent: false
                    };
                }
                CareerEventPage.prototype.render = function () {
                    var _this = this;
                    var roll = !character_79.character.isOptional
                        ? (React.createElement(button_66.Button, {text: "ROLL CAREER EVENT", className: "button-dark", onClick: function () { _this.rollCareerEvent(); }}))
                        : undefined;
                    var select = (React.createElement(button_66.Button, {text: "SELECT EVENT", lpCost: 1, className: "button-dark", onClick: function () { _this.showCareerEvents(); }}));
                    var reroll = character_79.character.lifePoints >= 1
                        ? (React.createElement(button_66.Button, {className: "button-dark", text: "REROLL", lpCost: 1, onClick: function () { _this.reroll(); }}))
                        : undefined;
                    var content = !this.state.showEvent && !this.state.showSelection ?
                        (React.createElement("div", null, React.createElement("div", {className: "page-text"}, "While working your career, what was the most significant event in your life?"), React.createElement("div", {className: "button-container"}, roll, select)))
                        : this.state.showSelection ?
                            (React.createElement("div", null, React.createElement(careerEventSelection_1.CareerEventSelection, {onSelection: function (ev) { _this.selectCareerEvent(ev); character_79.character.lifePoints--; }, onCancel: function () { return _this.hideCareerEvents(); }})))
                            : this.state.showEvent ?
                                (React.createElement("div", {className: "page"}, React.createElement("div", {className: "panel"}, React.createElement("div", {className: "option-header"}, character_79.character.careerEvents[character_79.character.careerEvents.length - 1].event), React.createElement("br", null), reroll), React.createElement(button_66.Button, {className: "button-next", text: "NEXT", onClick: function () { _this.onNext(); }})))
                                : undefined;
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_26.PageHeader, {text: "CAREER EVENT"}), content));
                };
                CareerEventPage.prototype.rollCareerEvent = function () {
                    var ev = careerEvents_7.CareerEventsHelper.generateEvent();
                    character_79.character.careerEvents.push(ev);
                    this.setState({ showSelection: false, showEvent: true });
                };
                CareerEventPage.prototype.reroll = function () {
                    character_79.character.careerEvents.splice(character_79.character.careerEvents.length - 1, 1);
                    character_79.character.lifePoints--;
                    this.rollCareerEvent();
                    this.forceUpdate();
                };
                CareerEventPage.prototype.showCareerEvents = function () {
                    this.setState({ showSelection: true, showEvent: false });
                };
                CareerEventPage.prototype.hideCareerEvents = function () {
                    this.setState({ showSelection: false, showEvent: false });
                };
                CareerEventPage.prototype.selectCareerEvent = function (ev) {
                    character_79.character.careerEvents.push(ev);
                    this.setState({ showSelection: false, showEvent: true });
                };
                CareerEventPage.prototype.onNext = function () {
                    var ev = character_79.character.careerEvents[character_79.character.careerEvents.length - 1];
                    if (ev.onApply) {
                        ev.onApply();
                    }
                    if (ev.detailView) {
                        if (ev.detailView.indexOf('|') > -1) {
                            var details = ev.detailView.split('|');
                            for (var i = 0; i < details.length; i++) {
                                character_79.character.pendingEvents.push(new eventModel_8.EventModel(ev.event, ev.trait, ev.effect, details[i]));
                            }
                        }
                        else {
                            character_79.character.pendingEvents.push(ev);
                        }
                        navigator_55.Navigation.navigateToPage(pageFactory_55.PageIdentity.EventDetails);
                    }
                    else {
                        navigator_55.Navigation.navigateToPage(pageFactory_55.PageIdentity.AfterEvent);
                    }
                };
                return CareerEventPage;
            }(React.Component));
            exports_110("CareerEventPage", CareerEventPage);
        }
    }
});
System.register("pages/firedPage", ['react', "components/pageHeader", "events/firedEvent"], function(exports_111, context_111) {
    "use strict";
    var __moduleName = context_111 && context_111.id;
    var React, pageHeader_27, firedEvent_2;
    var FiredPage;
    return {
        setters:[
            function (React_84) {
                React = React_84;
            },
            function (pageHeader_27_1) {
                pageHeader_27 = pageHeader_27_1;
            },
            function (firedEvent_2_1) {
                firedEvent_2 = firedEvent_2_1;
            }],
        execute: function() {
            FiredPage = (function (_super) {
                __extends(FiredPage, _super);
                function FiredPage(props) {
                    _super.call(this, props);
                }
                FiredPage.prototype.render = function () {
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_27.PageHeader, {text: "FIRED"}), React.createElement(firedEvent_2.FiredEvent, null)));
                };
                return FiredPage;
            }(React.Component));
            exports_111("FiredPage", FiredPage);
        }
    }
});
System.register("pages/criminalRecordPage", ['react', "components/pageHeader", "events/criminalRecordEvent"], function(exports_112, context_112) {
    "use strict";
    var __moduleName = context_112 && context_112.id;
    var React, pageHeader_28, criminalRecordEvent_2;
    var CriminalRecordPage;
    return {
        setters:[
            function (React_85) {
                React = React_85;
            },
            function (pageHeader_28_1) {
                pageHeader_28 = pageHeader_28_1;
            },
            function (criminalRecordEvent_2_1) {
                criminalRecordEvent_2 = criminalRecordEvent_2_1;
            }],
        execute: function() {
            CriminalRecordPage = (function (_super) {
                __extends(CriminalRecordPage, _super);
                function CriminalRecordPage(props) {
                    _super.call(this, props);
                }
                CriminalRecordPage.prototype.render = function () {
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_28.PageHeader, {text: "CRIMINAL RECORD"}), React.createElement(criminalRecordEvent_2.CriminalRecordEvent, null)));
                };
                return CriminalRecordPage;
            }(React.Component));
            exports_112("CriminalRecordPage", CriminalRecordPage);
        }
    }
});
System.register("components/geistSkillImprovement", ['react', "common/character", "helpers/skills"], function(exports_113, context_113) {
    "use strict";
    var __moduleName = context_113 && context_113.id;
    var React, character_80, skills_37;
    var GeistSkill, GeistSkillImprovement;
    return {
        setters:[
            function (React_86) {
                React = React_86;
            },
            function (character_80_1) {
                character_80 = character_80_1;
            },
            function (skills_37_1) {
                skills_37 = skills_37_1;
            }],
        execute: function() {
            GeistSkill = (function (_super) {
                __extends(GeistSkill, _super);
                function GeistSkill(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_80.character.geist.skills[this.props.skill].expertise;
                    this._originalFocus = character_80.character.geist.skills[this.props.skill].focus;
                    this._points = this.props.points;
                }
                GeistSkill.prototype.componentWillUpdate = function () {
                    if (this._points === 4) {
                        this._originalExpertise = character_80.character.geist.skills[this.props.skill].expertise;
                        this._originalFocus = character_80.character.geist.skills[this.props.skill].focus;
                    }
                };
                GeistSkill.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var expertise = character_80.character.geist.skills[skill].expertise;
                    var focus = character_80.character.geist.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = this.props.controller.points > 0 && expertise < 3;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus !== expertise && this.props.controller.points > 0 && focus < 3;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_37.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", incExp, " ", decExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", incFoc, " ", decFoc)));
                };
                GeistSkill.prototype.onDecreaseExpertise = function () {
                    character_80.character.geist.skills[this.props.skill].expertise--;
                    this._points++;
                    this.props.onExpertiseDecreased();
                };
                GeistSkill.prototype.onIncreaseExpertise = function () {
                    character_80.character.geist.skills[this.props.skill].expertise++;
                    this._points--;
                    this.props.onExpertiseIncreased();
                };
                GeistSkill.prototype.onDecreaseFocus = function () {
                    character_80.character.geist.skills[this.props.skill].focus--;
                    this._points++;
                    this.props.onFocusDecreased();
                };
                GeistSkill.prototype.onIncreaseFocus = function () {
                    character_80.character.geist.skills[this.props.skill].focus++;
                    this._points--;
                    this.props.onFocusIncreased();
                };
                return GeistSkill;
            }(React.Component));
            GeistSkillImprovement = (function (_super) {
                __extends(GeistSkillImprovement, _super);
                function GeistSkillImprovement(props) {
                    _super.call(this, props);
                    this._points = props.points;
                }
                GeistSkillImprovement.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (s, i) {
                        return (React.createElement("div", {key: i}, React.createElement(GeistSkill, {skill: s, points: _this.props.points, controller: _this, onExpertiseDecreased: function () { return _this.update(false); }, onExpertiseIncreased: function () { return _this.update(true); }, onFocusDecreased: function () { return _this.update(false); }, onFocusIncreased: function () { return _this.update(true); }})));
                    });
                    return (React.createElement("div", null, skills));
                };
                Object.defineProperty(GeistSkillImprovement.prototype, "points", {
                    get: function () {
                        return this._points;
                    },
                    enumerable: true,
                    configurable: true
                });
                GeistSkillImprovement.prototype.update = function (decreasePoint) {
                    this._points += decreasePoint ? -1 : 1;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    this.forceUpdate();
                };
                return GeistSkillImprovement;
            }(React.Component));
            exports_113("GeistSkillImprovement", GeistSkillImprovement);
        }
    }
});
System.register("pages/geistPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/attributeImprovement", "components/geistSkillImprovement", "components/dialog"], function(exports_114, context_114) {
    "use strict";
    var __moduleName = context_114 && context_114.id;
    var React, character_81, navigator_56, pageFactory_56, pageHeader_29, button_67, attributeImprovement_4, geistSkillImprovement_1, dialog_17;
    var GeistPage;
    return {
        setters:[
            function (React_87) {
                React = React_87;
            },
            function (character_81_1) {
                character_81 = character_81_1;
            },
            function (navigator_56_1) {
                navigator_56 = navigator_56_1;
            },
            function (pageFactory_56_1) {
                pageFactory_56 = pageFactory_56_1;
            },
            function (pageHeader_29_1) {
                pageHeader_29 = pageHeader_29_1;
            },
            function (button_67_1) {
                button_67 = button_67_1;
            },
            function (attributeImprovement_4_1) {
                attributeImprovement_4 = attributeImprovement_4_1;
            },
            function (geistSkillImprovement_1_1) {
                geistSkillImprovement_1 = geistSkillImprovement_1_1;
            },
            function (dialog_17_1) {
                dialog_17 = dialog_17_1;
            }],
        execute: function() {
            GeistPage = (function (_super) {
                __extends(GeistPage, _super);
                function GeistPage(props) {
                    _super.call(this, props);
                    this._attributesDone = false;
                    this._skillsDone = false;
                }
                GeistPage.prototype.render = function () {
                    var _this = this;
                    var skills = [];
                    character_81.character.geist.skills.forEach(function (skill) {
                        skills.push(skill.skill);
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_29.PageHeader, {text: "GEIST"}), React.createElement("div", {className: "page-text"}, "You get 2 attribute points and 4 skill points to improve your Geist with."), React.createElement("div", {className: "header-text"}, "ATTRIBUTES"), React.createElement("div", {className: "panel"}, React.createElement(attributeImprovement_4.AttributeImprovementCollection, {mode: attributeImprovement_4.AttributeImprovementCollectionMode.Geist, points: 2, onDone: function (done) { _this._attributesDone = done; }})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, "SKILLS"), React.createElement("div", {className: "panel"}, React.createElement(geistSkillImprovement_1.GeistSkillImprovement, {points: 4, skills: skills, onDone: function (done) { _this._skillsDone = done; }})), React.createElement(button_67.Button, {text: "NEXT", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                GeistPage.prototype.onNext = function () {
                    if (!this._attributesDone) {
                        dialog_17.Dialog.show("You have not distributed all attribute points.");
                        return;
                    }
                    if (!this._skillsDone) {
                        dialog_17.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    navigator_56.Navigation.navigateToPage(pageFactory_56.PageIdentity.FinalTweaks);
                };
                return GeistPage;
            }(React.Component));
            exports_114("GeistPage", GeistPage);
        }
    }
});
System.register("components/untrainedSkillImprovement", ['react', "common/character", "helpers/skills"], function(exports_115, context_115) {
    "use strict";
    var __moduleName = context_115 && context_115.id;
    var React, character_82, skills_38;
    var UntrainedSkill, UntrainedSkillImprovement;
    return {
        setters:[
            function (React_88) {
                React = React_88;
            },
            function (character_82_1) {
                character_82 = character_82_1;
            },
            function (skills_38_1) {
                skills_38 = skills_38_1;
            }],
        execute: function() {
            UntrainedSkill = (function (_super) {
                __extends(UntrainedSkill, _super);
                function UntrainedSkill(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_82.character.skills[this.props.skill].expertise;
                    this._originalFocus = character_82.character.skills[this.props.skill].focus;
                    this._points = 1;
                }
                UntrainedSkill.prototype.componentWillUpdate = function () {
                    if (this._points === 1) {
                        this._originalExpertise = character_82.character.skills[this.props.skill].expertise;
                        this._originalFocus = character_82.character.skills[this.props.skill].focus;
                    }
                };
                UntrainedSkill.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var expertise = character_82.character.skills[skill].expertise;
                    var focus = character_82.character.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = expertise === 0 && this.props.controller.points > 0;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus === 0 && focus !== expertise && expertise === this._originalExpertise && this.props.controller.points > 0;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_38.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", decExp, " ", incExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", decFoc, " ", incFoc)));
                };
                UntrainedSkill.prototype.onDecreaseExpertise = function () {
                    character_82.character.skills[this.props.skill].expertise--;
                    this._points++;
                    this.props.onExpertiseDecreased();
                };
                UntrainedSkill.prototype.onIncreaseExpertise = function () {
                    character_82.character.skills[this.props.skill].expertise++;
                    this._points--;
                    this.props.onExpertiseIncreased();
                };
                UntrainedSkill.prototype.onDecreaseFocus = function () {
                    character_82.character.skills[this.props.skill].focus--;
                    this._points++;
                    this.props.onFocusDecreased();
                };
                UntrainedSkill.prototype.onIncreaseFocus = function () {
                    character_82.character.skills[this.props.skill].focus++;
                    this._points--;
                    this.props.onFocusIncreased();
                };
                return UntrainedSkill;
            }(React.Component));
            UntrainedSkillImprovement = (function (_super) {
                __extends(UntrainedSkillImprovement, _super);
                function UntrainedSkillImprovement(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._points = props.points;
                    this._skills = [];
                    this.props.skills.forEach(function (skill) {
                        if (character_82.character.skills[skill].expertise === 0 || character_82.character.skills[skill].focus === 0) {
                            _this._skills.push(skill);
                        }
                    });
                }
                UntrainedSkillImprovement.prototype.render = function () {
                    var _this = this;
                    var skills = this._skills.map(function (s, i) {
                        return (React.createElement("div", {key: i}, React.createElement(UntrainedSkill, {skill: s, controller: _this, onExpertiseDecreased: function () { return _this.update(false); }, onExpertiseIncreased: function () { return _this.update(true); }, onFocusDecreased: function () { return _this.update(false); }, onFocusIncreased: function () { return _this.update(true); }})));
                    });
                    return (React.createElement("div", null, skills));
                };
                Object.defineProperty(UntrainedSkillImprovement.prototype, "points", {
                    get: function () {
                        return this._points;
                    },
                    enumerable: true,
                    configurable: true
                });
                UntrainedSkillImprovement.prototype.update = function (decreasePoint) {
                    this._points += decreasePoint ? -1 : 1;
                    if (this.props.onDone) {
                        this.props.onDone(this._points === 0);
                    }
                    this.forceUpdate();
                };
                return UntrainedSkillImprovement;
            }(React.Component));
            exports_115("UntrainedSkillImprovement", UntrainedSkillImprovement);
        }
    }
});
System.register("pages/finalTweaksPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/skills", "components/pageHeader", "components/button", "components/attributeImprovement", "components/untrainedSkillImprovement", "components/talentList", "components/dialog"], function(exports_116, context_116) {
    "use strict";
    var __moduleName = context_116 && context_116.id;
    var React, character_83, navigator_57, pageFactory_57, skills_39, pageHeader_30, button_68, attributeImprovement_5, untrainedSkillImprovement_1, talentList_3, dialog_18;
    var FinalTweaksPage;
    return {
        setters:[
            function (React_89) {
                React = React_89;
            },
            function (character_83_1) {
                character_83 = character_83_1;
            },
            function (navigator_57_1) {
                navigator_57 = navigator_57_1;
            },
            function (pageFactory_57_1) {
                pageFactory_57 = pageFactory_57_1;
            },
            function (skills_39_1) {
                skills_39 = skills_39_1;
            },
            function (pageHeader_30_1) {
                pageHeader_30 = pageHeader_30_1;
            },
            function (button_68_1) {
                button_68 = button_68_1;
            },
            function (attributeImprovement_5_1) {
                attributeImprovement_5 = attributeImprovement_5_1;
            },
            function (untrainedSkillImprovement_1_1) {
                untrainedSkillImprovement_1 = untrainedSkillImprovement_1_1;
            },
            function (talentList_3_1) {
                talentList_3 = talentList_3_1;
            },
            function (dialog_18_1) {
                dialog_18 = dialog_18_1;
            }],
        execute: function() {
            FinalTweaksPage = (function (_super) {
                __extends(FinalTweaksPage, _super);
                function FinalTweaksPage(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._attributesDone = false;
                    this._skillsDone = false;
                    this._points = 2;
                    character_83.character.equipment.forEach(function (eq) {
                        if (eq === "Biografted Attribute Augmentation 2") {
                            _this._points += 2;
                        }
                    });
                }
                FinalTweaksPage.prototype.render = function () {
                    var _this = this;
                    var skills = [];
                    character_83.character.skills.forEach(function (skill) {
                        skills.push(skill.skill);
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_30.PageHeader, {text: "FINAL TWEAKS"}), React.createElement("div", {className: "page-text"}, "Improve up to ", this._points, " attributes and up to 2 untrained skills.", React.createElement("br", null), "Then select a talent for any of your skills."), React.createElement("div", {className: "header-text"}, "ATTRIBUTES"), React.createElement("div", {className: "panel"}, React.createElement(attributeImprovement_5.AttributeImprovementCollection, {mode: attributeImprovement_5.AttributeImprovementCollectionMode.Increase, points: this._points, onDone: function (done) { _this._attributesDone = done; }})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, "SKILLS"), React.createElement("div", {className: "panel"}, React.createElement(untrainedSkillImprovement_1.UntrainedSkillImprovement, {points: 2, skills: skills, onDone: function (done) { _this._skillsDone = done; _this.forceUpdate(); }})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, "TALENT"), React.createElement("div", {className: "panel"}, React.createElement(talentList_3.TalentList, {skills: skills_39.SkillsHelper.getSkills(), onSelection: function (talent) { _this._talent = talent; }})), React.createElement(button_68.Button, {text: "NEXT", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                FinalTweaksPage.prototype.onNext = function () {
                    if (!this._attributesDone) {
                        dialog_18.Dialog.show("You have not distributed all attribute points.");
                        return;
                    }
                    if (!this._skillsDone) {
                        dialog_18.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    if (this._talent === null || this._talent.length === 0) {
                        dialog_18.Dialog.show("You have not selected a talent.");
                        return;
                    }
                    character_83.character.addTalent(this._talent);
                    if (!character_83.character.isOptional) {
                        navigator_57.Navigation.navigateToPage(pageFactory_57.PageIdentity.FinalTweaks_LifePoints);
                    }
                    else {
                        navigator_57.Navigation.navigateToPage(pageFactory_57.PageIdentity.Finish);
                    }
                };
                return FinalTweaksPage;
            }(React.Component));
            exports_116("FinalTweaksPage", FinalTweaksPage);
        }
    }
});
System.register("components/increaseInfinityPoints", ['react', "common/character"], function(exports_117, context_117) {
    "use strict";
    var __moduleName = context_117 && context_117.id;
    var React, character_84;
    var IncreaseInfinityPoints;
    return {
        setters:[
            function (React_90) {
                React = React_90;
            },
            function (character_84_1) {
                character_84 = character_84_1;
            }],
        execute: function() {
            IncreaseInfinityPoints = (function (_super) {
                __extends(IncreaseInfinityPoints, _super);
                function IncreaseInfinityPoints(props) {
                    _super.call(this, props);
                }
                IncreaseInfinityPoints.prototype.render = function () {
                    var _this = this;
                    var infinityPoints = character_84.character.infinityPoints;
                    var showDecreaseExpertise = infinityPoints > 2;
                    var showIncreaseExpertise = infinityPoints < 4 && character_84.character.lifePoints > 0;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseInfinityPoints(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseInfinityPoints(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-expertise"}, "Infinity Points: ", character_84.character.infinityPoints, " ", incExp, " ", decExp)));
                };
                IncreaseInfinityPoints.prototype.onDecreaseInfinityPoints = function () {
                    character_84.character.infinityPoints--;
                    character_84.character.lifePoints++;
                    if (this.props.onUpdated) {
                        this.props.onUpdated();
                    }
                    else {
                        this.forceUpdate();
                    }
                };
                IncreaseInfinityPoints.prototype.onIncreaseInfinityPoints = function () {
                    character_84.character.infinityPoints++;
                    character_84.character.lifePoints--;
                    if (this.props.onUpdated) {
                        this.props.onUpdated();
                    }
                    else {
                        this.forceUpdate();
                    }
                };
                return IncreaseInfinityPoints;
            }(React.Component));
            exports_117("IncreaseInfinityPoints", IncreaseInfinityPoints);
        }
    }
});
System.register("components/increaseAssets", ['react', "helpers/attributes", "common/character"], function(exports_118, context_118) {
    "use strict";
    var __moduleName = context_118 && context_118.id;
    var React, attributes_28, character_85;
    var IncreaseAssets;
    return {
        setters:[
            function (React_91) {
                React = React_91;
            },
            function (attributes_28_1) {
                attributes_28 = attributes_28_1;
            },
            function (character_85_1) {
                character_85 = character_85_1;
            }],
        execute: function() {
            IncreaseAssets = (function (_super) {
                __extends(IncreaseAssets, _super);
                function IncreaseAssets(props) {
                    _super.call(this, props);
                    this._originalAssets = character_85.character.assets;
                }
                IncreaseAssets.prototype.render = function () {
                    var _this = this;
                    var assets = character_85.character.assets;
                    var showDecreaseExpertise = assets > this._originalAssets;
                    var showIncreaseExpertise = character_85.character.lifePoints > 0;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseAssets(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseAssets(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-expertise"}, "Assets: ", character_85.character.attributes[attributes_28.Attribute.Personality].value + character_85.character.assets, " ", incExp, " ", decExp)));
                };
                IncreaseAssets.prototype.onDecreaseAssets = function () {
                    character_85.character.assets--;
                    character_85.character.lifePoints++;
                    if (this.props.onUpdated) {
                        this.props.onUpdated();
                    }
                    else {
                        this.forceUpdate();
                    }
                };
                IncreaseAssets.prototype.onIncreaseAssets = function () {
                    character_85.character.assets++;
                    character_85.character.lifePoints--;
                    if (this.props.onUpdated) {
                        this.props.onUpdated();
                    }
                    else {
                        this.forceUpdate();
                    }
                };
                return IncreaseAssets;
            }(React.Component));
            exports_118("IncreaseAssets", IncreaseAssets);
        }
    }
});
System.register("components/increaseSkills", ['react', "common/character", "helpers/skills"], function(exports_119, context_119) {
    "use strict";
    var __moduleName = context_119 && context_119.id;
    var React, character_86, skills_40;
    var IncreaseSkill, IncreaseSkills;
    return {
        setters:[
            function (React_92) {
                React = React_92;
            },
            function (character_86_1) {
                character_86 = character_86_1;
            },
            function (skills_40_1) {
                skills_40 = skills_40_1;
            }],
        execute: function() {
            IncreaseSkill = (function (_super) {
                __extends(IncreaseSkill, _super);
                function IncreaseSkill(props) {
                    _super.call(this, props);
                    this._originalExpertise = character_86.character.skills[this.props.skill].expertise;
                    this._originalFocus = character_86.character.skills[this.props.skill].focus;
                }
                IncreaseSkill.prototype.render = function () {
                    var _this = this;
                    var skill = this.props.skill;
                    var max = character_86.character.skills[skill].isSignature ? 5 : 3;
                    var expertise = character_86.character.skills[skill].expertise;
                    var focus = character_86.character.skills[skill].focus;
                    var showDecreaseExpertise = expertise > this._originalExpertise;
                    var showIncreaseExpertise = character_86.character.lifePoints > 0 && expertise < max;
                    var showDecreaseFocus = focus > this._originalFocus;
                    var showIncreaseFocus = focus !== expertise && character_86.character.lifePoints > 0 && focus < max;
                    var decExp = showDecreaseExpertise
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseExpertise(); }}))
                        : undefined;
                    var incExp = showIncreaseExpertise
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseExpertise(); }}))
                        : undefined;
                    var decFoc = showDecreaseFocus
                        ? (React.createElement("img", {style: { float: "right", marginRight: "20px" }, height: "20", src: "res/img/dec.png", onClick: function () { _this.onDecreaseFocus(); }}))
                        : undefined;
                    var incFoc = showIncreaseFocus
                        ? (React.createElement("img", {style: { float: "right" }, height: "20", src: "res/img/inc.png", onClick: function () { _this.onIncreaseFocus(); }}))
                        : undefined;
                    return (React.createElement("div", {className: "skill-container"}, React.createElement("div", {className: "skill-name"}, skills_40.SkillsHelper.getSkillName(skill)), React.createElement("div", {className: "skill-expertise"}, "Expertise: ", expertise, " ", incExp, " ", decExp), React.createElement("div", {className: "skill-focus"}, "Focus: ", focus, " ", incFoc, " ", decFoc)));
                };
                IncreaseSkill.prototype.onDecreaseExpertise = function () {
                    character_86.character.skills[this.props.skill].expertise--;
                    character_86.character.lifePoints++;
                    this.props.onExpertiseDecreased();
                };
                IncreaseSkill.prototype.onIncreaseExpertise = function () {
                    character_86.character.skills[this.props.skill].expertise++;
                    character_86.character.lifePoints--;
                    this.props.onExpertiseIncreased();
                };
                IncreaseSkill.prototype.onDecreaseFocus = function () {
                    character_86.character.skills[this.props.skill].focus--;
                    character_86.character.lifePoints++;
                    this.props.onFocusDecreased();
                };
                IncreaseSkill.prototype.onIncreaseFocus = function () {
                    character_86.character.skills[this.props.skill].focus++;
                    character_86.character.lifePoints--;
                    this.props.onFocusIncreased();
                };
                return IncreaseSkill;
            }(React.Component));
            IncreaseSkills = (function (_super) {
                __extends(IncreaseSkills, _super);
                function IncreaseSkills(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._skills = [];
                    this.props.skills.forEach(function (skill) {
                        _this._skills.push(skill);
                    });
                }
                IncreaseSkills.prototype.render = function () {
                    var _this = this;
                    var skills = this._skills.map(function (s, i) {
                        return (React.createElement("div", {key: i}, React.createElement(IncreaseSkill, {skill: s, controller: _this, onExpertiseDecreased: function () { return _this.update(); }, onExpertiseIncreased: function () { return _this.update(); }, onFocusDecreased: function () { return _this.update(); }, onFocusIncreased: function () { return _this.update(); }})));
                    });
                    return (React.createElement("div", null, skills));
                };
                IncreaseSkills.prototype.update = function () {
                    if (this.props.onUpdated) {
                        this.props.onUpdated();
                    }
                    this.forceUpdate();
                };
                return IncreaseSkills;
            }(React.Component));
            exports_119("IncreaseSkills", IncreaseSkills);
        }
    }
});
System.register("components/lifePointLanguages", ['react', "common/character", "components/button", "components/checkBox", "components/dialog", "helpers/birthPlaces"], function(exports_120, context_120) {
    "use strict";
    var __moduleName = context_120 && context_120.id;
    var React, character_87, button_69, checkBox_5, dialog_19, birthPlaces_11;
    var LifePointLanguages;
    return {
        setters:[
            function (React_93) {
                React = React_93;
            },
            function (character_87_1) {
                character_87 = character_87_1;
            },
            function (button_69_1) {
                button_69 = button_69_1;
            },
            function (checkBox_5_1) {
                checkBox_5 = checkBox_5_1;
            },
            function (dialog_19_1) {
                dialog_19 = dialog_19_1;
            },
            function (birthPlaces_11_1) {
                birthPlaces_11 = birthPlaces_11_1;
            }],
        execute: function() {
            LifePointLanguages = (function (_super) {
                __extends(LifePointLanguages, _super);
                function LifePointLanguages() {
                    _super.apply(this, arguments);
                    this._languages = [];
                }
                LifePointLanguages.prototype.render = function () {
                    var _this = this;
                    var languages = birthPlaces_11.BirthPlacesHelper.getCustomizationLanguages();
                    var langs = [];
                    for (var i = 0; i < languages.length; i++) {
                        var lang = languages[i];
                        if (character_87.character.languages.indexOf(lang) === -1) {
                            langs.push(lang);
                        }
                    }
                    var langList = langs.map(function (lang, i) {
                        return (React.createElement("table", {cellSpacing: "0", cellPadding: "0", key: i}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, React.createElement(checkBox_5.CheckBox, {isChecked: _this._languages.indexOf(lang) > -1, value: lang, onChanged: function (val) { return _this.selectLanguage(val); }})), React.createElement("td", null, lang)))));
                    });
                    var button = (React.createElement(button_69.Button, {text: "1-6 Random", lpCost: 1, className: "button-dark", onClick: function () { return _this.generateLanguages(); }}));
                    return (React.createElement("div", null, button, langList));
                };
                LifePointLanguages.prototype.selectLanguage = function (lang) {
                    var n = this._languages.indexOf(lang);
                    if (n > -1) {
                        this._languages.splice(n, 1);
                        character_87.character.lifePoints++;
                    }
                    else if (character_87.character.lifePoints > 0) {
                        this._languages.push(lang);
                        character_87.character.lifePoints--;
                    }
                    this.forceUpdate();
                };
                LifePointLanguages.prototype.generateLanguages = function () {
                    var _this = this;
                    var langs = [];
                    var num = Math.floor(Math.random() * 6) + 1;
                    for (var i = 0; i < num; i++) {
                        var lang_1 = birthPlaces_11.BirthPlacesHelper.generateRandomLanguage(character_87.character.faction, true, true);
                        if (character_87.character.languages.indexOf(lang_1[0]) > -1 || langs.indexOf(lang_1[0]) > -1) {
                            continue;
                        }
                        else {
                            character_87.character.addLanguage(lang_1[0]);
                            langs.push(lang_1[0]);
                        }
                    }
                    if (langs.length === 0) {
                        this.generateLanguages();
                        return;
                    }
                    var msg = "You gained the following languages: ";
                    for (var lang in langs) {
                        msg += langs[lang] + " ";
                    }
                    character_87.character.lifePoints--;
                    dialog_19.Dialog.show(msg, function () { _this.forceUpdate(); });
                };
                return LifePointLanguages;
            }(React.Component));
            exports_120("LifePointLanguages", LifePointLanguages);
        }
    }
});
System.register("pages/finalTweaks_LifePoints", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "components/increaseInfinityPoints", "components/increaseAssets", "components/increaseSkills", "components/lifePointLanguages"], function(exports_121, context_121) {
    "use strict";
    var __moduleName = context_121 && context_121.id;
    var React, character_88, navigator_58, pageFactory_58, pageHeader_31, button_70, increaseInfinityPoints_1, increaseAssets_1, increaseSkills_1, lifePointLanguages_1;
    var FinalTweaks_LifePoints;
    return {
        setters:[
            function (React_94) {
                React = React_94;
            },
            function (character_88_1) {
                character_88 = character_88_1;
            },
            function (navigator_58_1) {
                navigator_58 = navigator_58_1;
            },
            function (pageFactory_58_1) {
                pageFactory_58 = pageFactory_58_1;
            },
            function (pageHeader_31_1) {
                pageHeader_31 = pageHeader_31_1;
            },
            function (button_70_1) {
                button_70 = button_70_1;
            },
            function (increaseInfinityPoints_1_1) {
                increaseInfinityPoints_1 = increaseInfinityPoints_1_1;
            },
            function (increaseAssets_1_1) {
                increaseAssets_1 = increaseAssets_1_1;
            },
            function (increaseSkills_1_1) {
                increaseSkills_1 = increaseSkills_1_1;
            },
            function (lifePointLanguages_1_1) {
                lifePointLanguages_1 = lifePointLanguages_1_1;
            }],
        execute: function() {
            FinalTweaks_LifePoints = (function (_super) {
                __extends(FinalTweaks_LifePoints, _super);
                function FinalTweaks_LifePoints(props) {
                    _super.call(this, props);
                }
                FinalTweaks_LifePoints.prototype.render = function () {
                    var _this = this;
                    var skills = [];
                    character_88.character.skills.forEach(function (skill) {
                        skills.push(skill.skill);
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_31.PageHeader, {text: "FINAL TWEAKS"}), React.createElement("div", {className: "page-text"}, "You can now use any remaining Life Points to either increase your Infinity Point refresh rate, increase" + ' ' + "your skills or assets, or gain new languages."), React.createElement("div", {className: "panel"}, React.createElement(increaseInfinityPoints_1.IncreaseInfinityPoints, {onUpdated: function () { return _this.forceUpdate(); }}), React.createElement("br", null), React.createElement(increaseAssets_1.IncreaseAssets, {onUpdated: function () { return _this.forceUpdate(); }})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, "SKILLS"), React.createElement("div", {className: "panel"}, React.createElement(increaseSkills_1.IncreaseSkills, {skills: skills, onUpdated: function () { return _this.forceUpdate(); }})), React.createElement("br", null), React.createElement("div", {className: "header-text"}, "LANGUAGES"), React.createElement("div", {className: "panel"}, React.createElement(lifePointLanguages_1.LifePointLanguages, null)), React.createElement(button_70.Button, {text: "FINISH", className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                FinalTweaks_LifePoints.prototype.onNext = function () {
                    navigator_58.Navigation.navigateToPage(pageFactory_58.PageIdentity.Finish);
                };
                return FinalTweaks_LifePoints;
            }(React.Component));
            exports_121("FinalTweaks_LifePoints", FinalTweaks_LifePoints);
        }
    }
});
System.register("components/characterSheet", ['react', "common/character", "common/eventChannel", "helpers/attributes", "helpers/factions", "helpers/alienHosts", "helpers/socialClasses", "helpers/homeEnvironments", "helpers/educations", "helpers/careers", "helpers/skills", "helpers/talents"], function(exports_122, context_122) {
    "use strict";
    var __moduleName = context_122 && context_122.id;
    var React, character_89, eventChannel_1, attributes_29, factions_26, alienHosts_17, socialClasses_14, homeEnvironments_5, educations_6, careers_17, skills_41, talents_5;
    var SectionContent, CareerSectionContent, CharacterSheetData, CharacterSheet;
    return {
        setters:[
            function (React_95) {
                React = React_95;
            },
            function (character_89_1) {
                character_89 = character_89_1;
            },
            function (eventChannel_1_1) {
                eventChannel_1 = eventChannel_1_1;
            },
            function (attributes_29_1) {
                attributes_29 = attributes_29_1;
            },
            function (factions_26_1) {
                factions_26 = factions_26_1;
            },
            function (alienHosts_17_1) {
                alienHosts_17 = alienHosts_17_1;
            },
            function (socialClasses_14_1) {
                socialClasses_14 = socialClasses_14_1;
            },
            function (homeEnvironments_5_1) {
                homeEnvironments_5 = homeEnvironments_5_1;
            },
            function (educations_6_1) {
                educations_6 = educations_6_1;
            },
            function (careers_17_1) {
                careers_17 = careers_17_1;
            },
            function (skills_41_1) {
                skills_41 = skills_41_1;
            },
            function (talents_5_1) {
                talents_5 = talents_5_1;
            }],
        execute: function() {
            SectionContent = (function () {
                function SectionContent(name, value) {
                    this.name = name;
                    this.value = value;
                }
                return SectionContent;
            }());
            CareerSectionContent = (function (_super) {
                __extends(CareerSectionContent, _super);
                function CareerSectionContent(career, index) {
                    _super.call(this, "CAREER " + (index + 1), career
                        ? careers_17.CareersHelper.getCareer(career.career).name + " " + career.years + " years."
                        : undefined);
                }
                return CareerSectionContent;
            }(SectionContent));
            CharacterSheetData = (function () {
                function CharacterSheetData() {
                    this._data = [
                        new SectionContent("FACTION", character_89.character.faction >= 0
                            ? factions_26.FactionsHelper.getFaction(character_89.character.faction).name +
                                (character_89.character.faction === character_89.character.heritage
                                    ? ""
                                    : (character_89.character.hasDefected
                                        ? "(Defected from " + factions_26.FactionsHelper.getFaction(character_89.character.heritage).name + ")"
                                        : "(Heritage: " + factions_26.FactionsHelper.getFaction(character_89.character.heritage).name + ")"))
                            : "None"),
                        new SectionContent("HOST BODY", this.getHostBody()),
                        new SectionContent("BIRTH PLACE", character_89.character.birthPlace + " " + (character_89.character.homeland ? "(" + character_89.character.homeland + ")" : "")),
                        new SectionContent("SOCIAL CLASS", character_89.character.socialClass >= 0 ? socialClasses_14.SocialClassesHelper.getSocialClass(character_89.character.socialClass).name : "None"),
                        new SectionContent("HOME ENVIRONMENT", character_89.character.homeEnvironment >= 0 ? homeEnvironments_5.HomeEnvironmentsHelper.getHomeEnvironment(character_89.character.homeEnvironment).name : "None"),
                        new SectionContent("YOUTH EVENT", character_89.character.youthEvent ? character_89.character.youthEvent.description : undefined),
                        new SectionContent("EDUCATION", character_89.character.education >= 0 ? educations_6.EducationsHelper.getEducation(character_89.character.education).name : "None"),
                        new SectionContent("ADOLESCENCE EVENT", character_89.character.adolescenceEvent ? character_89.character.adolescenceEvent.effect : undefined),
                        new SectionContent("TRAIT", character_89.character.adolescenceEvent ? character_89.character.adolescenceEvent.trait : undefined),
                        new CareerSectionContent(character_89.character.careers.length > 0 ? character_89.character.careers[0] : undefined, 0),
                        new CareerSectionContent(character_89.character.careers.length > 1 ? character_89.character.careers[1] : undefined, 1),
                        new CareerSectionContent(character_89.character.careers.length > 2 ? character_89.character.careers[2] : undefined, 2),
                        new CareerSectionContent(character_89.character.careers.length > 3 ? character_89.character.careers[3] : undefined, 3),
                        new SectionContent("EARNINGS", character_89.character.getEarnings().toString()),
                        new SectionContent("ASSETS", character_89.character.attributes[attributes_29.Attribute.Personality].value + character_89.character.assets)
                    ];
                    this._attributes1 = [
                        attributes_29.Attribute.Agility,
                        attributes_29.Attribute.Awareness,
                        attributes_29.Attribute.Brawn,
                        attributes_29.Attribute.Coordination
                    ];
                    this._attributes2 = [
                        attributes_29.Attribute.Intelligence,
                        attributes_29.Attribute.Personality,
                        attributes_29.Attribute.Willpower
                    ];
                }
                Object.defineProperty(CharacterSheetData.prototype, "dataSection", {
                    get: function () {
                        return this._data;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CharacterSheetData.prototype, "firstAttributesSection", {
                    get: function () {
                        return this._attributes1;
                    },
                    enumerable: true,
                    configurable: true
                });
                Object.defineProperty(CharacterSheetData.prototype, "secondAttributesSection", {
                    get: function () {
                        return this._attributes2;
                    },
                    enumerable: true,
                    configurable: true
                });
                CharacterSheetData.prototype.getHostBody = function () {
                    var host = character_89.character.host >= 0 ? alienHosts_17.AlienHostsHelper.getAlienHost(character_89.character.host).name : "Human";
                    var body = character_89.character.hostName || "Birth";
                    return host + " (" + body + ")";
                };
                return CharacterSheetData;
            }());
            CharacterSheet = (function (_super) {
                __extends(CharacterSheet, _super);
                function CharacterSheet(props) {
                    var _this = this;
                    _super.call(this, props);
                    this._sheetData = new CharacterSheetData();
                    eventChannel_1.Events.listen(eventChannel_1.EventIdentity.UpdateCharacter, function () {
                        _this._sheetData = new CharacterSheetData();
                        _this.forceUpdate();
                    });
                }
                CharacterSheet.prototype.render = function () {
                    var data = this._sheetData.dataSection.map(function (s, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "bg-dark"}, s.name), React.createElement("td", {className: "bg-light border-dark text-dark"}, s.value)));
                    });
                    var events = character_89.character.careerEvents.map(function (e, i) {
                        return (React.createElement("div", {key: i}, React.createElement("div", null, e.effect, e.trait && e.trait.length > 0 ? " Trait: " + e.trait : ""), React.createElement("br", null)));
                    });
                    var attributesAndSkills1 = this._sheetData.firstAttributesSection.map(function (a, i) {
                        var skills = skills_41.SkillsHelper.getSkillsForAttribute(a).map(function (s, i) {
                            var legendary = character_89.character.skills[s].isSignature
                                ? (React.createElement("span", {className: "legendary"}, "S"))
                                : undefined;
                            return (React.createElement("tr", {key: i}, React.createElement("td", {className: "bg-light border-dark text-dark sheet-skillname"}, skills_41.SkillsHelper.getSkillName(s).toLocaleUpperCase(), legendary), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.skills[s].expertise), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.skills[s].focus)));
                        });
                        return (React.createElement("table", {className: "sheet-section", key: i}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark-wide", style: { padding: "4px" }}, attributes_29.AttributesHelper.getAttributeName(a).toLocaleUpperCase()), React.createElement("td", {colSpan: "2", className: "bg-light border-dark text-dark text-center"}, character_89.character.attributes[a].value)), skills)));
                    });
                    var attributesAndSkills2 = this._sheetData.secondAttributesSection.map(function (a, i) {
                        var skills = skills_41.SkillsHelper.getSkillsForAttribute(a).map(function (s, i) {
                            var legendary = character_89.character.skills[s].isSignature
                                ? (React.createElement("span", {className: "legendary"}, "S"))
                                : undefined;
                            return (React.createElement("tr", {key: i}, React.createElement("td", {className: "bg-light border-dark text-dark sheet-skillname"}, skills_41.SkillsHelper.getSkillName(s).toLocaleUpperCase(), legendary), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.skills[s].expertise), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.skills[s].focus)));
                        });
                        return (React.createElement("table", {className: "sheet-section", key: i}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark-wide", style: { padding: "4px" }}, attributes_29.AttributesHelper.getAttributeName(a).toLocaleUpperCase()), React.createElement("td", {colSpan: "2", className: "bg-light border-dark text-dark text-center"}, character_89.character.attributes[a].value)), skills)));
                    });
                    var geist = character_89.character.geist.attributes.map(function (a, i) {
                        var skills = skills_41.SkillsHelper.getSkillsForAttribute(a.attribute).map(function (s, i) {
                            return character_89.character.geist.skills[s].expertise > 0 ?
                                (React.createElement("tr", {key: i}, React.createElement("td", {className: "bg-light border-dark text-dark sheet-skillname"}, skills_41.SkillsHelper.getSkillName(s).toLocaleUpperCase()), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.geist.skills[s].expertise), React.createElement("td", {className: "bg-light border-dark text-dark text-center"}, character_89.character.geist.skills[s].focus)))
                                : undefined;
                        });
                        return (React.createElement("table", {className: "sheet-section", key: i}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark-wide", style: { padding: "4px" }}, attributes_29.AttributesHelper.getAttributeName(a.attribute).toLocaleUpperCase()), React.createElement("td", {colSpan: "2", className: "bg-light border-dark text-dark text-center"}, a.value)), skills)));
                    });
                    var characterTalents = [];
                    for (var talent in character_89.character.talents) {
                        var t = character_89.character.talents[talent];
                        var tt = talents_5.TalentsHelper.getTalent(talent);
                        if (tt.maxRank > 1) {
                            characterTalents.push(talent + " [Rank: " + t.rank + "]");
                        }
                        else {
                            characterTalents.push(talent);
                        }
                    }
                    var talents = characterTalents.map(function (t, i) {
                        return (React.createElement("div", {key: i}, t));
                    });
                    var equipment = character_89.character.equipment.map(function (e, i) {
                        return (React.createElement("div", {key: i}, e));
                    });
                    var languages = character_89.character.languages.map(function (l, i) {
                        return (React.createElement("div", {key: i}, l));
                    });
                    var containerClass = "sheet-container";
                    if (this.props.isVisible) {
                        containerClass = "sheet-container-nonfixed";
                    }
                    return (React.createElement("div", {id: "character-sheet", className: "sheet-hidden"}, React.createElement("div", {className: "sheet-bg", id: "sheet-bg", style: { display: "none" }}), React.createElement("div", {className: containerClass, id: "sheet-container"}, React.createElement("div", {className: "sheet-panel"}, React.createElement("table", {className: "sheet-section"}, React.createElement("tbody", null, data, React.createElement("tr", null, React.createElement("td", {className: "bg-dark"}, "EVENTS"), React.createElement("td", {className: "bg-light border-dark text-dark"}, events))))), React.createElement("div", {className: "sheet-panel"}, attributesAndSkills1), React.createElement("div", {className: "sheet-panel"}, attributesAndSkills2), React.createElement("div", {className: "sheet-panel"}, React.createElement("table", {className: "sheet-section"}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark"}, "TALENTS"), React.createElement("td", {className: "bg-light border-dark-nopadding text-dark"}, talents))))), React.createElement("div", {className: "sheet-panel"}, React.createElement("table", {className: "sheet-section"}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark"}, "EQUIPMENT"), React.createElement("td", {className: "bg-light border-dark text-dark"}, equipment))))), React.createElement("div", {className: "sheet-panel"}, React.createElement("table", {className: "sheet-section"}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "bg-dark"}, "LANGUAGES"), React.createElement("td", {className: "bg-light border-dark text-dark"}, languages))))), React.createElement("div", {className: "sheet-panel"}, React.createElement("b", null, "GEIST"), geist), React.createElement("br", null))));
                };
                return CharacterSheet;
            }(React.Component));
            exports_122("CharacterSheet", CharacterSheet);
        }
    }
});
System.register("pages/finishPage", ['react', "common/character", "common/characterSerializer", "components/pageHeader", "components/characterSheet"], function(exports_123, context_123) {
    "use strict";
    var __moduleName = context_123 && context_123.id;
    var React, character_90, characterSerializer_1, pageHeader_32, characterSheet_1;
    var FinishPage;
    return {
        setters:[
            function (React_96) {
                React = React_96;
            },
            function (character_90_1) {
                character_90 = character_90_1;
            },
            function (characterSerializer_1_1) {
                characterSerializer_1 = characterSerializer_1_1;
            },
            function (pageHeader_32_1) {
                pageHeader_32 = pageHeader_32_1;
            },
            function (characterSheet_1_1) {
                characterSheet_1 = characterSheet_1_1;
            }],
        execute: function() {
            FinishPage = (function (_super) {
                __extends(FinishPage, _super);
                function FinishPage(props) {
                    _super.call(this, props);
                }
                FinishPage.prototype.render = function () {
                    var _this = this;
                    var characterData = characterSerializer_1.CharacterSerializer.serialize(character_90.character);
                    var data = characterData.map(function (d, i) {
                        return (React.createElement("input", {key: i, type: "hidden", name: d.name, value: d.value}));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_32.PageHeader, {text: "FINISHED"}), React.createElement("div", {className: "page-text"}, "Your character is finished. You can either use this reference to fill in a character sheet by hand, or use the button at the bottom" + ' ' + "to export your character to PDF."), React.createElement("div", null, React.createElement("b", null, "* PDF exporting is not working on iOS 11. Use this page as a reference to fill in your character manually.")), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "NAME"), React.createElement("input", {type: "text", onChange: function () { return _this.onNameChanged(); }, ref: function (input) { return _this.name = input; }})), React.createElement("br", null), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "APPEARANCE"), React.createElement("br", null), React.createElement("table", null, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {style: { verticalAlign: "top" }}, "Description"), React.createElement("td", null, React.createElement("textarea", {cols: "20", rows: "10", onChange: function () { return _this.onDescChanged(); }, ref: function (input) { return _this.description = input; }}))), React.createElement("tr", null, React.createElement("td", null, "Height"), React.createElement("td", null, React.createElement("input", {type: "text", onChange: function () { return _this.onHeightChanged(); }, ref: function (input) { return _this.height = input; }}))), React.createElement("tr", null, React.createElement("td", null, "Weight"), React.createElement("td", null, React.createElement("input", {type: "text", onChange: function () { return _this.onWeightChanged(); }, ref: function (input) { return _this.weight = input; }}))), React.createElement("tr", null, React.createElement("td", null, "Hair"), React.createElement("td", null, React.createElement("input", {type: "text", onChange: function () { return _this.onHairChanged(); }, ref: function (input) { return _this.hair = input; }}))), React.createElement("tr", null, React.createElement("td", null, "Eyes"), React.createElement("td", null, React.createElement("input", {type: "text", onChange: function () { return _this.onEyesChanged(); }, ref: function (input) { return _this.eyes = input; }})))))), React.createElement("br", null), React.createElement("div", {className: "panel"}, React.createElement(characterSheet_1.CharacterSheet, {isVisible: true})), React.createElement("br", null), React.createElement("div", {className: "button-container"}, React.createElement("form", {action: "http://sheet-svc.frostkin-development.se/api/sheet", method: "post", encType: "application/x-www-form-urlencoded", target: "_blank"}, data, React.createElement("input", {type: "submit", value: "Export to PDF", className: "button"})), React.createElement("br", null))));
                };
                FinishPage.prototype.onNameChanged = function () {
                    character_90.character.name = this.name.value;
                    this.forceUpdate();
                };
                FinishPage.prototype.onDescChanged = function () {
                    character_90.character.description = this.description.value;
                    this.forceUpdate();
                };
                FinishPage.prototype.onHeightChanged = function () {
                    character_90.character.height = this.height.value;
                    this.forceUpdate();
                };
                FinishPage.prototype.onWeightChanged = function () {
                    character_90.character.weight = this.weight.value;
                    this.forceUpdate();
                };
                FinishPage.prototype.onHairChanged = function () {
                    character_90.character.hair = this.hair.value;
                    this.forceUpdate();
                };
                FinishPage.prototype.onEyesChanged = function () {
                    character_90.character.eyes = this.eyes.value;
                    this.forceUpdate();
                };
                return FinishPage;
            }(React.Component));
            exports_123("FinishPage", FinishPage);
        }
    }
});
System.register("pages/alephFormPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "components/pageHeader", "components/button", "helpers/alephForms"], function(exports_124, context_124) {
    "use strict";
    var __moduleName = context_124 && context_124.id;
    var React, character_91, navigator_59, pageFactory_59, pageHeader_33, button_71, alephForms_2;
    var AlephFormPage;
    return {
        setters:[
            function (React_97) {
                React = React_97;
            },
            function (character_91_1) {
                character_91 = character_91_1;
            },
            function (navigator_59_1) {
                navigator_59 = navigator_59_1;
            },
            function (pageFactory_59_1) {
                pageFactory_59 = pageFactory_59_1;
            },
            function (pageHeader_33_1) {
                pageHeader_33 = pageHeader_33_1;
            },
            function (button_71_1) {
                button_71 = button_71_1;
            },
            function (alephForms_2_1) {
                alephForms_2 = alephForms_2_1;
            }],
        execute: function() {
            AlephFormPage = (function (_super) {
                __extends(AlephFormPage, _super);
                function AlephFormPage(props) {
                    _super.call(this, props);
                }
                AlephFormPage.prototype.render = function () {
                    var _this = this;
                    var aspects = alephForms_2.AlephFormsHelper.getForms().map(function (f, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header"}, f.name), React.createElement("td", null, f.description), React.createElement("td", null, React.createElement(button_71.Button, {className: "button-small", text: "Select", onClick: function () { _this.onAspectSelected(f.id); }}))));
                    });
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_33.PageHeader, {text: "ALEPH ASPECT"}), React.createElement("div", {className: "page-text"}, "Select your ALEPH aspect."), React.createElement("div", {className: "panel"}, React.createElement("table", {className: "selection-list"}, React.createElement("thead", null, React.createElement("tr", null, React.createElement("td", null), React.createElement("td", null), React.createElement("td", null))), React.createElement("tbody", null, aspects)))));
                };
                AlephFormPage.prototype.onAspectSelected = function (aspect) {
                    character_91.character.alephForm = aspect;
                    alephForms_2.AlephFormsHelper.applyForm(character_91.character.alephForm);
                    if (aspect === alephForms_2.AlephForm.Recreation) {
                        navigator_59.Navigation.navigateToPage(pageFactory_59.PageIdentity.BirthPlace);
                    }
                    else {
                        navigator_59.Navigation.navigateToPage(pageFactory_59.PageIdentity.AlephDetails);
                    }
                };
                return AlephFormPage;
            }(React.Component));
            exports_124("AlephFormPage", AlephFormPage);
        }
    }
});
System.register("pages/alephDetailsPage", ['react', "common/character", "common/navigator", "pages/pageFactory", "helpers/skills", "helpers/factions", "helpers/birthPlaces", "helpers/socialClasses", "components/pageHeader", "components/attributeImprovement", "components/electiveSkillImprovement", "components/button", "components/dialog"], function(exports_125, context_125) {
    "use strict";
    var __moduleName = context_125 && context_125.id;
    var React, character_92, navigator_60, pageFactory_60, skills_42, factions_27, birthPlaces_12, socialClasses_15, pageHeader_34, attributeImprovement_6, electiveSkillImprovement_8, button_72, dialog_20;
    var AlephDetailsPage;
    return {
        setters:[
            function (React_98) {
                React = React_98;
            },
            function (character_92_1) {
                character_92 = character_92_1;
            },
            function (navigator_60_1) {
                navigator_60 = navigator_60_1;
            },
            function (pageFactory_60_1) {
                pageFactory_60 = pageFactory_60_1;
            },
            function (skills_42_1) {
                skills_42 = skills_42_1;
            },
            function (factions_27_1) {
                factions_27 = factions_27_1;
            },
            function (birthPlaces_12_1) {
                birthPlaces_12 = birthPlaces_12_1;
            },
            function (socialClasses_15_1) {
                socialClasses_15 = socialClasses_15_1;
            },
            function (pageHeader_34_1) {
                pageHeader_34 = pageHeader_34_1;
            },
            function (attributeImprovement_6_1) {
                attributeImprovement_6 = attributeImprovement_6_1;
            },
            function (electiveSkillImprovement_8_1) {
                electiveSkillImprovement_8 = electiveSkillImprovement_8_1;
            },
            function (button_72_1) {
                button_72 = button_72_1;
            },
            function (dialog_20_1) {
                dialog_20 = dialog_20_1;
            }],
        execute: function() {
            AlephDetailsPage = (function (_super) {
                __extends(AlephDetailsPage, _super);
                function AlephDetailsPage(props) {
                    _super.call(this, props);
                    this._languages = [];
                    for (var i = 0; i < 5; i++) {
                        var lang = birthPlaces_12.BirthPlacesHelper.generateRandomLanguage(character_92.character.heritage, true, true)[0];
                        while (this._languages.indexOf(lang) > -1) {
                            lang = birthPlaces_12.BirthPlacesHelper.generateRandomLanguage(character_92.character.heritage, true, true)[0];
                        }
                        this._languages.push(lang);
                        this._attributesDone = false;
                        this._skillsDone = false;
                    }
                }
                AlephDetailsPage.prototype.render = function () {
                    var _this = this;
                    var langs = this._languages.map(function (l, i) {
                        return (React.createElement("div", {key: i}, l));
                    });
                    var next = character_92.character.faction === factions_27.Faction.Aleph
                        ? "HOME ENVIRONMENT"
                        : "SOCIAL STATUS";
                    return (React.createElement("div", {className: "page"}, React.createElement(pageHeader_34.PageHeader, {text: "ALEPH BIOFORM"}), React.createElement("div", {className: "page-text"}, "Pick two attributes and increase them by one each. Then select a skill to gain a rank in."), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "ATTRIBUTES"), React.createElement(attributeImprovement_6.AttributeImprovementCollection, {points: 2, mode: attributeImprovement_6.AttributeImprovementCollectionMode.Aleph, onDone: function (done) { _this._attributesDone = done; }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "SKILLS"), React.createElement(electiveSkillImprovement_8.ElectiveSkillImprovement, {points: 1, skills: skills_42.SkillsHelper.getSkills(), onDone: function (done) { _this._skillsDone = done; }})), React.createElement("div", {className: "panel"}, React.createElement("div", {className: "header-small"}, "KNOWN LANGUAGES"), langs), React.createElement(button_72.Button, {text: next, className: "button-next", onClick: function () { return _this.onNext(); }})));
                };
                AlephDetailsPage.prototype.onNext = function () {
                    if (!this._attributesDone) {
                        dialog_20.Dialog.show("You have not distributed all attribute points.");
                        return;
                    }
                    if (!this._skillsDone) {
                        dialog_20.Dialog.show("You have not distributed all skill points.");
                        return;
                    }
                    this._languages.forEach(function (lang) { character_92.character.addLanguage(lang); });
                    if (character_92.character.faction === factions_27.Faction.Aleph) {
                        character_92.character.socialClass = socialClasses_15.SocialClass.Elite;
                        socialClasses_15.SocialClassesHelper.applySocialClass(socialClasses_15.SocialClass.Elite);
                        navigator_60.Navigation.navigateToPage(pageFactory_60.PageIdentity.HomeEnvironment);
                    }
                    else {
                        navigator_60.Navigation.navigateToPage(pageFactory_60.PageIdentity.SocialClass);
                    }
                };
                return AlephDetailsPage;
            }(React.Component));
            exports_125("AlephDetailsPage", AlephDetailsPage);
        }
    }
});
System.register("pages/exportTestPage", ['react', "common/character", "common/characterSerializer", "helpers/youthEvents", "helpers/adolescenceEvents", "helpers/careerEvents", "common/eventModel", "helpers/talents"], function(exports_126, context_126) {
    "use strict";
    var __moduleName = context_126 && context_126.id;
    var React, character_93, characterSerializer_2, youthEvents_5, adolescenceEvents_4, careerEvents_8, eventModel_9, talents_6;
    var ExportTestPage;
    return {
        setters:[
            function (React_99) {
                React = React_99;
            },
            function (character_93_1) {
                character_93 = character_93_1;
            },
            function (characterSerializer_2_1) {
                characterSerializer_2 = characterSerializer_2_1;
            },
            function (youthEvents_5_1) {
                youthEvents_5 = youthEvents_5_1;
            },
            function (adolescenceEvents_4_1) {
                adolescenceEvents_4 = adolescenceEvents_4_1;
            },
            function (careerEvents_8_1) {
                careerEvents_8 = careerEvents_8_1;
            },
            function (eventModel_9_1) {
                eventModel_9 = eventModel_9_1;
            },
            function (talents_6_1) {
                talents_6 = talents_6_1;
            }],
        execute: function() {
            ExportTestPage = (function (_super) {
                __extends(ExportTestPage, _super);
                function ExportTestPage(props) {
                    _super.call(this, props);
                    character_93.character.name = "Hubba Bubba";
                    character_93.character.age = 34;
                    character_93.character.gender = 0; // Male
                    character_93.character.host = 0; // Human
                    character_93.character.hostName = "Birth";
                    character_93.character.faction = character_93.character.heritage = 4; // Yu Jing
                    character_93.character.skills[22].expertise++; // Tech
                    character_93.character.skills[22].focus++;
                    character_93.character.skills[22].isSignature = true;
                    character_93.character.skills[8].expertise++; // Education
                    character_93.character.birthPlace = "Human Edge";
                    character_93.character.homeland = "On the Edge";
                    character_93.character.attributes[0].value++; // Agility
                    character_93.character.attributes[1].value++; // Awareness
                    character_93.character.skills[22].expertise++;
                    character_93.character.addLanguage("Yujingyu");
                    character_93.character.socialClass = 2; // Middle Class
                    character_93.character.attributes[6].value++; // Willpower
                    character_93.character.earnings = 3;
                    character_93.character.homeEnvironment = 5; // High Society
                    character_93.character.attributes[6].value++;
                    character_93.character.skills[11].expertise++; // Lifestyle
                    character_93.character.youthEvent = new youthEvents_5.YouthEventModel("Moved to a new planet (Paradiso)");
                    character_93.character.education = 4;
                    character_93.character.attributes[1].value += 2;
                    character_93.character.attributes[4].value++;
                    character_93.character.attributes[6].value--;
                    character_93.character.skills[8].focus++;
                    character_93.character.skills[13].expertise++; // Observation
                    character_93.character.skills[15].expertise++; // Pilot
                    character_93.character.skills[22].focus++;
                    character_93.character.skills[23].expertise++; // Thievery
                    character_93.character.skills[10].expertise++; // Hacking
                    character_93.character.skills[9].expertise++; // Extraplanetary
                    character_93.character.addEquipment("Powered Multitool");
                    character_93.character.addEquipment("Repair Kit (with 5 Parts)");
                    character_93.character.adolescenceEvent = new adolescenceEvents_4.AdolescenceEventModel(new eventModel_9.EventModel("A rogue retrovirus rewrote your genetics, causing a shift in aggression and fight/ flight reactions.", "Quick With a Fist", "You fly off the handle faster than people can react. You gain +1d20 to Surprise tests in Mexican standoffs and similar situations."));
                    character_93.character.careers.push(new character_93.CharacterCareer(35, 7)); // TAG Pilot
                    character_93.character.attributes[0].value += 2;
                    character_93.character.attributes[1].value += 2;
                    character_93.character.attributes[2].value++;
                    character_93.character.attributes[3].value += 2;
                    character_93.character.attributes[4].value += 2;
                    character_93.character.attributes[6].value++;
                    character_93.character.skills[15].focus++;
                    character_93.character.skills[22].expertise++;
                    character_93.character.skills[4].expertise++; // Ballistics
                    character_93.character.skills[7].expertise++; // Discipline
                    character_93.character.skills[21].expertise++; // Survival
                    character_93.character.addEquipment("Inlaid Palm Circuitry");
                    character_93.character.addEquipment("Pistol");
                    character_93.character.addEquipment("2 Standard Reloads");
                    character_93.character.socialClass++;
                    character_93.character.careerEvents.push(new careerEvents_8.CareerEventModel(new eventModel_9.EventModel("You discover that you have a talent for something you’d never considered trying before. What happened? Why do you love it?", "", "You discover that you have a talent for something you’d never considered trying before.What happened? Why do you love it?")));
                    character_93.character.skills[5].expertise++; // Close Combat
                    character_93.character.careers.push(new character_93.CharacterCareer(35, 6)); // TAG Pilot
                    character_93.character.skills[15].expertise++;
                    character_93.character.skills[22].focus++;
                    character_93.character.skills[4].focus++;
                    character_93.character.skills[7].focus++;
                    character_93.character.skills[9].focus++;
                    character_93.character.careerEvents.push(new careerEvents_8.CareerEventModel(new eventModel_9.EventModel("Your employer hits a slump and is struggling to make ends meet.", "Hubba", "Your employer hits a slump and is struggling to make ends meet.")));
                    character_93.character.earnings--;
                    character_93.character.infinityPoints = 3;
                    character_93.character.attributes[6].value++;
                    character_93.character.attributes[3].value++;
                    character_93.character.skills[12].expertise++;
                    character_93.character.skills[12].focus++;
                    character_93.character.assets = 7;
                    character_93.character.addEquipment("Fake ID 2");
                    character_93.character.addEquipment("Assault Hacking Device");
                    character_93.character.addEquipment("1 Eagle Reload");
                    character_93.character.addEquipment("3 Adhesive Shell Reloads");
                    var skills = talents_6.TalentsHelper.getTalents();
                    for (var skill in skills) {
                        var talents = skills[skill];
                        talents.forEach(function (t) {
                            character_93.character.addTalent(t.name);
                        });
                    }
                    character_93.character.description = "Nice and warm";
                    character_93.character.height = "180cm";
                    character_93.character.weight = "80kg";
                    character_93.character.hair = "Blonde";
                    character_93.character.eyes = "Blue";
                    character_93.character.morale = 1;
                    character_93.character.bts = 2;
                    character_93.character.armorBonus = 0;
                    character_93.character.geist.attributes[4].value = 5;
                    character_93.character.geist.skills[10].expertise = 1;
                }
                ExportTestPage.prototype.render = function () {
                    var characterData = characterSerializer_2.CharacterSerializer.serialize(character_93.character);
                    var data = characterData.map(function (d, i) {
                        return (React.createElement("input", {type: "hidden", name: d.name, value: d.value}));
                    });
                    var url = "http://localhost:52355/api/sheet";
                    //const url = "http://sheet-svc.frostkin-development.se/api/sheet";
                    return (React.createElement("div", {className: "page"}, React.createElement("div", {className: "panel button-container"}, React.createElement("form", {action: url, method: "post", encType: "application/x-www-form-urlencoded", target: "_blank"}, data, React.createElement("input", {type: "submit", value: "Export PDF"})), React.createElement("br", null))));
                };
                return ExportTestPage;
            }(React.Component));
            exports_126("ExportTestPage", ExportTestPage);
        }
    }
});
System.register("pages/pageFactory", ['react', "pages/pathSelectionPage", "pages/birthHostPage", "pages/birthHostPage_LifePoints", "pages/hostBodyPage", "pages/factionPage", "pages/heritagePage", "pages/factionDetailsPage", "pages/birthPlacePage", "pages/birthPlaceDetailsPage", "pages/tribePage", "pages/tribeDetailsPage", "pages/sissoluWatersPage", "pages/sissoluWatersDetailsPage", "pages/socialClassPage", "pages/homeEnvironmentPage", "pages/statusDetailsPage", "pages/youthEventPage", "pages/youthEventDetailsPage", "pages/educationPage", "pages/educationDetailsPage", "pages/adolescenceEventPage", "pages/eventDetailsPage", "pages/afterEventPage", "pages/careerPage", "pages/hazardFailPage", "pages/careerDetailsPage", "pages/careerEventPage", "pages/firedPage", "pages/criminalRecordPage", "pages/geistPage", "pages/finalTweaksPage", "pages/finalTweaks_LifePoints", "pages/finishPage", "pages/alephFormPage", "pages/alephDetailsPage", "pages/exportTestPage"], function(exports_127, context_127) {
    "use strict";
    var __moduleName = context_127 && context_127.id;
    var React, pathSelectionPage_1, birthHostPage_1, birthHostPage_LifePoints_1, hostBodyPage_1, factionPage_1, heritagePage_1, factionDetailsPage_1, birthPlacePage_1, birthPlaceDetailsPage_1, tribePage_1, tribeDetailsPage_1, sissoluWatersPage_1, sissoluWatersDetailsPage_1, socialClassPage_1, homeEnvironmentPage_1, statusDetailsPage_1, youthEventPage_1, youthEventDetailsPage_1, educationPage_1, educationDetailsPage_1, adolescenceEventPage_1, eventDetailsPage_1, afterEventPage_1, careerPage_1, hazardFailPage_1, careerDetailsPage_1, careerEventPage_1, firedPage_1, criminalRecordPage_1, geistPage_1, finalTweaksPage_1, finalTweaks_LifePoints_1, finishPage_1, alephFormPage_1, alephDetailsPage_1, exportTestPage_1;
    var PageIdentity, PageFactory;
    return {
        setters:[
            function (React_100) {
                React = React_100;
            },
            function (pathSelectionPage_1_1) {
                pathSelectionPage_1 = pathSelectionPage_1_1;
            },
            function (birthHostPage_1_1) {
                birthHostPage_1 = birthHostPage_1_1;
            },
            function (birthHostPage_LifePoints_1_1) {
                birthHostPage_LifePoints_1 = birthHostPage_LifePoints_1_1;
            },
            function (hostBodyPage_1_1) {
                hostBodyPage_1 = hostBodyPage_1_1;
            },
            function (factionPage_1_1) {
                factionPage_1 = factionPage_1_1;
            },
            function (heritagePage_1_1) {
                heritagePage_1 = heritagePage_1_1;
            },
            function (factionDetailsPage_1_1) {
                factionDetailsPage_1 = factionDetailsPage_1_1;
            },
            function (birthPlacePage_1_1) {
                birthPlacePage_1 = birthPlacePage_1_1;
            },
            function (birthPlaceDetailsPage_1_1) {
                birthPlaceDetailsPage_1 = birthPlaceDetailsPage_1_1;
            },
            function (tribePage_1_1) {
                tribePage_1 = tribePage_1_1;
            },
            function (tribeDetailsPage_1_1) {
                tribeDetailsPage_1 = tribeDetailsPage_1_1;
            },
            function (sissoluWatersPage_1_1) {
                sissoluWatersPage_1 = sissoluWatersPage_1_1;
            },
            function (sissoluWatersDetailsPage_1_1) {
                sissoluWatersDetailsPage_1 = sissoluWatersDetailsPage_1_1;
            },
            function (socialClassPage_1_1) {
                socialClassPage_1 = socialClassPage_1_1;
            },
            function (homeEnvironmentPage_1_1) {
                homeEnvironmentPage_1 = homeEnvironmentPage_1_1;
            },
            function (statusDetailsPage_1_1) {
                statusDetailsPage_1 = statusDetailsPage_1_1;
            },
            function (youthEventPage_1_1) {
                youthEventPage_1 = youthEventPage_1_1;
            },
            function (youthEventDetailsPage_1_1) {
                youthEventDetailsPage_1 = youthEventDetailsPage_1_1;
            },
            function (educationPage_1_1) {
                educationPage_1 = educationPage_1_1;
            },
            function (educationDetailsPage_1_1) {
                educationDetailsPage_1 = educationDetailsPage_1_1;
            },
            function (adolescenceEventPage_1_1) {
                adolescenceEventPage_1 = adolescenceEventPage_1_1;
            },
            function (eventDetailsPage_1_1) {
                eventDetailsPage_1 = eventDetailsPage_1_1;
            },
            function (afterEventPage_1_1) {
                afterEventPage_1 = afterEventPage_1_1;
            },
            function (careerPage_1_1) {
                careerPage_1 = careerPage_1_1;
            },
            function (hazardFailPage_1_1) {
                hazardFailPage_1 = hazardFailPage_1_1;
            },
            function (careerDetailsPage_1_1) {
                careerDetailsPage_1 = careerDetailsPage_1_1;
            },
            function (careerEventPage_1_1) {
                careerEventPage_1 = careerEventPage_1_1;
            },
            function (firedPage_1_1) {
                firedPage_1 = firedPage_1_1;
            },
            function (criminalRecordPage_1_1) {
                criminalRecordPage_1 = criminalRecordPage_1_1;
            },
            function (geistPage_1_1) {
                geistPage_1 = geistPage_1_1;
            },
            function (finalTweaksPage_1_1) {
                finalTweaksPage_1 = finalTweaksPage_1_1;
            },
            function (finalTweaks_LifePoints_1_1) {
                finalTweaks_LifePoints_1 = finalTweaks_LifePoints_1_1;
            },
            function (finishPage_1_1) {
                finishPage_1 = finishPage_1_1;
            },
            function (alephFormPage_1_1) {
                alephFormPage_1 = alephFormPage_1_1;
            },
            function (alephDetailsPage_1_1) {
                alephDetailsPage_1 = alephDetailsPage_1_1;
            },
            function (exportTestPage_1_1) {
                exportTestPage_1 = exportTestPage_1_1;
            }],
        execute: function() {
            (function (PageIdentity) {
                PageIdentity[PageIdentity["PathSelection"] = 0] = "PathSelection";
                PageIdentity[PageIdentity["BirthHost"] = 1] = "BirthHost";
                PageIdentity[PageIdentity["BirthHost_LifePoints"] = 2] = "BirthHost_LifePoints";
                PageIdentity[PageIdentity["HostBody"] = 3] = "HostBody";
                PageIdentity[PageIdentity["Faction"] = 4] = "Faction";
                PageIdentity[PageIdentity["Heritage"] = 5] = "Heritage";
                PageIdentity[PageIdentity["FactionDetails"] = 6] = "FactionDetails";
                PageIdentity[PageIdentity["BirthPlace"] = 7] = "BirthPlace";
                PageIdentity[PageIdentity["BirthPlaceDetails"] = 8] = "BirthPlaceDetails";
                PageIdentity[PageIdentity["Tribe"] = 9] = "Tribe";
                PageIdentity[PageIdentity["TribeDetails"] = 10] = "TribeDetails";
                PageIdentity[PageIdentity["SissoluWaters"] = 11] = "SissoluWaters";
                PageIdentity[PageIdentity["SissoluWatersDetails"] = 12] = "SissoluWatersDetails";
                PageIdentity[PageIdentity["SocialClass"] = 13] = "SocialClass";
                PageIdentity[PageIdentity["HomeEnvironment"] = 14] = "HomeEnvironment";
                PageIdentity[PageIdentity["StatusDetails"] = 15] = "StatusDetails";
                PageIdentity[PageIdentity["YouthEvent"] = 16] = "YouthEvent";
                PageIdentity[PageIdentity["YouthEventDetails"] = 17] = "YouthEventDetails";
                PageIdentity[PageIdentity["Education"] = 18] = "Education";
                PageIdentity[PageIdentity["EducationDetails"] = 19] = "EducationDetails";
                PageIdentity[PageIdentity["AdolescenceEvent"] = 20] = "AdolescenceEvent";
                PageIdentity[PageIdentity["EventDetails"] = 21] = "EventDetails";
                PageIdentity[PageIdentity["Career1"] = 22] = "Career1";
                PageIdentity[PageIdentity["Career2"] = 23] = "Career2";
                PageIdentity[PageIdentity["Career3"] = 24] = "Career3";
                PageIdentity[PageIdentity["Career4"] = 25] = "Career4";
                PageIdentity[PageIdentity["HazardFail1"] = 26] = "HazardFail1";
                PageIdentity[PageIdentity["HazardFail2"] = 27] = "HazardFail2";
                PageIdentity[PageIdentity["HazardFail3"] = 28] = "HazardFail3";
                PageIdentity[PageIdentity["HazardFail4"] = 29] = "HazardFail4";
                PageIdentity[PageIdentity["CareerDetails1"] = 30] = "CareerDetails1";
                PageIdentity[PageIdentity["CareerDetails2"] = 31] = "CareerDetails2";
                PageIdentity[PageIdentity["CareerDetails3"] = 32] = "CareerDetails3";
                PageIdentity[PageIdentity["CareerDetails4"] = 33] = "CareerDetails4";
                PageIdentity[PageIdentity["CareerEvent1"] = 34] = "CareerEvent1";
                PageIdentity[PageIdentity["CareerEvent2"] = 35] = "CareerEvent2";
                PageIdentity[PageIdentity["CareerEvent3"] = 36] = "CareerEvent3";
                PageIdentity[PageIdentity["CareerEvent4"] = 37] = "CareerEvent4";
                PageIdentity[PageIdentity["ExtendedCareerEvent1"] = 38] = "ExtendedCareerEvent1";
                PageIdentity[PageIdentity["ExtendedCareerEvent2"] = 39] = "ExtendedCareerEvent2";
                PageIdentity[PageIdentity["ExtendedCareerEvent3"] = 40] = "ExtendedCareerEvent3";
                PageIdentity[PageIdentity["ExtendedCareerEvent4"] = 41] = "ExtendedCareerEvent4";
                PageIdentity[PageIdentity["Geist"] = 42] = "Geist";
                PageIdentity[PageIdentity["FinalTweaks"] = 43] = "FinalTweaks";
                PageIdentity[PageIdentity["FinalTweaks_LifePoints"] = 44] = "FinalTweaks_LifePoints";
                PageIdentity[PageIdentity["Finish"] = 45] = "Finish";
                PageIdentity[PageIdentity["AlepForms"] = 46] = "AlepForms";
                PageIdentity[PageIdentity["AlephDetails"] = 47] = "AlephDetails";
                PageIdentity[PageIdentity["AfterEvent"] = 48] = "AfterEvent";
                PageIdentity[PageIdentity["Fired"] = 49] = "Fired";
                PageIdentity[PageIdentity["CriminalRecord"] = 50] = "CriminalRecord";
                PageIdentity[PageIdentity["ExportTest"] = 51] = "ExportTest";
            })(PageIdentity || (PageIdentity = {}));
            exports_127("PageIdentity", PageIdentity);
            PageFactory = (function () {
                function PageFactory() {
                    this.factories = {};
                    this.factories = {};
                    this.factories[PageIdentity.PathSelection] = function () { return React.createElement(pathSelectionPage_1.PathSelectionPage, null); };
                    this.factories[PageIdentity.BirthHost] = function () { return React.createElement(birthHostPage_1.BirthHostPage, null); };
                    this.factories[PageIdentity.BirthHost_LifePoints] = function () { return React.createElement(birthHostPage_LifePoints_1.BirthHostPage_LifePoints, null); };
                    this.factories[PageIdentity.HostBody] = function () { return React.createElement(hostBodyPage_1.HostBodyPage, null); };
                    this.factories[PageIdentity.Faction] = function () { return React.createElement(factionPage_1.FactionPage, null); };
                    this.factories[PageIdentity.Heritage] = function () { return React.createElement(heritagePage_1.HeritagePage, null); };
                    this.factories[PageIdentity.FactionDetails] = function () { return React.createElement(factionDetailsPage_1.FactionDetailsPage, null); };
                    this.factories[PageIdentity.BirthPlace] = function () { return React.createElement(birthPlacePage_1.BirthPlacePage, null); };
                    this.factories[PageIdentity.BirthPlaceDetails] = function () { return React.createElement(birthPlaceDetailsPage_1.BirthPlaceDetailsPage, null); };
                    this.factories[PageIdentity.Tribe] = function () { return React.createElement(tribePage_1.TribePage, null); };
                    this.factories[PageIdentity.TribeDetails] = function () { return React.createElement(tribeDetailsPage_1.TribeDetailsPage, null); };
                    this.factories[PageIdentity.SissoluWaters] = function () { return React.createElement(sissoluWatersPage_1.SissoluWatersPage, null); };
                    this.factories[PageIdentity.SissoluWatersDetails] = function () { return React.createElement(sissoluWatersDetailsPage_1.SissoluWatersDetailsPage, null); };
                    this.factories[PageIdentity.SocialClass] = function () { return React.createElement(socialClassPage_1.SocialClassPage, null); };
                    this.factories[PageIdentity.HomeEnvironment] = function () { return React.createElement(homeEnvironmentPage_1.HomeEnvironmentPage, null); };
                    this.factories[PageIdentity.StatusDetails] = function () { return React.createElement(statusDetailsPage_1.StatusDetailsPage, null); };
                    this.factories[PageIdentity.YouthEvent] = function () { return React.createElement(youthEventPage_1.YouthEventPage, null); };
                    this.factories[PageIdentity.YouthEventDetails] = function () { return React.createElement(youthEventDetailsPage_1.YouthEventDetailsPage, null); };
                    this.factories[PageIdentity.Education] = function () { return React.createElement(educationPage_1.EducationPage, null); };
                    this.factories[PageIdentity.EducationDetails] = function () { return React.createElement(educationDetailsPage_1.EducationDetailsPage, null); };
                    this.factories[PageIdentity.AdolescenceEvent] = function () { return React.createElement(adolescenceEventPage_1.AdolescenceEventPage, null); };
                    this.factories[PageIdentity.EventDetails] = function () { return React.createElement(eventDetailsPage_1.EventDetailsPage, null); };
                    this.factories[PageIdentity.AfterEvent] = function () { return React.createElement(afterEventPage_1.AfterEventPage, null); };
                    this.factories[PageIdentity.Career1] = function () { return React.createElement(careerPage_1.CareerPage, null); };
                    this.factories[PageIdentity.Career2] = function () { return React.createElement(careerPage_1.CareerPage, null); };
                    this.factories[PageIdentity.Career3] = function () { return React.createElement(careerPage_1.CareerPage, null); };
                    this.factories[PageIdentity.Career4] = function () { return React.createElement(careerPage_1.CareerPage, null); };
                    this.factories[PageIdentity.HazardFail1] = function () { return React.createElement(hazardFailPage_1.HazardFailPage, null); };
                    this.factories[PageIdentity.HazardFail2] = function () { return React.createElement(hazardFailPage_1.HazardFailPage, null); };
                    this.factories[PageIdentity.HazardFail3] = function () { return React.createElement(hazardFailPage_1.HazardFailPage, null); };
                    this.factories[PageIdentity.HazardFail4] = function () { return React.createElement(hazardFailPage_1.HazardFailPage, null); };
                    this.factories[PageIdentity.CareerDetails1] = function () { return React.createElement(careerDetailsPage_1.CareerDetailsPage, null); };
                    this.factories[PageIdentity.CareerDetails2] = function () { return React.createElement(careerDetailsPage_1.CareerDetailsPage, null); };
                    this.factories[PageIdentity.CareerDetails3] = function () { return React.createElement(careerDetailsPage_1.CareerDetailsPage, null); };
                    this.factories[PageIdentity.CareerDetails4] = function () { return React.createElement(careerDetailsPage_1.CareerDetailsPage, null); };
                    this.factories[PageIdentity.CareerEvent1] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.CareerEvent2] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.CareerEvent3] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.CareerEvent4] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.ExtendedCareerEvent1] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.ExtendedCareerEvent2] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.ExtendedCareerEvent3] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.ExtendedCareerEvent4] = function () { return React.createElement(careerEventPage_1.CareerEventPage, null); };
                    this.factories[PageIdentity.Fired] = function () { return React.createElement(firedPage_1.FiredPage, null); };
                    this.factories[PageIdentity.CriminalRecord] = function () { return React.createElement(criminalRecordPage_1.CriminalRecordPage, null); };
                    this.factories[PageIdentity.Geist] = function () { return React.createElement(geistPage_1.GeistPage, null); };
                    this.factories[PageIdentity.FinalTweaks] = function () { return React.createElement(finalTweaksPage_1.FinalTweaksPage, null); };
                    this.factories[PageIdentity.FinalTweaks_LifePoints] = function () { return React.createElement(finalTweaks_LifePoints_1.FinalTweaks_LifePoints, null); };
                    this.factories[PageIdentity.Finish] = function () { return React.createElement(finishPage_1.FinishPage, null); };
                    this.factories[PageIdentity.AlepForms] = function () { return React.createElement(alephFormPage_1.AlephFormPage, null); };
                    this.factories[PageIdentity.AlephDetails] = function () { return React.createElement(alephDetailsPage_1.AlephDetailsPage, null); };
                    this.factories[PageIdentity.ExportTest] = function () { return React.createElement(exportTestPage_1.ExportTestPage, null); };
                }
                PageFactory.prototype.createPage = function (page) {
                    var factory = this.factories[page];
                    if (!factory) {
                        console.error("Unable to find a page factory for " + PageIdentity[page]);
                    }
                    return factory ? factory() : undefined; // TODO: return an error page instead of undefined
                };
                return PageFactory;
            }());
            exports_127("PageFactory", PageFactory);
        }
    }
});
System.register("common/navigator", ["common/eventChannel", "common/extensions", "common/character"], function(exports_128, context_128) {
    "use strict";
    var __moduleName = context_128 && context_128.id;
    var eventChannel_2, extensions_1, character_94;
    var Navigator, Navigation;
    return {
        setters:[
            function (eventChannel_2_1) {
                eventChannel_2 = eventChannel_2_1;
            },
            function (extensions_1_1) {
                extensions_1 = extensions_1_1;
            },
            function (character_94_1) {
                character_94 = character_94_1;
            }],
        execute: function() {
            Navigator = (function () {
                function Navigator() {
                }
                Navigator.prototype.navigateToPage = function (page) {
                    Promise.resolve()
                        .then(function () {
                        var page = document.getElementsByClassName('page')[0];
                        page.classList.add('page-out');
                    })
                        .then(function (b) { return extensions_1.DelayPromise(400)
                        .then(function () {
                        character_94.character.update();
                        eventChannel_2.Events.signal(eventChannel_2.EventIdentity.ShowPage, page);
                    }); });
                };
                Navigator.prototype.navigateToHistoryPage = function (page) {
                    Promise.resolve()
                        .then(function () {
                        var page = document.getElementsByClassName('page')[0];
                        page.classList.add('page-out');
                    })
                        .then(function (b) { return extensions_1.DelayPromise(400)
                        .then(function () {
                        character_94.character.update();
                        eventChannel_2.Events.signal(eventChannel_2.EventIdentity.HistoryBack, page);
                    }); });
                };
                return Navigator;
            }());
            exports_128("Navigator", Navigator);
            exports_128("Navigation", Navigation = new Navigator());
        }
    }
});
System.register("components/footer", ['react', "common/character", "common/eventChannel"], function(exports_129, context_129) {
    "use strict";
    var __moduleName = context_129 && context_129.id;
    var React, character_95, eventChannel_3;
    var Footer;
    return {
        setters:[
            function (React_101) {
                React = React_101;
            },
            function (character_95_1) {
                character_95 = character_95_1;
            },
            function (eventChannel_3_1) {
                eventChannel_3 = eventChannel_3_1;
            }],
        execute: function() {
            Footer = (function (_super) {
                __extends(Footer, _super);
                function Footer(props) {
                    _super.call(this, props);
                    this._isSheetVisible = false;
                    this.state = {
                        buttonClass: "arrow-right"
                    };
                }
                Footer.prototype.render = function () {
                    var _this = this;
                    return (React.createElement("div", null, React.createElement("div", {className: "page-footer"}, React.createElement("div", {id: "history"}), React.createElement("div", {className: "page-footer-icon-container", onClick: function () { _this.showHistory(); }}, React.createElement("img", {src: "res/img/history.png", className: "page-footer-icon", title: "History"})), React.createElement("div", {className: "page-footer-icon-container", onClick: function () { _this.showCharacter(); }}, React.createElement("img", {src: "res/img/sheet.png", className: "page-footer-icon", title: "View character"})), React.createElement("div", {className: "lifepoints-container"}, React.createElement("span", {id: "lifepoints", className: "lifepoints"}, character_95.character.lifePoints), React.createElement("div", {className: "lifepoints-label"}, "Life Points")), React.createElement("div", {className: "page-footer-icon-container", onClick: function () { _this.feedback(); }}, React.createElement("img", {src: "res/img/feedback.png", className: "page-footer-icon", title: "Provide feedback"}))), React.createElement("div", {className: "version"}, "v1.19615")));
                };
                Footer.prototype.showHistory = function () {
                    eventChannel_3.Events.signal(eventChannel_3.EventIdentity.ShowHistory);
                };
                Footer.prototype.showCharacter = function () {
                    this._isSheetVisible = !this._isSheetVisible;
                    var sheetBg = document.getElementById("sheet-bg");
                    var sheet = document.getElementsByClassName("sheet-container")[0];
                    var content = [
                        document.getElementsByClassName("content")[0],
                        document.getElementsByClassName("content-container-fullscreen")[0]
                    ];
                    if (this._isSheetVisible) {
                        sheetBg.style.display = "";
                        sheet.classList.add("sheet-container-visible");
                        sheet.classList.remove("sheet-container-hidden");
                        content.forEach(function (el) {
                            el.classList.add("content-nudged");
                        });
                        this.setState({ buttonClass: "arrow-right arrow-left" });
                        eventChannel_3.Events.signal(eventChannel_3.EventIdentity.UpdateCharacter);
                    }
                    else {
                        sheetBg.style.display = "none";
                        sheet.classList.add("sheet-container-hidden");
                        sheet.classList.remove("sheet-container-visible");
                        content.forEach(function (el) {
                            el.classList.remove("content-nudged");
                        });
                        this.setState({ buttonClass: "arrow-right" });
                    }
                };
                Footer.prototype.feedback = function () {
                    var url = "https://goo.gl/forms/z8eOMDViQYig8FM73";
                    var win = window.open(url, "_blank");
                    if (win) {
                        win.focus();
                    }
                    else {
                        alert("Please allow popup windows for this site.");
                    }
                };
                return Footer;
            }(React.Component));
            exports_129("Footer", Footer);
        }
    }
});
System.register("pages/pageBase", ['react', "pages/pageFactory", "components/footer", "components/characterSheet"], function(exports_130, context_130) {
    "use strict";
    var __moduleName = context_130 && context_130.id;
    var React, pageFactory_61, footer_1, characterSheet_2;
    var Page;
    return {
        setters:[
            function (React_102) {
                React = React_102;
            },
            function (pageFactory_61_1) {
                pageFactory_61 = pageFactory_61_1;
            },
            function (footer_1_1) {
                footer_1 = footer_1_1;
            },
            function (characterSheet_2_1) {
                characterSheet_2 = characterSheet_2_1;
            }],
        execute: function() {
            Page = (function (_super) {
                __extends(Page, _super);
                function Page(props) {
                    _super.call(this, props);
                    this.pageFactory = new pageFactory_61.PageFactory();
                }
                Page.prototype.render = function () {
                    var page = this.props.page;
                    var pageContent = this.pageFactory.createPage(page);
                    return (React.createElement("div", null, React.createElement("div", null, pageContent), React.createElement(characterSheet_2.CharacterSheet, null), React.createElement(footer_1.Footer, null)));
                };
                return Page;
            }(React.Component));
            exports_130("Page", Page);
        }
    }
});
System.register("components/history", ['react', "common/character", "common/navigator", "common/eventChannel", "pages/pageFactory"], function(exports_131, context_131) {
    "use strict";
    var __moduleName = context_131 && context_131.id;
    var React, character_96, navigator_61, eventChannel_4, pageFactory_62;
    var History;
    return {
        setters:[
            function (React_103) {
                React = React_103;
            },
            function (character_96_1) {
                character_96 = character_96_1;
            },
            function (navigator_61_1) {
                navigator_61 = navigator_61_1;
            },
            function (eventChannel_4_1) {
                eventChannel_4 = eventChannel_4_1;
            },
            function (pageFactory_62_1) {
                pageFactory_62 = pageFactory_62_1;
            }],
        execute: function() {
            History = (function (_super) {
                __extends(History, _super);
                function History() {
                    var _this = this;
                    _super.call(this);
                    this.state = {
                        showHistory: false
                    };
                    eventChannel_4.Events.listen(eventChannel_4.EventIdentity.ShowHistory, function () {
                        _this.toggleHistory();
                    });
                }
                History.prototype.render = function () {
                    var _this = this;
                    var pages = character_96.character.steps.length > 0
                        ? character_96.character.steps.map(function (step, i) {
                            var name = _this.getPageName(step.page);
                            if (name.length > 0) {
                                return (React.createElement("div", {className: "history-item", key: i, onClick: function () { return _this.goToPage(step.page); }}, name));
                            }
                        })
                        : React.createElement("div", null, "No history.");
                    var history = this.state.showHistory
                        ? React.createElement("div", {className: "history"}, pages)
                        : undefined;
                    return (React.createElement("div", null, history));
                };
                History.prototype.toggleHistory = function () {
                    this.setState({
                        showHistory: !this.state.showHistory
                    });
                };
                History.prototype.goToPage = function (page) {
                    this.toggleHistory();
                    character_96.character.goToStep(page);
                    navigator_61.Navigation.navigateToHistoryPage(page);
                };
                History.prototype.getPageName = function (page) {
                    switch (page) {
                        case pageFactory_62.PageIdentity.PathSelection: return "Path Selection";
                        case pageFactory_62.PageIdentity.BirthHost: return "Birth Host";
                        case pageFactory_62.PageIdentity.BirthHost_LifePoints: return "Birth Host (Life Points)";
                        case pageFactory_62.PageIdentity.HostBody: return "Host Body";
                        case pageFactory_62.PageIdentity.Faction: return "Faction";
                        case pageFactory_62.PageIdentity.FactionDetails: return "Faction Details";
                        case pageFactory_62.PageIdentity.BirthPlace: return "Birthplace";
                        case pageFactory_62.PageIdentity.BirthPlaceDetails: return "Birthplace Details";
                        case pageFactory_62.PageIdentity.Tribe: return "Tribe";
                        case pageFactory_62.PageIdentity.TribeDetails: return "Tribe Details";
                        case pageFactory_62.PageIdentity.SissoluWaters: return "Sissolu Waters";
                        case pageFactory_62.PageIdentity.SissoluWatersDetails: return "Sissolu Waters Details";
                        case pageFactory_62.PageIdentity.SocialClass: return "Social Class";
                        case pageFactory_62.PageIdentity.HomeEnvironment: return "Home Environment";
                        case pageFactory_62.PageIdentity.StatusDetails: return "Status Details";
                        case pageFactory_62.PageIdentity.YouthEvent: return character_96.character.host === 4 ? "Fry Event" : "Youth Event";
                        case pageFactory_62.PageIdentity.YouthEventDetails: return character_96.character.host === 4 ? "Fry Event Details" : "Youth Event Details";
                        case pageFactory_62.PageIdentity.Education: return "Education";
                        case pageFactory_62.PageIdentity.EducationDetails: return "Education Details";
                        case pageFactory_62.PageIdentity.AdolescenceEvent: return "Adolescence Event";
                        case pageFactory_62.PageIdentity.Career1: return "Career";
                        case pageFactory_62.PageIdentity.Career2: return "Career";
                        case pageFactory_62.PageIdentity.Career3: return "Career";
                        case pageFactory_62.PageIdentity.Career4: return "Career";
                        case pageFactory_62.PageIdentity.HazardFail1: return "Hazard Failure";
                        case pageFactory_62.PageIdentity.HazardFail2: return "Hazard Failure";
                        case pageFactory_62.PageIdentity.HazardFail3: return "Hazard Failure";
                        case pageFactory_62.PageIdentity.HazardFail4: return "Hazard Failure";
                        case pageFactory_62.PageIdentity.CareerDetails1: return "Career Details";
                        case pageFactory_62.PageIdentity.CareerDetails2: return "Career Details";
                        case pageFactory_62.PageIdentity.CareerDetails3: return "Career Details";
                        case pageFactory_62.PageIdentity.CareerDetails4: return "Career Details";
                        case pageFactory_62.PageIdentity.CareerEvent1: return "Career Event";
                        case pageFactory_62.PageIdentity.CareerEvent2: return "Career Event";
                        case pageFactory_62.PageIdentity.CareerEvent3: return "Career Event";
                        case pageFactory_62.PageIdentity.CareerEvent4: return "Career Event";
                        case pageFactory_62.PageIdentity.Geist: return "Geist";
                        case pageFactory_62.PageIdentity.FinalTweaks: return "Final Tweaks";
                        case pageFactory_62.PageIdentity.FinalTweaks_LifePoints: return "Final Tweaks (Life Points)";
                        case pageFactory_62.PageIdentity.Finish: return "Finish";
                        case pageFactory_62.PageIdentity.AlepForms: return "Aleph Forms";
                        case pageFactory_62.PageIdentity.AlephDetails: return "Aleph Form Details";
                        case pageFactory_62.PageIdentity.AfterEvent: return "After Event";
                        case pageFactory_62.PageIdentity.Fired: return "Fired";
                        case pageFactory_62.PageIdentity.CriminalRecord: return "Criminal Record";
                    }
                    return "";
                };
                return History;
            }(React.Component));
            exports_131("History", History);
        }
    }
});
System.register("app", ['react', 'react-dom', "common/character", "common/eventChannel", "pages/pageFactory", "pages/pageBase", "components/history"], function(exports_132, context_132) {
    "use strict";
    var __moduleName = context_132 && context_132.id;
    var React, ReactDOM, character_97, eventChannel_5, pageFactory_63, pageBase_1, history_1;
    var Application, app;
    return {
        setters:[
            function (React_104) {
                React = React_104;
            },
            function (ReactDOM_2) {
                ReactDOM = ReactDOM_2;
            },
            function (character_97_1) {
                character_97 = character_97_1;
            },
            function (eventChannel_5_1) {
                eventChannel_5 = eventChannel_5_1;
            },
            function (pageFactory_63_1) {
                pageFactory_63 = pageFactory_63_1;
            },
            function (pageBase_1_1) {
                pageBase_1 = pageBase_1_1;
            },
            function (history_1_1) {
                history_1 = history_1_1;
            }],
        execute: function() {
            Application = (function () {
                function Application() {
                    this._activePage = pageFactory_63.PageIdentity.PathSelection;
                }
                Application.prototype.start = function () {
                    var _this = this;
                    this.initialize()
                        .then(function () { return _this.render(); });
                };
                Application.prototype.initialize = function () {
                    var _this = this;
                    eventChannel_5.Events.listen(eventChannel_5.EventIdentity.ShowPage, function (page) {
                        _this.activatePage(page, false);
                    });
                    eventChannel_5.Events.listen(eventChannel_5.EventIdentity.HistoryBack, function (page) {
                        _this.activatePage(page, true);
                    });
                    return Promise.resolve();
                };
                Application.prototype.activatePage = function (page, isHistory) {
                    var body = document.getElementsByTagName("html")[0];
                    if (body) {
                        body.scrollTop = 0;
                    }
                    if (page === this._activePage) {
                        var pageComponent = document.getElementsByClassName('page')[0];
                        pageComponent.classList.remove('page-out');
                        return;
                    }
                    this._activePage = page;
                    if (!isHistory) {
                        character_97.character.saveStep(this._activePage);
                    }
                    this.render();
                };
                Application.prototype.render = function () {
                    ReactDOM.render(React.createElement(pageBase_1.Page, {
                        page: this._activePage
                    }), document.getElementById("app"));
                    ReactDOM.render(React.createElement(history_1.History), document.getElementById("history"));
                };
                return Application;
            }());
            app = new Application();
            app.start();
        }
    }
});
System.register("components/electiveSkillList", ['react', "common/character", "helpers/skills", "components/checkBox"], function(exports_133, context_133) {
    "use strict";
    var __moduleName = context_133 && context_133.id;
    var React, character_98, skills_43, checkBox_6;
    var ElectiveSkill, ElectiveSkillList;
    return {
        setters:[
            function (React_105) {
                React = React_105;
            },
            function (character_98_1) {
                character_98 = character_98_1;
            },
            function (skills_43_1) {
                skills_43 = skills_43_1;
            },
            function (checkBox_6_1) {
                checkBox_6 = checkBox_6_1;
            }],
        execute: function() {
            ElectiveSkill = (function (_super) {
                __extends(ElectiveSkill, _super);
                function ElectiveSkill(props) {
                    _super.call(this, props);
                }
                ElectiveSkill.prototype.render = function () {
                    var _a = this.props, skill = _a.skill, onSelected = _a.onSelected, isSelected = _a.isSelected;
                    var skillExpertise = character_98.character.skills[skill].expertise;
                    var skillFocus = character_98.character.skills[skill].focus;
                    return (React.createElement("table", {className: "skill-container", cellPadding: "0", cellSpacing: "0"}, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", {className: "skill-name", width: "250"}, skills_43.SkillsHelper.getSkillName(skill)), React.createElement("td", null, React.createElement(checkBox_6.CheckBox, {value: skill, onChanged: function (val) { return onSelected(val); }, isChecked: isSelected}))), React.createElement("tr", null, React.createElement("td", {className: "skill-expertise"}, "Expertise"), React.createElement("td", null, skillExpertise)), React.createElement("tr", null, React.createElement("td", {className: "skill-focus"}, "Focus"), React.createElement("td", null, skillFocus)))));
                };
                return ElectiveSkill;
            }(React.Component));
            ElectiveSkillList = (function (_super) {
                __extends(ElectiveSkillList, _super);
                function ElectiveSkillList(props) {
                    _super.call(this, props);
                    this._selected = [];
                }
                ElectiveSkillList.prototype.render = function () {
                    var _this = this;
                    var skills = this.props.skills.map(function (s, i) {
                        var isSelected = _this._selected.indexOf(s) > -1;
                        return (React.createElement(ElectiveSkill, {key: i, skill: s, isSelected: isSelected, onSelected: function (skill) { return _this.onSelect(skill); }}));
                    });
                    return (React.createElement("div", null, skills));
                };
                ElectiveSkillList.prototype.onSelect = function (skill) {
                    var n = this._selected.indexOf(skill);
                    if (n < 0) {
                        this._selected.push(skill);
                        if (this._selected.length === 3) {
                            this.deselect(this._selected[0]);
                            this._selected.splice(0, 1);
                        }
                        this.select(skill);
                    }
                    else {
                        this._selected.splice(n, 1);
                        this.deselect(skill);
                    }
                    if (this.props.onUpdated) {
                        this.props.onUpdated(this._selected);
                    }
                    else {
                        this.forceUpdate();
                    }
                };
                ElectiveSkillList.prototype.select = function (skill) {
                    character_98.character.skills[skill].expertise++;
                    character_98.character.skills[skill].focus++;
                };
                ElectiveSkillList.prototype.deselect = function (skill) {
                    character_98.character.skills[skill].expertise--;
                    character_98.character.skills[skill].focus--;
                };
                return ElectiveSkillList;
            }(React.Component));
            exports_133("ElectiveSkillList", ElectiveSkillList);
        }
    }
});
System.register("components/languageList", ['react'], function(exports_134, context_134) {
    "use strict";
    var __moduleName = context_134 && context_134.id;
    var React;
    var LanguageList;
    return {
        setters:[
            function (React_106) {
                React = React_106;
            }],
        execute: function() {
            LanguageList = (function (_super) {
                __extends(LanguageList, _super);
                function LanguageList(props) {
                    _super.call(this, props);
                    this._languages = [];
                    this._points = props.points;
                }
                LanguageList.prototype.render = function () {
                    /*const homelands = HomelandsHelper.getHomelands();
                    let languages: string[] = [];
            
                    homelands.forEach(homeland => {
                        homeland.languageOptions.forEach(lang => {
                            if (!character.hasLanguage(lang) && languages.indexOf(lang) === -1) {
                                languages.push(lang);
                            }
                        });
                    });
            
                    languages = languages.sort((a, b) => a.localeCompare(b));
            
                    const langs = languages.map((l, i) => {
                        const isSelected = this._languages.indexOf(l) > -1;
            
                        return (
                            <tr key={i}>
                                <td>{l}</td>
                                <td>
                                    <CheckBox value={l} onChanged={val => this.onLanguageSelected(val) } isChecked={isSelected} />
                                </td>
                            </tr>
                        )
                    });
            
                    return (
                        <table className="selection-list" cellSpacing="0" cellPadding="0">
                            <tbody>
                                {langs}
                            </tbody>
                        </table>
                    );*/
                    return undefined;
                };
                LanguageList.prototype.onLanguageSelected = function (lang) {
                    this._languages.push(lang);
                    if (this._languages.length === this._points + 1) {
                        this._languages.splice(0, 1);
                    }
                    this.props.onSelection(this._languages);
                };
                return LanguageList;
            }(React.Component));
            exports_134("LanguageList", LanguageList);
            ;
        }
    }
});
System.register("components/talentSelection", ['react', "common/character", "helpers/skills", "helpers/talents", "components/checkBox"], function(exports_135, context_135) {
    "use strict";
    var __moduleName = context_135 && context_135.id;
    var React, character_99, skills_44, talents_7, checkBox_7;
    var TalentSelection;
    return {
        setters:[
            function (React_107) {
                React = React_107;
            },
            function (character_99_1) {
                character_99 = character_99_1;
            },
            function (skills_44_1) {
                skills_44 = skills_44_1;
            },
            function (talents_7_1) {
                talents_7 = talents_7_1;
            },
            function (checkBox_7_1) {
                checkBox_7 = checkBox_7_1;
            }],
        execute: function() {
            TalentSelection = (function (_super) {
                __extends(TalentSelection, _super);
                function TalentSelection(props) {
                    _super.call(this, props);
                    this._talents = !this.props.talents
                        ? talents_7.TalentsHelper.getTalentsForSkills(skills_44.SkillsHelper.getSkills().slice())
                        : this.props.talents.map(function (t) {
                            if (t.indexOf('(') > -1) {
                                t = t.substr(0, t.indexOf('(') - 1);
                            }
                            if (t.indexOf('[') > -1) {
                                t = t.substr(0, t.indexOf('[') - 1);
                            }
                            var talent = talents_7.TalentsHelper.getTalent(t);
                            return new talents_7.TalentViewModel(talent.name, character_99.character.hasTalent(t) ? character_99.character.talents[t].rank : 1, talent.maxRank > 1, talent.description, talents_7.TalentsHelper.getSkillForTalent(t));
                        });
                    this._talents = this._talents.filter(function (value, index, array) { return !array.filter(function (v, i) { return value.name === v.name && i < index; }).length; });
                    this._talent = this._talents[0].name;
                    this._index = 0;
                }
                TalentSelection.prototype.render = function () {
                    var _this = this;
                    var talents = this._talents.map(function (t, i) {
                        return (React.createElement("tr", {key: i}, React.createElement("td", {className: "selection-header-small"}, t.name), React.createElement("td", null, t.description), React.createElement("td", null, React.createElement(checkBox_7.CheckBox, {value: t.name, isChecked: _this._talent === t.name, onChanged: function (val) {
                            _this.selectTalent(val);
                        }}))));
                    });
                    return (React.createElement("table", {className: "selection-list"}, React.createElement("tbody", null, talents)));
                };
                TalentSelection.prototype.selectTalent = function (talent) {
                    this._talent = talent;
                    this.props.onSelection(this._talent);
                    this.forceUpdate();
                };
                return TalentSelection;
            }(React.Component));
            exports_135("TalentSelection", TalentSelection);
        }
    }
});
